

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Nov 23 19:51:19 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	dabs	1,0x7E,2
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0008                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000D                     	;# 
   127  000E                     	;# 
   128  000E                     	;# 
   129  000F                     	;# 
   130  0010                     	;# 
   131  0011                     	;# 
   132  0012                     	;# 
   133  0013                     	;# 
   134  0014                     	;# 
   135  0015                     	;# 
   136  0015                     	;# 
   137  0016                     	;# 
   138  0017                     	;# 
   139  0018                     	;# 
   140  0019                     	;# 
   141  001A                     	;# 
   142  001B                     	;# 
   143  001B                     	;# 
   144  001C                     	;# 
   145  001D                     	;# 
   146  001E                     	;# 
   147  001F                     	;# 
   148  0081                     	;# 
   149  0085                     	;# 
   150  0086                     	;# 
   151  0087                     	;# 
   152  0088                     	;# 
   153  0089                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  0091                     	;# 
   158  0092                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0098                     	;# 
   162  0099                     	;# 
   163  009C                     	;# 
   164  009D                     	;# 
   165  009E                     	;# 
   166  009F                     	;# 
   167  010C                     	;# 
   168  010D                     	;# 
   169  010E                     	;# 
   170  010F                     	;# 
   171  018C                     	;# 
   172  018D                     	;# 
   173  0000                     	;# 
   174  0001                     	;# 
   175  0002                     	;# 
   176  0003                     	;# 
   177  0004                     	;# 
   178  0005                     	;# 
   179  0006                     	;# 
   180  0007                     	;# 
   181  0008                     	;# 
   182  0009                     	;# 
   183  000A                     	;# 
   184  000B                     	;# 
   185  000C                     	;# 
   186  000D                     	;# 
   187  000E                     	;# 
   188  000E                     	;# 
   189  000F                     	;# 
   190  0010                     	;# 
   191  0011                     	;# 
   192  0012                     	;# 
   193  0013                     	;# 
   194  0014                     	;# 
   195  0015                     	;# 
   196  0015                     	;# 
   197  0016                     	;# 
   198  0017                     	;# 
   199  0018                     	;# 
   200  0019                     	;# 
   201  001A                     	;# 
   202  001B                     	;# 
   203  001B                     	;# 
   204  001C                     	;# 
   205  001D                     	;# 
   206  001E                     	;# 
   207  001F                     	;# 
   208  0081                     	;# 
   209  0085                     	;# 
   210  0086                     	;# 
   211  0087                     	;# 
   212  0088                     	;# 
   213  0089                     	;# 
   214  008C                     	;# 
   215  008D                     	;# 
   216  008E                     	;# 
   217  0091                     	;# 
   218  0092                     	;# 
   219  0093                     	;# 
   220  0094                     	;# 
   221  0098                     	;# 
   222  0099                     	;# 
   223  009C                     	;# 
   224  009D                     	;# 
   225  009E                     	;# 
   226  009F                     	;# 
   227  010C                     	;# 
   228  010D                     	;# 
   229  010E                     	;# 
   230  010F                     	;# 
   231  018C                     	;# 
   232  018D                     	;# 
   233  0000                     	;# 
   234  0001                     	;# 
   235  0002                     	;# 
   236  0003                     	;# 
   237  0004                     	;# 
   238  0005                     	;# 
   239  0006                     	;# 
   240  0007                     	;# 
   241  0008                     	;# 
   242  0009                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000D                     	;# 
   247  000E                     	;# 
   248  000E                     	;# 
   249  000F                     	;# 
   250  0010                     	;# 
   251  0011                     	;# 
   252  0012                     	;# 
   253  0013                     	;# 
   254  0014                     	;# 
   255  0015                     	;# 
   256  0015                     	;# 
   257  0016                     	;# 
   258  0017                     	;# 
   259  0018                     	;# 
   260  0019                     	;# 
   261  001A                     	;# 
   262  001B                     	;# 
   263  001B                     	;# 
   264  001C                     	;# 
   265  001D                     	;# 
   266  001E                     	;# 
   267  001F                     	;# 
   268  0081                     	;# 
   269  0085                     	;# 
   270  0086                     	;# 
   271  0087                     	;# 
   272  0088                     	;# 
   273  0089                     	;# 
   274  008C                     	;# 
   275  008D                     	;# 
   276  008E                     	;# 
   277  0091                     	;# 
   278  0092                     	;# 
   279  0093                     	;# 
   280  0094                     	;# 
   281  0098                     	;# 
   282  0099                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  009F                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  018C                     	;# 
   292  018D                     	;# 
   293  0000                     	;# 
   294  0001                     	;# 
   295  0002                     	;# 
   296  0003                     	;# 
   297  0004                     	;# 
   298  0005                     	;# 
   299  0006                     	;# 
   300  0007                     	;# 
   301  0008                     	;# 
   302  0009                     	;# 
   303  000A                     	;# 
   304  000B                     	;# 
   305  000C                     	;# 
   306  000D                     	;# 
   307  000E                     	;# 
   308  000E                     	;# 
   309  000F                     	;# 
   310  0010                     	;# 
   311  0011                     	;# 
   312  0012                     	;# 
   313  0013                     	;# 
   314  0014                     	;# 
   315  0015                     	;# 
   316  0015                     	;# 
   317  0016                     	;# 
   318  0017                     	;# 
   319  0018                     	;# 
   320  0019                     	;# 
   321  001A                     	;# 
   322  001B                     	;# 
   323  001B                     	;# 
   324  001C                     	;# 
   325  001D                     	;# 
   326  001E                     	;# 
   327  001F                     	;# 
   328  0081                     	;# 
   329  0085                     	;# 
   330  0086                     	;# 
   331  0087                     	;# 
   332  0088                     	;# 
   333  0089                     	;# 
   334  008C                     	;# 
   335  008D                     	;# 
   336  008E                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009C                     	;# 
   344  009D                     	;# 
   345  009E                     	;# 
   346  009F                     	;# 
   347  010C                     	;# 
   348  010D                     	;# 
   349  010E                     	;# 
   350  010F                     	;# 
   351  018C                     	;# 
   352  018D                     	;# 
   353  0000                     	;# 
   354  0001                     	;# 
   355  0002                     	;# 
   356  0003                     	;# 
   357  0004                     	;# 
   358  0005                     	;# 
   359  0006                     	;# 
   360  0007                     	;# 
   361  0008                     	;# 
   362  0009                     	;# 
   363  000A                     	;# 
   364  000B                     	;# 
   365  000C                     	;# 
   366  000D                     	;# 
   367  000E                     	;# 
   368  000E                     	;# 
   369  000F                     	;# 
   370  0010                     	;# 
   371  0011                     	;# 
   372  0012                     	;# 
   373  0013                     	;# 
   374  0014                     	;# 
   375  0015                     	;# 
   376  0015                     	;# 
   377  0016                     	;# 
   378  0017                     	;# 
   379  0018                     	;# 
   380  0019                     	;# 
   381  001A                     	;# 
   382  001B                     	;# 
   383  001B                     	;# 
   384  001C                     	;# 
   385  001D                     	;# 
   386  001E                     	;# 
   387  001F                     	;# 
   388  0081                     	;# 
   389  0085                     	;# 
   390  0086                     	;# 
   391  0087                     	;# 
   392  0088                     	;# 
   393  0089                     	;# 
   394  008C                     	;# 
   395  008D                     	;# 
   396  008E                     	;# 
   397  0091                     	;# 
   398  0092                     	;# 
   399  0093                     	;# 
   400  0094                     	;# 
   401  0098                     	;# 
   402  0099                     	;# 
   403  009C                     	;# 
   404  009D                     	;# 
   405  009E                     	;# 
   406  009F                     	;# 
   407  010C                     	;# 
   408  010D                     	;# 
   409  010E                     	;# 
   410  010F                     	;# 
   411  018C                     	;# 
   412  018D                     	;# 
   413  0000                     	;# 
   414  0001                     	;# 
   415  0002                     	;# 
   416  0003                     	;# 
   417  0004                     	;# 
   418  0005                     	;# 
   419  0006                     	;# 
   420  0007                     	;# 
   421  0008                     	;# 
   422  0009                     	;# 
   423  000A                     	;# 
   424  000B                     	;# 
   425  000C                     	;# 
   426  000D                     	;# 
   427  000E                     	;# 
   428  000E                     	;# 
   429  000F                     	;# 
   430  0010                     	;# 
   431  0011                     	;# 
   432  0012                     	;# 
   433  0013                     	;# 
   434  0014                     	;# 
   435  0015                     	;# 
   436  0015                     	;# 
   437  0016                     	;# 
   438  0017                     	;# 
   439  0018                     	;# 
   440  0019                     	;# 
   441  001A                     	;# 
   442  001B                     	;# 
   443  001B                     	;# 
   444  001C                     	;# 
   445  001D                     	;# 
   446  001E                     	;# 
   447  001F                     	;# 
   448  0081                     	;# 
   449  0085                     	;# 
   450  0086                     	;# 
   451  0087                     	;# 
   452  0088                     	;# 
   453  0089                     	;# 
   454  008C                     	;# 
   455  008D                     	;# 
   456  008E                     	;# 
   457  0091                     	;# 
   458  0092                     	;# 
   459  0093                     	;# 
   460  0094                     	;# 
   461  0098                     	;# 
   462  0099                     	;# 
   463  009C                     	;# 
   464  009D                     	;# 
   465  009E                     	;# 
   466  009F                     	;# 
   467  010C                     	;# 
   468  010D                     	;# 
   469  010E                     	;# 
   470  010F                     	;# 
   471  018C                     	;# 
   472  018D                     	;# 
   473                           
   474                           	psect	strings
   475  0800                     __pstrings:	
   476  0800                     stringtab:	
   477  0800                     __stringtab:	
   478  0800                     stringcode:	
   479                           ;	String table - string pointers are 1 byte each
   480                           
   481  0800                     stringdir:	
   482  0800  3008               	movlw	high stringdir
   483  0801  008A               	movwf	10
   484  0802  0804               	movf	4,w
   485  0803  0A84               	incf	4,f
   486  0804  0782               	addwf	2,f
   487  0805                     __stringbase:	
   488  0805  3400               	retlw	0
   489  0806                     __end_of__stringtab:	
   490  0806                     main@send_1:	
   491  0806  3461               	retlw	97
   492  0807  3462               	retlw	98
   493  0808  3463               	retlw	99
   494  0809  3464               	retlw	100
   495  080A  3465               	retlw	101
   496  080B  3466               	retlw	102
   497  080C  3467               	retlw	103
   498  080D  3468               	retlw	104
   499  080E  3469               	retlw	105
   500  080F  346B               	retlw	107
   501  0810  346C               	retlw	108
   502  0811  346D               	retlw	109
   503  0812  346E               	retlw	110
   504  0813  346F               	retlw	111
   505  0814  3470               	retlw	112
   506  0815                     __end_ofmain@send_1:	
   507  0815                     main@send_2:	
   508  0815  3470               	retlw	112
   509  0816  3471               	retlw	113
   510  0817  3472               	retlw	114
   511  0818  3473               	retlw	115
   512  0819  3474               	retlw	116
   513  081A  3475               	retlw	117
   514  081B  3476               	retlw	118
   515  081C  3477               	retlw	119
   516  081D  3478               	retlw	120
   517  081E  3479               	retlw	121
   518  081F  347A               	retlw	122
   519  0820  3431               	retlw	49
   520  0821  3432               	retlw	50
   521  0822  3433               	retlw	51
   522  0823  3434               	retlw	52
   523  0824                     __end_ofmain@send_2:	
   524  0824                     uint16_to_byte_array@bit_mask:	
   525  0824  34FF               	retlw	255
   526  0825  3400               	retlw	0
   527  0826                     __end_ofuint16_to_byte_array@bit_mask:	
   528  0826                     bit_shift@bit_mask_for_l:	
   529  0826  3403               	retlw	3
   530  0827                     __end_ofbit_shift@bit_mask_for_l:	
   531  001F                     _ADCON0	set	31
   532  001F                     _ADCON0bits	set	31
   533  001E                     _ADRESH	set	30
   534  0005                     _PORTA	set	5
   535  0005                     _PORTAbits	set	5
   536  0006                     _PORTB	set	6
   537  0007                     _PORTC	set	7
   538  0007                     _PORTCbits	set	7
   539  0008                     _PORTD	set	8
   540  0009                     _PORTE	set	9
   541  001A                     _RCREG	set	26
   542  0018                     _RCSTA	set	24
   543  0013                     _SSPBUF	set	19
   544  0014                     _SSPCONbits	set	20
   545  0019                     _TXREG	set	25
   546  0037                     _RB7	set	55
   547  0065                     _RCIF	set	101
   548  0064                     _TXIF	set	100
   549  009F                     _ADCON1	set	159
   550  009E                     _ADRESL	set	158
   551  0099                     _SPBRG	set	153
   552  0094                     _SSPSTATbits	set	148
   553  0085                     _TRISA	set	133
   554  0085                     _TRISAbits	set	133
   555  0086                     _TRISB	set	134
   556  0087                     _TRISC	set	135
   557  0087                     _TRISCbits	set	135
   558  0088                     _TRISD	set	136
   559  0089                     _TRISE	set	137
   560  0098                     _TXSTA	set	152
   561  0437                     _TRISB7	set	1079
   562  043E                     _TRISC6	set	1086
   563  043F                     _TRISC7	set	1087
   564  0827                     STR_1:	
   565  0827  344D               	retlw	77	;'M'
   566  0828  3461               	retlw	97	;'a'
   567  0829  3473               	retlw	115	;'s'
   568  082A  3474               	retlw	116	;'t'
   569  082B  3465               	retlw	101	;'e'
   570  082C  3472               	retlw	114	;'r'
   571  082D  3420               	retlw	32	;' '
   572  082E  3450               	retlw	80	;'P'
   573  082F  3472               	retlw	114	;'r'
   574  0830  346F               	retlw	111	;'o'
   575  0831  3467               	retlw	103	;'g'
   576  0832  3472               	retlw	114	;'r'
   577  0833  3461               	retlw	97	;'a'
   578  0834  346D               	retlw	109	;'m'
   579  0835  3420               	retlw	32	;' '
   580  0836  3453               	retlw	83	;'S'
   581  0837  3474               	retlw	116	;'t'
   582  0838  3461               	retlw	97	;'a'
   583  0839  3472               	retlw	114	;'r'
   584  083A  3474               	retlw	116	;'t'
   585  083B  3421               	retlw	33	;'!'
   586  083C  340D               	retlw	13
   587  083D  340A               	retlw	10
   588  083E  3400               	retlw	0
   589  083C                     
   590                           ; #config settings
   591  0000                     
   592                           	psect	cinit
   593  07F2                     start_initialization:	
   594  07F2                     __initialization:	
   595                           
   596                           ; Clear objects allocated to BANK1
   597  07F2  1683               	bsf	3,5	;RP0=1, select bank1
   598  07F3  1303               	bcf	3,6	;RP1=0, select bank1
   599  07F4  01E9               	clrf	__pbssBANK1& (0+127)
   600                           
   601                           ; Clear objects allocated to BANK3
   602  07F5  1783               	bsf	3,7	;select IRP bank2
   603  07F6  3090               	movlw	low __pbssBANK3
   604  07F7  0084               	movwf	4
   605  07F8  30D2               	movlw	low (__pbssBANK3+66)
   606  07F9  120A  158A  2183   	fcall	clear_ram0
   607  07FC                     end_of_initialization:	
   608                           ;End of C runtime variable initialization code
   609                           
   610  07FC                     __end_of__initialization:	
   611  07FC  0183               	clrf	3
   612  07FD  120A  118A  2BFF   	ljmp	_main	;jump to C main() function
   613                           
   614                           	psect	bssBANK1
   615  00E9                     __pbssBANK1:	
   616  00E9                     _rx_packet_status:	
   617  00E9                     	ds	1
   618                           
   619                           	psect	bssBANK3
   620  0190                     __pbssBANK3:	
   621  0190                     _tx_packet:	
   622  0190                     	ds	33
   623  01B1                     _rx_packet:	
   624  01B1                     	ds	33
   625                           
   626                           	psect	clrtext
   627  0983                     clear_ram0:	
   628                           ;	Called with FSR containing the base address, and
   629                           ;	W with the last address+1
   630                           
   631  0983  0064               	clrwdt	;clear the watchdog before getting into this loop
   632  0984                     clrloop0:	
   633  0984  0180               	clrf	0	;clear RAM location pointed to by FSR
   634  0985  0A84               	incf	4,f	;increment pointer
   635  0986  0604               	xorwf	4,w	;XOR with final address
   636  0987  1903               	btfsc	3,2	;have we reached the end yet?
   637  0988  3400               	retlw	0	;all done for this memory range, return
   638  0989  0604               	xorwf	4,w	;XOR again to restore value
   639  098A  2984               	goto	clrloop0	;do the next byte
   640                           
   641                           	psect	cstackBANK1
   642  00A0                     __pcstackBANK1:	
   643  00A0                     get_pt@r2:	
   644                           
   645                           ; 3 bytes @ 0x0
   646  00A0                     	ds	3
   647  00A3                     get_pt@t2:	
   648                           
   649                           ; 3 bytes @ 0x3
   650  00A3                     	ds	3
   651  00A6                     get_pt@b:	
   652                           
   653                           ; 3 bytes @ 0x6
   654  00A6                     	ds	3
   655  00A9                     _get_pt$1099:	
   656                           
   657                           ; 3 bytes @ 0x9
   658  00A9                     	ds	3
   659  00AC                     _get_pt$1101:	
   660                           
   661                           ; 3 bytes @ 0xC
   662  00AC                     	ds	3
   663  00AF                     _get_pt$1102:	
   664                           
   665                           ; 3 bytes @ 0xF
   666  00AF                     	ds	3
   667  00B2                     get_pt@r1:	
   668                           
   669                           ; 3 bytes @ 0x12
   670  00B2                     	ds	3
   671  00B5                     _get_pt$1100:	
   672                           
   673                           ; 3 bytes @ 0x15
   674  00B5                     	ds	3
   675  00B8                     get_pt@t1:	
   676                           
   677                           ; 3 bytes @ 0x18
   678  00B8                     	ds	3
   679  00BB                     get_pt@a:	
   680                           
   681                           ; 3 bytes @ 0x1B
   682  00BB                     	ds	3
   683  00BE                     main@r_data:	
   684                           
   685                           ; 30 bytes @ 0x1E
   686  00BE                     	ds	30
   687  00DC                     main@temp:	
   688                           
   689                           ; 3 bytes @ 0x3C
   690  00DC                     	ds	3
   691  00DF                     main@temp_buf_c:	
   692                           
   693                           ; 5 bytes @ 0x3F
   694  00DF                     	ds	5
   695  00E4                     main@temp_c:	
   696                           
   697                           ; 1 bytes @ 0x44
   698  00E4                     	ds	1
   699  00E5                     main@r_data_type:	
   700                           
   701                           ; 1 bytes @ 0x45
   702  00E5                     	ds	1
   703  00E6                     main@cmd:	
   704                           
   705                           ; 1 bytes @ 0x46
   706  00E6                     	ds	1
   707  00E7                     main@r_data_len:	
   708                           
   709                           ; 1 bytes @ 0x47
   710  00E7                     	ds	1
   711  00E8                     main@i:	
   712                           
   713                           ; 1 bytes @ 0x48
   714  00E8                     	ds	1
   715                           
   716                           	psect	cstackCOMMON
   717  0070                     __pcstackCOMMON:	
   718  0070                     ?_pic_port_init:	
   719  0070                     ??_pic_port_init:	
   720                           ; 0 bytes @ 0x0
   721                           
   722  0070                     ??_ad_con_init:	
   723                           ; 0 bytes @ 0x0
   724                           
   725  0070                     ?_uart_init:	
   726                           ; 0 bytes @ 0x0
   727                           
   728  0070                     ??_uart_init:	
   729                           ; 0 bytes @ 0x0
   730                           
   731  0070                     ?_spi_master_start:	
   732                           ; 0 bytes @ 0x0
   733                           
   734  0070                     ??_spi_master_start:	
   735                           ; 0 bytes @ 0x0
   736                           
   737  0070                     ?_put_char:	
   738                           ; 0 bytes @ 0x0
   739                           
   740  0070                     ??_put_char:	
   741                           ; 0 bytes @ 0x0
   742                           
   743  0070                     ?_put_string:	
   744                           ; 0 bytes @ 0x0
   745                           
   746  0070                     ?_receive_data_master:	
   747                           ; 0 bytes @ 0x0
   748                           
   749  0070                     ?_uint8_data_set:	
   750                           ; 0 bytes @ 0x0
   751                           
   752  0070                     ?_spi_master_send:	
   753                           ; 0 bytes @ 0x0
   754                           
   755  0070                     ?_tx_packet_clear:	
   756                           ; 0 bytes @ 0x0
   757                           
   758  0070                     ??_tx_packet_clear:	
   759                           ; 0 bytes @ 0x0
   760                           
   761  0070                     ?_flag_check:	
   762                           ; 0 bytes @ 0x0
   763                           
   764  0070                     ?_spi_master_receive:	
   765                           ; 0 bytes @ 0x0
   766                           
   767  0070                     ?_rx_packet_clear:	
   768                           ; 0 bytes @ 0x0
   769                           
   770  0070                     ??_rx_packet_clear:	
   771                           ; 0 bytes @ 0x0
   772                           
   773  0070                     ?_uint16_to_byte_array:	
   774                           ; 0 bytes @ 0x0
   775                           
   776  0070                     ?_double_to_byte_array:	
   777                           ; 0 bytes @ 0x0
   778                           
   779  0070                     ?convert@process_1:	
   780                           ; 0 bytes @ 0x0
   781                           
   782  0070                     ?_bit_shift:	
   783                           ; 0 bytes @ 0x0
   784                           
   785  0070                     ?___bmul:	
   786                           ; 0 bytes @ 0x0
   787                           
   788  0070                     ?_ad_con_init:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0070                     ?_main:	
   792                           ; 2 bytes @ 0x0
   793                           
   794  0070                     ?___wmul:	
   795                           ; 2 bytes @ 0x0
   796                           
   797  0070                     ?___awdiv:	
   798                           ; 2 bytes @ 0x0
   799                           
   800  0070                     ?___awmod:	
   801                           ; 2 bytes @ 0x0
   802                           
   803  0070                     ?___ftpack:	
   804                           ; 2 bytes @ 0x0
   805                           
   806  0070                     ?___fttol:	
   807                           ; 3 bytes @ 0x0
   808                           
   809  0070                     uint8_data_set@data_len:	
   810                           ; 4 bytes @ 0x0
   811                           
   812  0070                     uint16_to_byte_array@p_data_array:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0070                     double_to_byte_array@p_data_array:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0070                     spi_master_send@data:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0070                     put_char@byte_data:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0070                     convert@process_1@p_flag:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0070                     bit_shift@p_adres:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0070                     ___bmul@multiplicand:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0070                     spi_master_receive@p_get:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0070                     ___wmul@multiplier:	
   837                           ; 2 bytes @ 0x0
   838                           
   839  0070                     ___awdiv@divisor:	
   840                           ; 2 bytes @ 0x0
   841                           
   842  0070                     ___awmod@divisor:	
   843                           ; 2 bytes @ 0x0
   844                           
   845  0070                     ___ftpack@arg:	
   846                           ; 2 bytes @ 0x0
   847                           
   848  0070                     ___fttol@f1:	
   849                           ; 3 bytes @ 0x0
   850                           
   851                           
   852                           ; 3 bytes @ 0x0
   853  0070                     	ds	1
   854  0071                     ??_put_string:	
   855  0071                     ??_uint8_data_set:	
   856                           ; 0 bytes @ 0x1
   857                           
   858  0071                     ??_spi_master_send:	
   859                           ; 0 bytes @ 0x1
   860                           
   861  0071                     ??_uint16_to_byte_array:	
   862                           ; 0 bytes @ 0x1
   863                           
   864  0071                     ??_double_to_byte_array:	
   865                           ; 0 bytes @ 0x1
   866                           
   867  0071                     ??_bit_shift:	
   868                           ; 0 bytes @ 0x1
   869                           
   870  0071                     ??___bmul:	
   871                           ; 0 bytes @ 0x1
   872                           
   873  0071                     tx_packet_clear@i:	
   874                           ; 0 bytes @ 0x1
   875                           
   876  0071                     rx_packet_clear@i:	
   877                           ; 1 bytes @ 0x1
   878                           
   879  0071                     convert@process_1@p_buf:	
   880                           ; 1 bytes @ 0x1
   881                           
   882                           
   883                           ; 1 bytes @ 0x1
   884  0071                     	ds	1
   885  0072                     ?_extract_receive_packet:	
   886  0072                     ??_spi_master_receive:	
   887                           ; 0 bytes @ 0x2
   888                           
   889  0072                     ??convert@process_1:	
   890                           ; 0 bytes @ 0x2
   891                           
   892  0072                     extract_receive_packet@p_data_buf:	
   893                           ; 0 bytes @ 0x2
   894                           
   895  0072                     uint8_data_set@p_data:	
   896                           ; 1 bytes @ 0x2
   897                           
   898  0072                     spi_master_send@buf:	
   899                           ; 1 bytes @ 0x2
   900                           
   901  0072                     put_string@str:	
   902                           ; 1 bytes @ 0x2
   903                           
   904  0072                     ___bmul@product:	
   905                           ; 1 bytes @ 0x2
   906                           
   907  0072                     ___wmul@multiplicand:	
   908                           ; 1 bytes @ 0x2
   909                           
   910  0072                     ___awdiv@dividend:	
   911                           ; 2 bytes @ 0x2
   912                           
   913  0072                     ___awmod@dividend:	
   914                           ; 2 bytes @ 0x2
   915                           
   916                           
   917                           ; 2 bytes @ 0x2
   918  0072                     	ds	1
   919  0073                     extract_receive_packet@p_data_len_buf:	
   920  0073                     spi_master_send@destination:	
   921                           ; 1 bytes @ 0x3
   922                           
   923  0073                     spi_master_receive@buf:	
   924                           ; 1 bytes @ 0x3
   925                           
   926  0073                     ___bmul@multiplier:	
   927                           ; 1 bytes @ 0x3
   928                           
   929  0073                     ___ftpack@exp:	
   930                           ; 1 bytes @ 0x3
   931                           
   932  0073                     double_to_byte_array@converter:	
   933                           ; 1 bytes @ 0x3
   934                           
   935                           
   936                           ; 4 bytes @ 0x3
   937  0073                     	ds	1
   938  0074                     ?_send_data_master:	
   939  0074                     ??_extract_receive_packet:	
   940                           ; 0 bytes @ 0x4
   941                           
   942  0074                     ??___wmul:	
   943                           ; 0 bytes @ 0x4
   944                           
   945  0074                     ??___awdiv:	
   946                           ; 0 bytes @ 0x4
   947                           
   948  0074                     ??___awmod:	
   949                           ; 0 bytes @ 0x4
   950                           
   951  0074                     ??___fttol:	
   952                           ; 0 bytes @ 0x4
   953                           
   954  0074                     send_data_master@data_type:	
   955                           ; 0 bytes @ 0x4
   956                           
   957  0074                     uint16_to_byte_array@p_data:	
   958                           ; 1 bytes @ 0x4
   959                           
   960  0074                     spi_master_receive@destination:	
   961                           ; 1 bytes @ 0x4
   962                           
   963  0074                     convert@process_1@num:	
   964                           ; 1 bytes @ 0x4
   965                           
   966  0074                     ___ftpack@sign:	
   967                           ; 1 bytes @ 0x4
   968                           
   969  0074                     ___wmul@product:	
   970                           ; 1 bytes @ 0x4
   971                           
   972                           
   973                           ; 2 bytes @ 0x4
   974  0074                     	ds	1
   975  0075                     ?_uint16_data_set:	
   976  0075                     ??_flag_check:	
   977                           ; 0 bytes @ 0x5
   978                           
   979  0075                     ??___ftpack:	
   980                           ; 0 bytes @ 0x5
   981                           
   982  0075                     send_data_master@data_end_command:	
   983                           ; 0 bytes @ 0x5
   984                           
   985  0075                     extract_receive_packet@p_data_type_buf:	
   986                           ; 1 bytes @ 0x5
   987                           
   988  0075                     uint16_data_set@data_len:	
   989                           ; 1 bytes @ 0x5
   990                           
   991  0075                     bit_shift@p_ad_value:	
   992                           ; 1 bytes @ 0x5
   993                           
   994  0075                     ___awdiv@counter:	
   995                           ; 1 bytes @ 0x5
   996                           
   997  0075                     ___awmod@counter:	
   998                           ; 1 bytes @ 0x5
   999                           
  1000  0075                     convert@process_1@i:	
  1001                           ; 1 bytes @ 0x5
  1002                           
  1003                           
  1004                           ; 2 bytes @ 0x5
  1005  0075                     	ds	1
  1006  0076                     ??_send_data_master:	
  1007  0076                     ??_uint16_data_set:	
  1008                           ; 0 bytes @ 0x6
  1009                           
  1010  0076                     extract_receive_packet@i:	
  1011                           ; 0 bytes @ 0x6
  1012                           
  1013  0076                     ___awdiv@sign:	
  1014                           ; 1 bytes @ 0x6
  1015                           
  1016  0076                     ___awmod@sign:	
  1017                           ; 1 bytes @ 0x6
  1018                           
  1019                           
  1020                           ; 1 bytes @ 0x6
  1021  0076                     	ds	1
  1022  0077                     double_to_byte_array@p_data:	
  1023  0077                     convert@process_1@divide_1:	
  1024                           ; 1 bytes @ 0x7
  1025                           
  1026  0077                     ___awdiv@quotient:	
  1027                           ; 1 bytes @ 0x7
  1028                           
  1029  0077                     uint16_data_set@buf:	
  1030                           ; 2 bytes @ 0x7
  1031                           
  1032                           
  1033                           ; 3 bytes @ 0x7
  1034  0077                     	ds	1
  1035  0078                     ?___lwtoft:	
  1036  0078                     send_data_master@i:	
  1037                           ; 3 bytes @ 0x8
  1038                           
  1039  0078                     flag_check@flag:	
  1040                           ; 1 bytes @ 0x8
  1041                           
  1042  0078                     double_to_byte_array@i:	
  1043                           ; 1 bytes @ 0x8
  1044                           
  1045  0078                     convert@process_1@val:	
  1046                           ; 1 bytes @ 0x8
  1047                           
  1048  0078                     ___fttol@sign1:	
  1049                           ; 1 bytes @ 0x8
  1050                           
  1051  0078                     ___lwtoft@c:	
  1052                           ; 1 bytes @ 0x8
  1053                           
  1054                           
  1055                           ; 2 bytes @ 0x8
  1056  0078                     	ds	1
  1057  0079                     ?_double_data_set:	
  1058  0079                     ?convert@process_10:	
  1059                           ; 0 bytes @ 0x9
  1060                           
  1061  0079                     send_data_master@destination:	
  1062                           ; 0 bytes @ 0x9
  1063                           
  1064  0079                     flag_check@destination:	
  1065                           ; 1 bytes @ 0x9
  1066                           
  1067  0079                     double_data_set@data_len:	
  1068                           ; 1 bytes @ 0x9
  1069                           
  1070  0079                     convert@process_10@p_flag:	
  1071                           ; 1 bytes @ 0x9
  1072                           
  1073  0079                     ___fttol@lval:	
  1074                           ; 1 bytes @ 0x9
  1075                           
  1076                           
  1077                           ; 4 bytes @ 0x9
  1078  0079                     	ds	1
  1079  007A                     ??_receive_data_master:	
  1080  007A                     ??_double_data_set:	
  1081                           ; 0 bytes @ 0xA
  1082                           
  1083  007A                     uint16_data_set@p_data:	
  1084                           ; 0 bytes @ 0xA
  1085                           
  1086  007A                     convert@process_10@p_buf:	
  1087                           ; 1 bytes @ 0xA
  1088                           
  1089                           
  1090                           ; 1 bytes @ 0xA
  1091  007A                     	ds	1
  1092  007B                     ??convert@process_10:	
  1093  007B                     ??___lwtoft:	
  1094                           ; 0 bytes @ 0xB
  1095                           
  1096  007B                     uint16_data_set@i:	
  1097                           ; 0 bytes @ 0xB
  1098                           
  1099                           
  1100                           ; 1 bytes @ 0xB
  1101  007B                     	ds	1
  1102  007C                     ??_get_adcon:	
  1103  007C                     ?_sent_data_set:	
  1104                           ; 0 bytes @ 0xC
  1105                           
  1106  007C                     sent_data_set@data_len:	
  1107                           ; 1 bytes @ 0xC
  1108                           
  1109  007C                     receive_data_master@i:	
  1110                           ; 1 bytes @ 0xC
  1111                           
  1112                           
  1113                           ; 1 bytes @ 0xC
  1114  007C                     	ds	1
  1115  007D                     ??_get_temp:	
  1116  007D                     ??_get_pt:	
  1117                           ; 0 bytes @ 0xD
  1118                           
  1119  007D                     ??___ftneg:	
  1120                           ; 0 bytes @ 0xD
  1121                           
  1122  007D                     sent_data_set@byte_of_type:	
  1123                           ; 0 bytes @ 0xD
  1124                           
  1125  007D                     receive_data_master@destination:	
  1126                           ; 1 bytes @ 0xD
  1127                           
  1128  007D                     ___fttol@exp1:	
  1129                           ; 1 bytes @ 0xD
  1130                           
  1131                           
  1132                           ; 1 bytes @ 0xD
  1133  007D                     	ds	1
  1134                           
  1135                           	psect	cstackBANK0
  1136  0020                     __pcstackBANK0:	
  1137  0020                     ?___ftmul:	
  1138  0020                     convert@process_10@divide_10:	
  1139                           ; 3 bytes @ 0x0
  1140                           
  1141  0020                     ___ftmul@f1:	
  1142                           ; 1 bytes @ 0x0
  1143                           
  1144  0020                     double_data_set@buf:	
  1145                           ; 3 bytes @ 0x0
  1146                           
  1147                           
  1148                           ; 5 bytes @ 0x0
  1149  0020                     	ds	1
  1150  0021                     convert@process_10@remainder_10:	
  1151                           
  1152                           ; 1 bytes @ 0x1
  1153  0021                     	ds	1
  1154  0022                     convert@process_10@val:	
  1155                           
  1156                           ; 1 bytes @ 0x2
  1157  0022                     	ds	1
  1158  0023                     convert@process_10@i:	
  1159  0023                     ___ftmul@f2:	
  1160                           ; 1 bytes @ 0x3
  1161                           
  1162                           
  1163                           ; 3 bytes @ 0x3
  1164  0023                     	ds	1
  1165  0024                     convert@process_10@num:	
  1166                           
  1167                           ; 1 bytes @ 0x4
  1168  0024                     	ds	1
  1169  0025                     ?convert@process_100:	
  1170  0025                     double_data_set@p_data:	
  1171                           ; 0 bytes @ 0x5
  1172                           
  1173  0025                     convert@process_100@p_flag:	
  1174                           ; 1 bytes @ 0x5
  1175                           
  1176                           
  1177                           ; 1 bytes @ 0x5
  1178  0025                     	ds	1
  1179  0026                     ??___ftmul:	
  1180  0026                     double_data_set@i:	
  1181                           ; 0 bytes @ 0x6
  1182                           
  1183  0026                     convert@process_100@p_buf:	
  1184                           ; 1 bytes @ 0x6
  1185                           
  1186                           
  1187                           ; 1 bytes @ 0x6
  1188  0026                     	ds	1
  1189  0027                     ??_sent_data_set:	
  1190  0027                     ??convert@process_100:	
  1191                           ; 0 bytes @ 0x7
  1192                           
  1193                           
  1194                           ; 0 bytes @ 0x7
  1195  0027                     	ds	3
  1196  002A                     convert@process_100@num:	
  1197  002A                     ___ftmul@exp:	
  1198                           ; 1 bytes @ 0xA
  1199                           
  1200                           
  1201                           ; 1 bytes @ 0xA
  1202  002A                     	ds	1
  1203  002B                     convert@process_100@remainder_100:	
  1204  002B                     ___ftmul@f3_as_product:	
  1205                           ; 1 bytes @ 0xB
  1206                           
  1207                           
  1208                           ; 3 bytes @ 0xB
  1209  002B                     	ds	1
  1210  002C                     ?_number_to_string_char:	
  1211  002C                     sent_data_set@p_data:	
  1212                           ; 0 bytes @ 0xC
  1213                           
  1214  002C                     number_to_string_char@num:	
  1215                           ; 1 bytes @ 0xC
  1216                           
  1217                           
  1218                           ; 1 bytes @ 0xC
  1219  002C                     	ds	1
  1220  002D                     ??_number_to_string_char:	
  1221                           
  1222                           ; 0 bytes @ 0xD
  1223  002D                     	ds	1
  1224  002E                     ___ftmul@cntr:	
  1225                           
  1226                           ; 1 bytes @ 0xE
  1227  002E                     	ds	1
  1228  002F                     number_to_string_char@flag:	
  1229  002F                     ___ftmul@sign:	
  1230                           ; 1 bytes @ 0xF
  1231                           
  1232                           
  1233                           ; 1 bytes @ 0xF
  1234  002F                     	ds	1
  1235  0030                     ?_get_adcon:	
  1236  0030                     number_to_string_char@buf:	
  1237                           ; 3 bytes @ 0x10
  1238                           
  1239                           
  1240                           ; 1 bytes @ 0x10
  1241  0030                     	ds	3
  1242  0033                     get_adcon@voltage_value:	
  1243                           
  1244                           ; 3 bytes @ 0x13
  1245  0033                     	ds	3
  1246  0036                     get_adcon@my_adres:	
  1247                           
  1248                           ; 2 bytes @ 0x16
  1249  0036                     	ds	2
  1250  0038                     get_adcon@ad_value:	
  1251                           
  1252                           ; 2 bytes @ 0x18
  1253  0038                     	ds	2
  1254  003A                     ?___ftneg:	
  1255  003A                     ___ftneg@f1:	
  1256                           ; 3 bytes @ 0x1A
  1257                           
  1258                           
  1259                           ; 3 bytes @ 0x1A
  1260  003A                     	ds	3
  1261  003D                     ?___ftadd:	
  1262  003D                     ___ftadd@f1:	
  1263                           ; 3 bytes @ 0x1D
  1264                           
  1265                           
  1266                           ; 3 bytes @ 0x1D
  1267  003D                     	ds	3
  1268  0040                     ___ftadd@f2:	
  1269                           
  1270                           ; 3 bytes @ 0x20
  1271  0040                     	ds	3
  1272  0043                     ??___ftadd:	
  1273                           
  1274                           ; 0 bytes @ 0x23
  1275  0043                     	ds	4
  1276  0047                     ___ftadd@sign:	
  1277                           
  1278                           ; 1 bytes @ 0x27
  1279  0047                     	ds	1
  1280  0048                     ___ftadd@exp2:	
  1281                           
  1282                           ; 1 bytes @ 0x28
  1283  0048                     	ds	1
  1284  0049                     ___ftadd@exp1:	
  1285                           
  1286                           ; 1 bytes @ 0x29
  1287  0049                     	ds	1
  1288  004A                     ?___ftdiv:	
  1289  004A                     ___ftdiv@f2:	
  1290                           ; 3 bytes @ 0x2A
  1291                           
  1292                           
  1293                           ; 3 bytes @ 0x2A
  1294  004A                     	ds	3
  1295  004D                     ___ftdiv@f1:	
  1296                           
  1297                           ; 3 bytes @ 0x2D
  1298  004D                     	ds	3
  1299  0050                     ??___ftdiv:	
  1300                           
  1301                           ; 0 bytes @ 0x30
  1302  0050                     	ds	4
  1303  0054                     ___ftdiv@cntr:	
  1304                           
  1305                           ; 1 bytes @ 0x34
  1306  0054                     	ds	1
  1307  0055                     ___ftdiv@f3:	
  1308                           
  1309                           ; 3 bytes @ 0x35
  1310  0055                     	ds	3
  1311  0058                     ___ftdiv@exp:	
  1312                           
  1313                           ; 1 bytes @ 0x38
  1314  0058                     	ds	1
  1315  0059                     ___ftdiv@sign:	
  1316                           
  1317                           ; 1 bytes @ 0x39
  1318  0059                     	ds	1
  1319  005A                     ?_get_pt:	
  1320                           
  1321                           ; 3 bytes @ 0x3A
  1322  005A                     	ds	3
  1323  005D                     ?_get_temp:	
  1324                           
  1325                           ; 3 bytes @ 0x3D
  1326  005D                     	ds	3
  1327  0060                     _get_temp$1103:	
  1328                           
  1329                           ; 3 bytes @ 0x40
  1330  0060                     	ds	3
  1331  0063                     get_temp@i:	
  1332                           
  1333                           ; 2 bytes @ 0x43
  1334  0063                     	ds	2
  1335  0065                     get_temp@t_average:	
  1336                           
  1337                           ; 3 bytes @ 0x45
  1338  0065                     	ds	3
  1339  0068                     ??_main:	
  1340                           
  1341                           ; 0 bytes @ 0x48
  1342  0068                     	ds	3
  1343                           
  1344                           	psect	maintext
  1345  03FF                     __pmaintext:	
  1346 ;;
  1347 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1348 ;;
  1349 ;; *************** function _main *****************
  1350 ;; Defined at:
  1351 ;;		line 37 in file "main.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;		None
  1354 ;; Auto vars:     Size  Location     Type
  1355 ;;  cmd             1   70[BANK1 ] unsigned char 
  1356 ;;  r_data         30   30[BANK1 ] unsigned char [30]
  1357 ;;  temp_buf_c      5   63[BANK1 ] unsigned char [5]
  1358 ;;  temp            3   60[BANK1 ] unsigned char [5]
  1359 ;;  temp_d          3    0        unsigned char [5]
  1360 ;;  temp_buf        2    0        unsigned int 
  1361 ;;  i               1   72[BANK1 ] unsigned char 
  1362 ;;  r_data_len      1   71[BANK1 ] unsigned char 
  1363 ;;  r_data_type     1   69[BANK1 ] unsigned char 
  1364 ;;  temp_c          1   68[BANK1 ] unsigned char 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  2   54[None  ] int 
  1367 ;; Registers used:
  1368 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : B00/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1374 ;;      Params:         0       0       0       0       0
  1375 ;;      Locals:         0       0      43       0       0
  1376 ;;      Temps:          0       3       0       0       0
  1377 ;;      Totals:         0       3      43       0       0
  1378 ;;Total ram usage:       46 bytes
  1379 ;; Hardware stack levels required when called:    5
  1380 ;; This function calls:
  1381 ;;		___fttol
  1382 ;;		_ad_con_init
  1383 ;;		_extract_receive_packet
  1384 ;;		_get_temp
  1385 ;;		_number_to_string_char
  1386 ;;		_pic_port_init
  1387 ;;		_put_char
  1388 ;;		_put_string
  1389 ;;		_receive_data_master
  1390 ;;		_send_data_master
  1391 ;;		_sent_data_set
  1392 ;;		_spi_master_start
  1393 ;;		_uart_init
  1394 ;; This function is called by:
  1395 ;;		Startup code after reset
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           
  1400                           ;psect for function _main
  1401  03FF                     _main:	
  1402                           
  1403                           ;main.c: 39: const uint8_t send_1[] =
  1404                           ;main.c: 40: {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'k', 'l', 'm', 'n', 'o', 'p'}
      +                          ;
  1405                           ;main.c: 42: const uint8_t send_2[] =
  1406                           ;main.c: 43: {'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '1', '2', '3', '4'}
      +                          ;
  1407                           ;main.c: 45: uint8_t i;
  1408                           ;main.c: 46: uint8_t r_data_type;
  1409                           ;main.c: 47: uint8_t r_data[30];
  1410                           ;main.c: 48: uint8_t r_data_len;
  1411                           ;main.c: 50: TRISB7 = 0;
  1412                           
  1413                           ;incstack = 0
  1414                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1415  03FF  1683               	bsf	3,5	;RP0=1, select bank1
  1416  0400  1303               	bcf	3,6	;RP1=0, select bank1
  1417  0401  1386               	bcf	6,7	;volatile
  1418  0402                     l2464:	
  1419                           ;main.c: 51: uint16_t temp_buf;
  1420                           ;main.c: 52: double temp_d;
  1421                           ;main.c: 53: char temp_c;
  1422                           ;main.c: 54: char temp_buf_c[5];
  1423                           ;main.c: 56: double temp;
  1424                           ;main.c: 58: while(1)
  1425                           
  1426                           
  1427                           ;main.c: 59: {
  1428                           ;main.c: 60: pic_port_init();
  1429  0402  120A  158A  21AD  120A  118A  	fcall	_pic_port_init
  1430                           
  1431                           ;main.c: 61: ad_con_init();
  1432  0407  120A  158A  2195  120A  118A  	fcall	_ad_con_init
  1433                           
  1434                           ;main.c: 64: RB7 = 1;
  1435  040C  1283               	bcf	3,5	;RP0=0, select bank0
  1436  040D  1303               	bcf	3,6	;RP1=0, select bank0
  1437  040E  1786               	bsf	6,7	;volatile
  1438                           
  1439                           ;main.c: 65: _delay((unsigned long)((500)*(20000000/4000.0)));
  1440  040F  300D               	movlw	13
  1441  0410  00EA               	movwf	??_main+2
  1442  0411  30AF               	movlw	175
  1443  0412  00E9               	movwf	??_main+1
  1444  0413  30C1               	movlw	193
  1445  0414  00E8               	movwf	??_main
  1446  0415                     u2857:	
  1447  0415  0BE8               	decfsz	??_main,f
  1448  0416  2C15               	goto	u2857
  1449  0417  0BE9               	decfsz	??_main+1,f
  1450  0418  2C15               	goto	u2857
  1451  0419  0BEA               	decfsz	??_main+2,f
  1452  041A  2C15               	goto	u2857
  1453  041B  0000               	nop
  1454                           
  1455                           ;main.c: 66: RB7 = 0;
  1456  041C  1283               	bcf	3,5	;RP0=0, select bank0
  1457  041D  1303               	bcf	3,6	;RP1=0, select bank0
  1458  041E  1386               	bcf	6,7	;volatile
  1459                           
  1460                           ;main.c: 67: _delay((unsigned long)((500)*(20000000/4000.0)));
  1461  041F  300D               	movlw	13
  1462  0420  00EA               	movwf	??_main+2
  1463  0421  30AF               	movlw	175
  1464  0422  00E9               	movwf	??_main+1
  1465  0423  30C1               	movlw	193
  1466  0424  00E8               	movwf	??_main
  1467  0425                     u2867:	
  1468  0425  0BE8               	decfsz	??_main,f
  1469  0426  2C25               	goto	u2867
  1470  0427  0BE9               	decfsz	??_main+1,f
  1471  0428  2C25               	goto	u2867
  1472  0429  0BEA               	decfsz	??_main+2,f
  1473  042A  2C25               	goto	u2867
  1474  042B  0000               	nop
  1475                           
  1476                           ;main.c: 70: uart_init();
  1477  042C  120A  158A  21A0  120A  118A  	fcall	_uart_init
  1478                           
  1479                           ;main.c: 71: spi_master_start();
  1480  0431  120A  158A  2215  120A  118A  	fcall	_spi_master_start
  1481                           
  1482                           ;main.c: 74: put_char('T');
  1483  0436  3054               	movlw	84
  1484  0437  120A  158A  217B  120A  118A  	fcall	_put_char
  1485                           
  1486                           ;main.c: 75: temp = get_temp();
  1487  043C  120A  158A  2709  120A  118A  	fcall	_get_temp
  1488  0441  1283               	bcf	3,5	;RP0=0, select bank0
  1489  0442  1303               	bcf	3,6	;RP1=0, select bank0
  1490  0443  085D               	movf	?_get_temp,w
  1491  0444  1683               	bsf	3,5	;RP0=1, select bank1
  1492  0445  1303               	bcf	3,6	;RP1=0, select bank1
  1493  0446  00DC               	movwf	main@temp^(0+128)
  1494  0447  1283               	bcf	3,5	;RP0=0, select bank0
  1495  0448  1303               	bcf	3,6	;RP1=0, select bank0
  1496  0449  085E               	movf	?_get_temp+1,w
  1497  044A  1683               	bsf	3,5	;RP0=1, select bank1
  1498  044B  1303               	bcf	3,6	;RP1=0, select bank1
  1499  044C  00DD               	movwf	(main@temp+1)^(0+128)
  1500  044D  1283               	bcf	3,5	;RP0=0, select bank0
  1501  044E  1303               	bcf	3,6	;RP1=0, select bank0
  1502  044F  085F               	movf	?_get_temp+2,w
  1503  0450  1683               	bsf	3,5	;RP0=1, select bank1
  1504  0451  1303               	bcf	3,6	;RP1=0, select bank1
  1505  0452  00DE               	movwf	(main@temp+2)^(0+128)
  1506                           
  1507                           ;main.c: 77: temp_c = (char)temp;
  1508  0453  085C               	movf	main@temp^(0+128),w
  1509  0454  00F0               	movwf	___fttol@f1
  1510  0455  085D               	movf	(main@temp+1)^(0+128),w
  1511  0456  00F1               	movwf	___fttol@f1+1
  1512  0457  085E               	movf	(main@temp+2)^(0+128),w
  1513  0458  00F2               	movwf	___fttol@f1+2
  1514  0459  120A  118A  204C  120A  118A  	fcall	___fttol
  1515  045E  0870               	movf	?___fttol,w
  1516  045F  1283               	bcf	3,5	;RP0=0, select bank0
  1517  0460  1303               	bcf	3,6	;RP1=0, select bank0
  1518  0461  00E8               	movwf	??_main
  1519  0462  0868               	movf	??_main,w
  1520  0463  1683               	bsf	3,5	;RP0=1, select bank1
  1521  0464  1303               	bcf	3,6	;RP1=0, select bank1
  1522  0465  00E4               	movwf	main@temp_c^(0+128)
  1523                           
  1524                           ;main.c: 78: number_to_string_char(temp_buf_c, temp_c);
  1525  0466  0864               	movf	main@temp_c^(0+128),w
  1526  0467  1283               	bcf	3,5	;RP0=0, select bank0
  1527  0468  1303               	bcf	3,6	;RP1=0, select bank0
  1528  0469  00E8               	movwf	??_main
  1529  046A  0868               	movf	??_main,w
  1530  046B  00AC               	movwf	number_to_string_char@num
  1531  046C  30DF               	movlw	(low (main@temp_buf_c| 0))& (0+255)
  1532  046D  120A  118A  2009  120A  118A  	fcall	_number_to_string_char
  1533                           
  1534                           ;main.c: 79: for(i=0; i<5; i++){
  1535  0472  1683               	bsf	3,5	;RP0=1, select bank1
  1536  0473  1303               	bcf	3,6	;RP1=0, select bank1
  1537  0474  01E8               	clrf	main@i^(0+128)
  1538  0475  3005               	movlw	5
  1539  0476  0268               	subwf	main@i^(0+128),w
  1540  0477  1803               	btfsc	3,0
  1541  0478  2C98               	goto	l2498
  1542  0479                     l2488:	
  1543                           
  1544                           ;main.c: 80: put_char(temp_buf_c[i]);
  1545  0479  0868               	movf	main@i^(0+128),w
  1546  047A  3EDF               	addlw	(low (main@temp_buf_c| 0))& (0+255)
  1547  047B  0084               	movwf	4
  1548  047C  1383               	bcf	3,7	;select IRP bank1
  1549  047D  0800               	movf	0,w
  1550  047E  120A  158A  217B  120A  118A  	fcall	_put_char
  1551                           
  1552                           ;main.c: 81: if(temp_buf_c[i]=='\0'){
  1553  0483  1683               	bsf	3,5	;RP0=1, select bank1
  1554  0484  1303               	bcf	3,6	;RP1=0, select bank1
  1555  0485  0868               	movf	main@i^(0+128),w
  1556  0486  3EDF               	addlw	(low (main@temp_buf_c| 0))& (0+255)
  1557  0487  0084               	movwf	4
  1558  0488  1383               	bcf	3,7	;select IRP bank1
  1559  0489  0800               	movf	0,w
  1560  048A  1903               	btfsc	3,2
  1561  048B  2C98               	goto	l2498
  1562                           
  1563                           ;main.c: 82: break;
  1564  048C  3001               	movlw	1
  1565  048D  1283               	bcf	3,5	;RP0=0, select bank0
  1566  048E  1303               	bcf	3,6	;RP1=0, select bank0
  1567  048F  00E8               	movwf	??_main
  1568  0490  0868               	movf	??_main,w
  1569  0491  1683               	bsf	3,5	;RP0=1, select bank1
  1570  0492  1303               	bcf	3,6	;RP1=0, select bank1
  1571  0493  07E8               	addwf	main@i^(0+128),f
  1572  0494  3005               	movlw	5
  1573  0495  0268               	subwf	main@i^(0+128),w
  1574  0496  1C03               	skipc
  1575  0497  2C79               	goto	l2488
  1576  0498                     l2498:	
  1577                           
  1578                           ;main.c: 83: }
  1579                           ;main.c: 84: }
  1580                           ;main.c: 85: put_char('\r');
  1581  0498  300D               	movlw	13
  1582  0499  120A  158A  217B  120A  118A  	fcall	_put_char
  1583                           
  1584                           ;main.c: 86: put_char('\n');
  1585  049E  300A               	movlw	10
  1586  049F  120A  158A  217B  120A  118A  	fcall	_put_char
  1587                           
  1588                           ;main.c: 89: put_string("Master Program Start!\r\n");
  1589  04A4  3022               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1590  04A5  120A  158A  2234  120A  118A  	fcall	_put_string
  1591                           
  1592                           ;main.c: 91: _delay((unsigned long)((500)*(20000000/4000.0)));
  1593  04AA  300D               	movlw	13
  1594  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  1595  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  1596  04AD  00EA               	movwf	??_main+2
  1597  04AE  30AF               	movlw	175
  1598  04AF  00E9               	movwf	??_main+1
  1599  04B0  30C1               	movlw	193
  1600  04B1  00E8               	movwf	??_main
  1601  04B2                     u2877:	
  1602  04B2  0BE8               	decfsz	??_main,f
  1603  04B3  2CB2               	goto	u2877
  1604  04B4  0BE9               	decfsz	??_main+1,f
  1605  04B5  2CB2               	goto	u2877
  1606  04B6  0BEA               	decfsz	??_main+2,f
  1607  04B7  2CB2               	goto	u2877
  1608  04B8  0000               	nop
  1609                           
  1610                           ;main.c: 101: uint8_t cmd = 0x02;
  1611  04B9  3002               	movlw	2
  1612  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  1613  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  1614  04BC  00E8               	movwf	??_main
  1615  04BD  0868               	movf	??_main,w
  1616  04BE  1683               	bsf	3,5	;RP0=1, select bank1
  1617  04BF  1303               	bcf	3,6	;RP1=0, select bank1
  1618  04C0  00E6               	movwf	main@cmd^(0+128)
  1619                           
  1620                           ;main.c: 102: sent_data_set(&cmd, sizeof(cmd), sizeof(uint8_t));
  1621  04C1  01FC               	clrf	sent_data_set@data_len
  1622  04C2  0AFC               	incf	sent_data_set@data_len,f
  1623  04C3  01FD               	clrf	sent_data_set@byte_of_type
  1624  04C4  0AFD               	incf	sent_data_set@byte_of_type,f
  1625  04C5  30E6               	movlw	(low (main@cmd| 0))& (0+255)
  1626  04C6  120A  158A  25E0  120A  118A  	fcall	_sent_data_set
  1627                           
  1628                           ;main.c: 103: send_data_master(POW, COMMAND, DATA_END);
  1629  04CB  3003               	movlw	3
  1630  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  1631  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  1632  04CE  00E8               	movwf	??_main
  1633  04CF  0868               	movf	??_main,w
  1634  04D0  00F4               	movwf	send_data_master@data_type
  1635  04D1  3010               	movlw	16
  1636  04D2  00E9               	movwf	??_main+1
  1637  04D3  0869               	movf	??_main+1,w
  1638  04D4  00F5               	movwf	send_data_master@data_end_command
  1639  04D5  3003               	movlw	3
  1640  04D6  120A  118A  20D8  120A  118A  	fcall	_send_data_master
  1641                           
  1642                           ;main.c: 104: receive_data_master(POW);
  1643  04DB  3003               	movlw	3
  1644  04DC  120A  158A  2775  120A  118A  	fcall	_receive_data_master
  1645                           
  1646                           ;main.c: 108: RB7 = 1;
  1647  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  1648  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  1649  04E3  1786               	bsf	6,7	;volatile
  1650                           
  1651                           ;main.c: 109: _delay((unsigned long)((200)*(20000000/4000.0)));
  1652  04E4  3006               	movlw	6
  1653  04E5  00EA               	movwf	??_main+2
  1654  04E6  3013               	movlw	19
  1655  04E7  00E9               	movwf	??_main+1
  1656  04E8  30B1               	movlw	177
  1657  04E9  00E8               	movwf	??_main
  1658  04EA                     u2887:	
  1659  04EA  0BE8               	decfsz	??_main,f
  1660  04EB  2CEA               	goto	u2887
  1661  04EC  0BE9               	decfsz	??_main+1,f
  1662  04ED  2CEA               	goto	u2887
  1663  04EE  0BEA               	decfsz	??_main+2,f
  1664  04EF  2CEA               	goto	u2887
  1665  04F0  2CF1               	nop2
  1666                           
  1667                           ;main.c: 110: RB7 = 0;
  1668  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  1669  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  1670  04F3  1386               	bcf	6,7	;volatile
  1671                           
  1672                           ;main.c: 111: _delay((unsigned long)((200)*(20000000/4000.0)));
  1673  04F4  3006               	movlw	6
  1674  04F5  00EA               	movwf	??_main+2
  1675  04F6  3013               	movlw	19
  1676  04F7  00E9               	movwf	??_main+1
  1677  04F8  30B1               	movlw	177
  1678  04F9  00E8               	movwf	??_main
  1679  04FA                     u2897:	
  1680  04FA  0BE8               	decfsz	??_main,f
  1681  04FB  2CFA               	goto	u2897
  1682  04FC  0BE9               	decfsz	??_main+1,f
  1683  04FD  2CFA               	goto	u2897
  1684  04FE  0BEA               	decfsz	??_main+2,f
  1685  04FF  2CFA               	goto	u2897
  1686  0500  2D01               	nop2
  1687  0501                     l2520:	
  1688                           ;main.c: 113: while(rx_packet_status == FALSE);
  1689                           
  1690  0501  1683               	bsf	3,5	;RP0=1, select bank1
  1691  0502  1303               	bcf	3,6	;RP1=0, select bank1
  1692  0503  0869               	movf	_rx_packet_status^(0+128),w
  1693  0504  1903               	btfsc	3,2
  1694  0505  2D01               	goto	l2520
  1695                           
  1696                           ;main.c: 126: extract_receive_packet(&r_data_type, r_data, &r_data_len);
  1697  0506  30BE               	movlw	(low (main@r_data| 0))& (0+255)
  1698  0507  1283               	bcf	3,5	;RP0=0, select bank0
  1699  0508  1303               	bcf	3,6	;RP1=0, select bank0
  1700  0509  00E8               	movwf	??_main
  1701  050A  0868               	movf	??_main,w
  1702  050B  00F2               	movwf	extract_receive_packet@p_data_buf
  1703  050C  30E7               	movlw	(low (main@r_data_len| 0))& (0+255)
  1704  050D  00E9               	movwf	??_main+1
  1705  050E  0869               	movf	??_main+1,w
  1706  050F  00F3               	movwf	extract_receive_packet@p_data_len_buf
  1707  0510  30E5               	movlw	(low (main@r_data_type| 0))& (0+255)
  1708  0511  120A  158A  22EB  120A  118A  	fcall	_extract_receive_packet
  1709                           
  1710                           ;main.c: 127: for(i = 0; i < r_data_len; i++)
  1711  0516  1683               	bsf	3,5	;RP0=1, select bank1
  1712  0517  1303               	bcf	3,6	;RP1=0, select bank1
  1713  0518  01E8               	clrf	main@i^(0+128)
  1714  0519                     l2530:	
  1715  0519  0867               	movf	main@r_data_len^(0+128),w
  1716  051A  0268               	subwf	main@i^(0+128),w
  1717  051B  1803               	btfsc	3,0
  1718  051C  2D30               	goto	l2532
  1719                           
  1720                           ;main.c: 128: {
  1721                           ;main.c: 129: put_char(r_data[i]);
  1722  051D  0868               	movf	main@i^(0+128),w
  1723  051E  3EBE               	addlw	(low (main@r_data| 0))& (0+255)
  1724  051F  0084               	movwf	4
  1725  0520  1383               	bcf	3,7	;select IRP bank1
  1726  0521  0800               	movf	0,w
  1727  0522  120A  158A  217B  120A  118A  	fcall	_put_char
  1728  0527  3001               	movlw	1
  1729  0528  1283               	bcf	3,5	;RP0=0, select bank0
  1730  0529  1303               	bcf	3,6	;RP1=0, select bank0
  1731  052A  00E8               	movwf	??_main
  1732  052B  0868               	movf	??_main,w
  1733  052C  1683               	bsf	3,5	;RP0=1, select bank1
  1734  052D  1303               	bcf	3,6	;RP1=0, select bank1
  1735  052E  07E8               	addwf	main@i^(0+128),f
  1736  052F  2D19               	goto	l2530
  1737  0530                     l2532:	
  1738                           
  1739                           ;main.c: 130: }
  1740                           ;main.c: 131: put_string("\r\n");
  1741  0530  3037               	movlw	(low (((STR_1+21)-__stringbase)| (0+32768)))& (0+255)
  1742  0531  120A  158A  2234  120A  118A  	fcall	_put_string
  1743  0536  2C02               	goto	l2464
  1744  0537                     __end_of_main:	
  1745                           ;main.c: 142: }
  1746                           ;main.c: 144: return 0;
  1747                           ;	Return value of _main is never used
  1748                           
  1749                           
  1750                           	psect	text1
  1751  09A0                     __ptext1:	
  1752 ;; *************** function _uart_init *****************
  1753 ;; Defined at:
  1754 ;;		line 37 in file "uart.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;		None
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;		None
  1759 ;; Return value:  Size  Location     Type
  1760 ;;		None               void
  1761 ;; Registers used:
  1762 ;;		wreg
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1768 ;;      Params:         0       0       0       0       0
  1769 ;;      Locals:         0       0       0       0       0
  1770 ;;      Temps:          0       0       0       0       0
  1771 ;;      Totals:         0       0       0       0       0
  1772 ;;Total ram usage:        0 bytes
  1773 ;; Hardware stack levels used:    1
  1774 ;; This function calls:
  1775 ;;		Nothing
  1776 ;; This function is called by:
  1777 ;;		_main
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           
  1782                           ;psect for function _uart_init
  1783  09A0                     _uart_init:	
  1784                           
  1785                           ;uart.c: 40: TRISC6 = 0;
  1786                           
  1787                           ;incstack = 0
  1788                           ; Regs used in _uart_init: [wreg]
  1789  09A0  1683               	bsf	3,5	;RP0=1, select bank1
  1790  09A1  1303               	bcf	3,6	;RP1=0, select bank1
  1791  09A2  1307               	bcf	7,6	;volatile
  1792                           
  1793                           ;uart.c: 41: TRISC7 = 1;
  1794  09A3  1787               	bsf	7,7	;volatile
  1795                           
  1796                           ;uart.c: 44: SPBRG = ((unsigned char)((20000000 / (9600) / 16) - 1));
  1797  09A4  3081               	movlw	129
  1798  09A5  0099               	movwf	25	;volatile
  1799                           
  1800                           ;uart.c: 45: TXSTA = ((1 << 5) | (1 << 2));
  1801  09A6  3024               	movlw	36
  1802  09A7  0098               	movwf	24	;volatile
  1803                           
  1804                           ;uart.c: 46: RCSTA = ((1 << 7) | (1 << 4));
  1805  09A8  3090               	movlw	144
  1806  09A9  1283               	bcf	3,5	;RP0=0, select bank0
  1807  09AA  1303               	bcf	3,6	;RP1=0, select bank0
  1808  09AB  0098               	movwf	24	;volatile
  1809  09AC  0008               	return
  1810  09AD                     __end_of_uart_init:	
  1811                           
  1812                           	psect	text2
  1813  0A15                     __ptext2:	
  1814 ;; *************** function _spi_master_start *****************
  1815 ;; Defined at:
  1816 ;;		line 37 in file "spi_master.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;		None
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;		None
  1821 ;; Return value:  Size  Location     Type
  1822 ;;		None               void
  1823 ;; Registers used:
  1824 ;;		None
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1830 ;;      Params:         0       0       0       0       0
  1831 ;;      Locals:         0       0       0       0       0
  1832 ;;      Temps:          0       0       0       0       0
  1833 ;;      Totals:         0       0       0       0       0
  1834 ;;Total ram usage:        0 bytes
  1835 ;; Hardware stack levels used:    1
  1836 ;; This function calls:
  1837 ;;		Nothing
  1838 ;; This function is called by:
  1839 ;;		_main
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843                           
  1844                           ;psect for function _spi_master_start
  1845  0A15                     _spi_master_start:	
  1846                           
  1847                           ;spi_master.c: 40: TRISCbits.TRISC3 = 0;
  1848                           
  1849                           ;incstack = 0
  1850                           ; Regs used in _spi_master_start: []
  1851  0A15  1683               	bsf	3,5	;RP0=1, select bank1
  1852  0A16  1303               	bcf	3,6	;RP1=0, select bank1
  1853  0A17  1187               	bcf	7,3	;volatile
  1854                           
  1855                           ;spi_master.c: 41: TRISCbits.TRISC4 = 1;
  1856  0A18  1607               	bsf	7,4	;volatile
  1857                           
  1858                           ;spi_master.c: 42: TRISCbits.TRISC5 = 0;
  1859  0A19  1287               	bcf	7,5	;volatile
  1860                           
  1861                           ;spi_master.c: 45: TRISCbits.TRISC2 = 0;
  1862  0A1A  1107               	bcf	7,2	;volatile
  1863                           
  1864                           ;spi_master.c: 46: TRISCbits.TRISC0 = 0;
  1865  0A1B  1007               	bcf	7,0	;volatile
  1866                           
  1867                           ;spi_master.c: 47: TRISCbits.TRISC1 = 0;
  1868  0A1C  1087               	bcf	7,1	;volatile
  1869                           
  1870                           ;spi_master.c: 50: SSPCONbits.SSPEN = 0;
  1871  0A1D  1283               	bcf	3,5	;RP0=0, select bank0
  1872  0A1E  1303               	bcf	3,6	;RP1=0, select bank0
  1873  0A1F  1294               	bcf	20,5	;volatile
  1874                           
  1875                           ;spi_master.c: 53: SSPSTATbits.SMP = 0;
  1876  0A20  1683               	bsf	3,5	;RP0=1, select bank1
  1877  0A21  1303               	bcf	3,6	;RP1=0, select bank1
  1878  0A22  1394               	bcf	20,7	;volatile
  1879                           
  1880                           ;spi_master.c: 54: SSPCONbits.CKP = 0;
  1881  0A23  1283               	bcf	3,5	;RP0=0, select bank0
  1882  0A24  1303               	bcf	3,6	;RP1=0, select bank0
  1883  0A25  1214               	bcf	20,4	;volatile
  1884                           
  1885                           ;spi_master.c: 55: SSPSTATbits.CKE = 0;
  1886  0A26  1683               	bsf	3,5	;RP0=1, select bank1
  1887  0A27  1303               	bcf	3,6	;RP1=0, select bank1
  1888  0A28  1314               	bcf	20,6	;volatile
  1889                           
  1890                           ;spi_master.c: 58: SSPCONbits.SSPM3 = 0;
  1891  0A29  1283               	bcf	3,5	;RP0=0, select bank0
  1892  0A2A  1303               	bcf	3,6	;RP1=0, select bank0
  1893  0A2B  1194               	bcf	20,3	;volatile
  1894                           
  1895                           ;spi_master.c: 59: SSPCONbits.SSPM2 = 0;
  1896  0A2C  1114               	bcf	20,2	;volatile
  1897                           
  1898                           ;spi_master.c: 60: SSPCONbits.SSPM1 = 0;
  1899  0A2D  1094               	bcf	20,1	;volatile
  1900                           
  1901                           ;spi_master.c: 61: SSPCONbits.SSPM0 = 0;
  1902  0A2E  1014               	bcf	20,0	;volatile
  1903                           
  1904                           ;spi_master.c: 64: PORTCbits.RC2 = 1;
  1905  0A2F  1507               	bsf	7,2	;volatile
  1906                           
  1907                           ;spi_master.c: 65: PORTCbits.RC0 = 1;
  1908  0A30  1407               	bsf	7,0	;volatile
  1909                           
  1910                           ;spi_master.c: 66: PORTCbits.RC1 = 1;
  1911  0A31  1487               	bsf	7,1	;volatile
  1912                           
  1913                           ;spi_master.c: 69: SSPCONbits.SSPEN = 1;
  1914  0A32  1694               	bsf	20,5	;volatile
  1915  0A33  0008               	return
  1916  0A34                     __end_of_spi_master_start:	
  1917                           
  1918                           	psect	text3
  1919  0DE0                     __ptext3:	
  1920 ;; *************** function _sent_data_set *****************
  1921 ;; Defined at:
  1922 ;;		line 98 in file "protocol.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;  p_data          1    wreg     PTR void 
  1925 ;;		 -> main@cmd(1), 
  1926 ;;  data_len        1   12[COMMON] unsigned char 
  1927 ;;  byte_of_type    1   13[COMMON] unsigned char 
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;  p_data          1   12[BANK0 ] PTR void 
  1930 ;;		 -> main@cmd(1), 
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      unsigned char 
  1933 ;; Registers used:
  1934 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1940 ;;      Params:         2       0       0       0       0
  1941 ;;      Locals:         0       1       0       0       0
  1942 ;;      Temps:          0       5       0       0       0
  1943 ;;      Totals:         2       6       0       0       0
  1944 ;;Total ram usage:        8 bytes
  1945 ;; Hardware stack levels used:    1
  1946 ;; Hardware stack levels required when called:    3
  1947 ;; This function calls:
  1948 ;;		___wmul
  1949 ;;		_double_data_set
  1950 ;;		_uint16_data_set
  1951 ;;		_uint8_data_set
  1952 ;; This function is called by:
  1953 ;;		_main
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           
  1958                           ;psect for function _sent_data_set
  1959  0DE0                     _sent_data_set:	
  1960                           
  1961                           ;incstack = 0
  1962                           ; Regs used in _sent_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1963                           ;sent_data_set@p_data stored from wreg
  1964  0DE0  1283               	bcf	3,5	;RP0=0, select bank0
  1965  0DE1  1303               	bcf	3,6	;RP1=0, select bank0
  1966  0DE2  00AC               	movwf	sent_data_set@p_data
  1967                           
  1968                           ;protocol.c: 101: if((30 - tx_packet.payload_len) - (data_len * (byte_of_type + 1)) < 0)
  1969  0DE3  087D               	movf	sent_data_set@byte_of_type,w
  1970  0DE4  3E01               	addlw	1
  1971  0DE5  00F0               	movwf	___wmul@multiplier
  1972  0DE6  3000               	movlw	0
  1973  0DE7  1803               	skipnc
  1974  0DE8  3001               	movlw	1
  1975  0DE9  00F1               	movwf	___wmul@multiplier+1
  1976  0DEA  087C               	movf	sent_data_set@data_len,w
  1977  0DEB  00A7               	movwf	??_sent_data_set
  1978  0DEC  01A8               	clrf	??_sent_data_set+1
  1979  0DED  0827               	movf	??_sent_data_set,w
  1980  0DEE  00F2               	movwf	___wmul@multiplicand
  1981  0DEF  0828               	movf	??_sent_data_set+1,w
  1982  0DF0  00F3               	movwf	___wmul@multiplicand+1
  1983  0DF1  120A  158A  2255  120A  158A  	fcall	___wmul
  1984  0DF6  1683               	bsf	3,5	;RP0=1, select bank3
  1985  0DF7  1703               	bsf	3,6	;RP1=1, select bank3
  1986  0DF8  0811               	movf	(_tx_packet^(0+384)+1),w
  1987  0DF9  0770               	addwf	?___wmul,w
  1988  0DFA  1283               	bcf	3,5	;RP0=0, select bank0
  1989  0DFB  1303               	bcf	3,6	;RP1=0, select bank0
  1990  0DFC  00A9               	movwf	??_sent_data_set+2
  1991  0DFD  0871               	movf	?___wmul+1,w
  1992  0DFE  1803               	skipnc
  1993  0DFF  0A71               	incf	?___wmul+1,w
  1994  0E00  00AA               	movwf	??_sent_data_set+3
  1995  0E01  09A9               	comf	??_sent_data_set+2,f
  1996  0E02  09AA               	comf	??_sent_data_set+3,f
  1997  0E03  0AA9               	incf	??_sent_data_set+2,f
  1998  0E04  1903               	skipnz
  1999  0E05  0AAA               	incf	??_sent_data_set+3,f
  2000  0E06  301E               	movlw	30
  2001  0E07  0729               	addwf	??_sent_data_set+2,w
  2002  0E08  082A               	movf	??_sent_data_set+3,w
  2003  0E09  1803               	skipnc
  2004  0E0A  0A2A               	incf	??_sent_data_set+3,w
  2005  0E0B  3E00               	addlw	0
  2006  0E0C  00AB               	movwf	??_sent_data_set+4
  2007  0E0D  1BAB               	btfsc	??_sent_data_set+4,7
  2008  0E0E  0008               	return
  2009  0E0F  2E31               	goto	l2342
  2010  0E10                     l2334:	
  2011                           ;protocol.c: 108: {
  2012                           ;protocol.c: 109: case 1:
  2013                           
  2014                           ;protocol.c: 104: }
  2015                           ;protocol.c: 107: switch(byte_of_type)
  2016                           
  2017                           ;protocol.c: 102: {
  2018                           ;protocol.c: 103: return 0xff;
  2019                           ;	Return value of _sent_data_set is never used
  2020                           
  2021                           
  2022                           ;protocol.c: 110: uint8_data_set((uint8_t *)p_data, data_len);
  2023  0E10  087C               	movf	sent_data_set@data_len,w
  2024  0E11  1283               	bcf	3,5	;RP0=0, select bank0
  2025  0E12  1303               	bcf	3,6	;RP1=0, select bank0
  2026  0E13  00A7               	movwf	??_sent_data_set
  2027  0E14  0827               	movf	??_sent_data_set,w
  2028  0E15  00F0               	movwf	uint8_data_set@data_len
  2029  0E16  082C               	movf	sent_data_set@p_data,w
  2030  0E17  120A  158A  229C   	fcall	_uint8_data_set
  2031                           
  2032                           ;protocol.c: 111: break;
  2033  0E1A  0008               	return
  2034  0E1B                     l2336:	
  2035                           ;protocol.c: 112: case 2:
  2036                           
  2037                           
  2038                           ;protocol.c: 113: uint16_data_set((uint16_t *)p_data, data_len);
  2039  0E1B  087C               	movf	sent_data_set@data_len,w
  2040  0E1C  1283               	bcf	3,5	;RP0=0, select bank0
  2041  0E1D  1303               	bcf	3,6	;RP1=0, select bank0
  2042  0E1E  00A7               	movwf	??_sent_data_set
  2043  0E1F  0827               	movf	??_sent_data_set,w
  2044  0E20  00F5               	movwf	uint16_data_set@data_len
  2045  0E21  082C               	movf	sent_data_set@p_data,w
  2046  0E22  120A  158A  231B   	fcall	_uint16_data_set
  2047                           
  2048                           ;protocol.c: 114: break;
  2049  0E25  0008               	return
  2050  0E26                     l2338:	
  2051                           ;protocol.c: 115: case 4:
  2052                           
  2053                           
  2054                           ;protocol.c: 116: double_data_set((double *)p_data, data_len);
  2055  0E26  087C               	movf	sent_data_set@data_len,w
  2056  0E27  1283               	bcf	3,5	;RP0=0, select bank0
  2057  0E28  1303               	bcf	3,6	;RP1=0, select bank0
  2058  0E29  00A7               	movwf	??_sent_data_set
  2059  0E2A  0827               	movf	??_sent_data_set,w
  2060  0E2B  00F9               	movwf	double_data_set@data_len
  2061  0E2C  082C               	movf	sent_data_set@p_data,w
  2062  0E2D  120A  158A  23F7   	fcall	_double_data_set
  2063                           
  2064                           ;protocol.c: 120: }
  2065                           
  2066                           ;protocol.c: 119: return 0xff;
  2067                           ;	Return value of _sent_data_set is never used
  2068                           
  2069                           ;protocol.c: 118: default:
  2070                           
  2071                           ;protocol.c: 117: break;
  2072  0E30  0008               	return
  2073  0E31                     l2342:	
  2074  0E31  087D               	movf	sent_data_set@byte_of_type,w
  2075                           
  2076                           ; Switch size 1, requested type "space"
  2077                           ; Number of cases is 3, Range of values is 1 to 4
  2078                           ; switch strategies available:
  2079                           ; Name         Instructions Cycles
  2080                           ; simple_byte           10     6 (average)
  2081                           ; direct_byte           23    11 (fixed)
  2082                           ; jumptable            263     9 (fixed)
  2083                           ;	Chosen strategy is simple_byte
  2084  0E32  3A01               	xorlw	1	; case 1
  2085  0E33  1903               	skipnz
  2086  0E34  2E10               	goto	l2334
  2087  0E35  3A03               	xorlw	3	; case 2
  2088  0E36  1903               	skipnz
  2089  0E37  2E1B               	goto	l2336
  2090  0E38  3A06               	xorlw	6	; case 4
  2091  0E39  1903               	skipnz
  2092  0E3A  2E26               	goto	l2338
  2093  0E3B  2E3C               	goto	l106
  2094  0E3C                     l106:	
  2095                           ;protocol.c: 123: return (uint8_t)(30 - tx_packet.payload_len);
  2096                           ;	Return value of _sent_data_set is never used
  2097                           
  2098  0E3C  0008               	return
  2099  0E3D                     __end_of_sent_data_set:	
  2100                           
  2101                           	psect	text4
  2102  0A9C                     __ptext4:	
  2103 ;; *************** function _uint8_data_set *****************
  2104 ;; Defined at:
  2105 ;;		line 377 in file "protocol.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;  p_data          1    wreg     PTR unsigned char 
  2108 ;;		 -> main@cmd(1), 
  2109 ;;  data_len        1    0[COMMON] unsigned char 
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;  p_data          1    2[COMMON] PTR unsigned char 
  2112 ;;		 -> main@cmd(1), 
  2113 ;; Return value:  Size  Location     Type
  2114 ;;		None               void
  2115 ;; Registers used:
  2116 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2122 ;;      Params:         1       0       0       0       0
  2123 ;;      Locals:         1       0       0       0       0
  2124 ;;      Temps:          1       0       0       0       0
  2125 ;;      Totals:         3       0       0       0       0
  2126 ;;Total ram usage:        3 bytes
  2127 ;; Hardware stack levels used:    1
  2128 ;; This function calls:
  2129 ;;		Nothing
  2130 ;; This function is called by:
  2131 ;;		_sent_data_set
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           
  2136                           ;psect for function _uint8_data_set
  2137  0A9C                     _uint8_data_set:	
  2138                           
  2139                           ;incstack = 0
  2140                           ; Regs used in _uint8_data_set: [wreg-fsr0h+status,2+status,0]
  2141                           ;uint8_data_set@p_data stored from wreg
  2142  0A9C  00F2               	movwf	uint8_data_set@p_data
  2143  0A9D                     l148:	
  2144                           ;protocol.c: 379: while(data_len)
  2145                           
  2146  0A9D  0870               	movf	uint8_data_set@data_len,w
  2147  0A9E  1903               	btfsc	3,2
  2148  0A9F  0008               	return
  2149                           
  2150                           ;protocol.c: 380: {
  2151                           ;protocol.c: 381: tx_packet.payload[tx_packet.payload_len++] = 1;
  2152  0AA0  1683               	bsf	3,5	;RP0=1, select bank3
  2153  0AA1  1703               	bsf	3,6	;RP1=1, select bank3
  2154  0AA2  0811               	movf	(_tx_packet^(0+384)+1),w
  2155  0AA3  3E92               	addlw	(low ((_tx_packet| (0+256)+2)))& (0+255)
  2156  0AA4  0084               	movwf	4
  2157  0AA5  1783               	bsf	3,7	;select IRP bank3
  2158  0AA6  0180               	clrf	0
  2159  0AA7  0A80               	incf	0,f
  2160  0AA8  3001               	movlw	1
  2161  0AA9  00F1               	movwf	??_uint8_data_set
  2162  0AAA  0871               	movf	??_uint8_data_set,w
  2163  0AAB  0791               	addwf	(_tx_packet^(0+384)+1),f
  2164                           
  2165                           ;protocol.c: 382: tx_packet.payload[tx_packet.payload_len++] = *p_data++;
  2166  0AAC  0872               	movf	uint8_data_set@p_data,w
  2167  0AAD  0084               	movwf	4
  2168  0AAE  1383               	bcf	3,7	;select IRP bank0
  2169  0AAF  0800               	movf	0,w
  2170  0AB0  00F1               	movwf	??_uint8_data_set
  2171  0AB1  0811               	movf	(_tx_packet^(0+384)+1),w
  2172  0AB2  3E92               	addlw	(low ((_tx_packet| (0+256)+2)))& (0+255)
  2173  0AB3  0084               	movwf	4
  2174  0AB4  0871               	movf	??_uint8_data_set,w
  2175  0AB5  1783               	bsf	3,7	;select IRP bank3
  2176  0AB6  0080               	movwf	0
  2177  0AB7  3001               	movlw	1
  2178  0AB8  00F1               	movwf	??_uint8_data_set
  2179  0AB9  0871               	movf	??_uint8_data_set,w
  2180  0ABA  07F2               	addwf	uint8_data_set@p_data,f
  2181  0ABB  3001               	movlw	1
  2182  0ABC  00F1               	movwf	??_uint8_data_set
  2183  0ABD  0871               	movf	??_uint8_data_set,w
  2184  0ABE  0791               	addwf	(_tx_packet^(0+384)+1),f
  2185                           
  2186                           ;protocol.c: 383: data_len--;
  2187  0ABF  3001               	movlw	1
  2188  0AC0  02F0               	subwf	uint8_data_set@data_len,f
  2189  0AC1  2A9D               	goto	l148
  2190  0AC2                     __end_of_uint8_data_set:	
  2191                           
  2192                           	psect	text5
  2193  0B1B                     __ptext5:	
  2194 ;; *************** function _uint16_data_set *****************
  2195 ;; Defined at:
  2196 ;;		line 399 in file "protocol.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;  p_data          1    wreg     PTR unsigned int 
  2199 ;;		 -> main@cmd(1), 
  2200 ;;  data_len        1    5[COMMON] unsigned char 
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;  p_data          1   10[COMMON] PTR unsigned int 
  2203 ;;		 -> main@cmd(1), 
  2204 ;;  buf             3    7[COMMON] unsigned char [3]
  2205 ;;  i               1   11[COMMON] unsigned char 
  2206 ;; Return value:  Size  Location     Type
  2207 ;;		None               void
  2208 ;; Registers used:
  2209 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2215 ;;      Params:         1       0       0       0       0
  2216 ;;      Locals:         5       0       0       0       0
  2217 ;;      Temps:          1       0       0       0       0
  2218 ;;      Totals:         7       0       0       0       0
  2219 ;;Total ram usage:        7 bytes
  2220 ;; Hardware stack levels used:    1
  2221 ;; Hardware stack levels required when called:    2
  2222 ;; This function calls:
  2223 ;;		_uint16_to_byte_array
  2224 ;; This function is called by:
  2225 ;;		_sent_data_set
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           
  2230                           ;psect for function _uint16_data_set
  2231  0B1B                     _uint16_data_set:	
  2232                           
  2233                           ;incstack = 0
  2234                           ; Regs used in _uint16_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2235                           ;uint16_data_set@p_data stored from wreg
  2236  0B1B  00FA               	movwf	uint16_data_set@p_data
  2237  0B1C                     l154:	
  2238                           ;protocol.c: 401: uint8_t buf[3];
  2239                           ;protocol.c: 402: uint8_t i;
  2240                           ;protocol.c: 404: while(data_len)
  2241                           
  2242  0B1C  0875               	movf	uint16_data_set@data_len,w
  2243  0B1D  1903               	btfsc	3,2
  2244  0B1E  0008               	return
  2245                           
  2246                           ;protocol.c: 405: {
  2247                           ;protocol.c: 406: uint16_to_byte_array(p_data++, buf);
  2248  0B1F  3077               	movlw	(low (uint16_data_set@buf| 0))& (0+255)
  2249  0B20  00F6               	movwf	??_uint16_data_set
  2250  0B21  0876               	movf	??_uint16_data_set,w
  2251  0B22  00F0               	movwf	uint16_to_byte_array@p_data_array
  2252  0B23  087A               	movf	uint16_data_set@p_data,w
  2253  0B24  120A  158A  2276  120A  158A  	fcall	_uint16_to_byte_array
  2254  0B29  3002               	movlw	2
  2255  0B2A  00F6               	movwf	??_uint16_data_set
  2256  0B2B  0876               	movf	??_uint16_data_set,w
  2257  0B2C  07FA               	addwf	uint16_data_set@p_data,f
  2258                           
  2259                           ;protocol.c: 408: for(i = 0; i < 3; i++)
  2260  0B2D  01FB               	clrf	uint16_data_set@i
  2261  0B2E  3003               	movlw	3
  2262  0B2F  027B               	subwf	uint16_data_set@i,w
  2263  0B30  1803               	btfsc	3,0
  2264  0B31  2B4B               	goto	l2128
  2265  0B32                     l2120:	
  2266                           
  2267                           ;protocol.c: 409: {
  2268                           ;protocol.c: 410: tx_packet.payload[tx_packet.payload_len++] = buf[i];
  2269  0B32  087B               	movf	uint16_data_set@i,w
  2270  0B33  3E77               	addlw	(low (uint16_data_set@buf| 0))& (0+255)
  2271  0B34  0084               	movwf	4
  2272  0B35  0800               	movf	0,w
  2273  0B36  00F6               	movwf	??_uint16_data_set
  2274  0B37  1683               	bsf	3,5	;RP0=1, select bank3
  2275  0B38  1703               	bsf	3,6	;RP1=1, select bank3
  2276  0B39  0811               	movf	(_tx_packet^(0+384)+1),w
  2277  0B3A  3E92               	addlw	(low ((_tx_packet| (0+256)+2)))& (0+255)
  2278  0B3B  0084               	movwf	4
  2279  0B3C  0876               	movf	??_uint16_data_set,w
  2280  0B3D  1783               	bsf	3,7	;select IRP bank3
  2281  0B3E  0080               	movwf	0
  2282  0B3F  3001               	movlw	1
  2283  0B40  00F6               	movwf	??_uint16_data_set
  2284  0B41  0876               	movf	??_uint16_data_set,w
  2285  0B42  0791               	addwf	(_tx_packet^(0+384)+1),f
  2286  0B43  3001               	movlw	1
  2287  0B44  00F6               	movwf	??_uint16_data_set
  2288  0B45  0876               	movf	??_uint16_data_set,w
  2289  0B46  07FB               	addwf	uint16_data_set@i,f
  2290  0B47  3003               	movlw	3
  2291  0B48  027B               	subwf	uint16_data_set@i,w
  2292  0B49  1C03               	skipc
  2293  0B4A  2B32               	goto	l2120
  2294  0B4B                     l2128:	
  2295                           
  2296                           ;protocol.c: 411: }
  2297                           ;protocol.c: 412: data_len--;
  2298  0B4B  3001               	movlw	1
  2299  0B4C  02F5               	subwf	uint16_data_set@data_len,f
  2300  0B4D  2B1C               	goto	l154
  2301  0B4E                     __end_of_uint16_data_set:	
  2302                           
  2303                           	psect	text6
  2304  0A76                     __ptext6:	
  2305 ;; *************** function _uint16_to_byte_array *****************
  2306 ;; Defined at:
  2307 ;;		line 457 in file "protocol.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;  p_data          1    wreg     PTR unsigned int 
  2310 ;;		 -> main@cmd(1), 
  2311 ;;  p_data_array    1    0[COMMON] PTR unsigned char 
  2312 ;;		 -> uint16_data_set@buf(3), 
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;  p_data          1    4[COMMON] PTR unsigned int 
  2315 ;;		 -> main@cmd(1), 
  2316 ;; Return value:  Size  Location     Type
  2317 ;;		None               void
  2318 ;; Registers used:
  2319 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2325 ;;      Params:         1       0       0       0       0
  2326 ;;      Locals:         1       0       0       0       0
  2327 ;;      Temps:          3       0       0       0       0
  2328 ;;      Totals:         5       0       0       0       0
  2329 ;;Total ram usage:        5 bytes
  2330 ;; Hardware stack levels used:    2
  2331 ;; This function calls:
  2332 ;;		Nothing
  2333 ;; This function is called by:
  2334 ;;		_uint16_data_set
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           
  2339                           ;psect for function _uint16_to_byte_array
  2340  0A76                     _uint16_to_byte_array:	
  2341                           
  2342                           ;incstack = 0
  2343                           ; Regs used in _uint16_to_byte_array: [wreg-fsr0h+status,2+status,0+pclath]
  2344                           ;uint16_to_byte_array@p_data stored from wreg
  2345  0A76  00F4               	movwf	uint16_to_byte_array@p_data
  2346                           
  2347                           ;protocol.c: 459: const uint16_t bit_mask = 0b0000000011111111;
  2348                           ;protocol.c: 462: p_data_array[0] = 2;
  2349  0A77  3002               	movlw	2
  2350  0A78  00F1               	movwf	??_uint16_to_byte_array
  2351  0A79  0870               	movf	uint16_to_byte_array@p_data_array,w
  2352  0A7A  0084               	movwf	4
  2353  0A7B  0871               	movf	??_uint16_to_byte_array,w
  2354  0A7C  0080               	movwf	0
  2355                           
  2356                           ;protocol.c: 463: p_data_array[1] = (uint8_t)(*p_data >> 8);
  2357  0A7D  0874               	movf	uint16_to_byte_array@p_data,w
  2358  0A7E  0084               	movwf	4
  2359  0A7F  1383               	bcf	3,7	;select IRP bank0
  2360  0A80  0800               	movf	0,w
  2361  0A81  00F1               	movwf	??_uint16_to_byte_array
  2362  0A82  0A84               	incf	4,f
  2363  0A83  0800               	movf	0,w
  2364  0A84  00F2               	movwf	??_uint16_to_byte_array+1
  2365  0A85  0872               	movf	??_uint16_to_byte_array+1,w
  2366  0A86  00F3               	movwf	??_uint16_to_byte_array+2
  2367  0A87  0A70               	incf	uint16_to_byte_array@p_data_array,w
  2368  0A88  0084               	movwf	4
  2369  0A89  0873               	movf	??_uint16_to_byte_array+2,w
  2370  0A8A  0080               	movwf	0
  2371                           
  2372                           ;protocol.c: 464: p_data_array[2] = (uint8_t)(*p_data & bit_mask);
  2373  0A8B  301F               	movlw	low (uint16_to_byte_array@bit_mask-__stringbase)
  2374  0A8C  0084               	movwf	4
  2375  0A8D  120A  158A  2000   	fcall	stringdir
  2376  0A90  00F1               	movwf	??_uint16_to_byte_array
  2377  0A91  0874               	movf	uint16_to_byte_array@p_data,w
  2378  0A92  0084               	movwf	4
  2379  0A93  0800               	movf	0,w
  2380  0A94  0571               	andwf	??_uint16_to_byte_array,w
  2381  0A95  00F2               	movwf	??_uint16_to_byte_array+1
  2382  0A96  0870               	movf	uint16_to_byte_array@p_data_array,w
  2383  0A97  3E02               	addlw	2
  2384  0A98  0084               	movwf	4
  2385  0A99  0872               	movf	??_uint16_to_byte_array+1,w
  2386  0A9A  0080               	movwf	0
  2387  0A9B  0008               	return
  2388  0A9C                     __end_of_uint16_to_byte_array:	
  2389                           
  2390                           	psect	text7
  2391  0BF7                     __ptext7:	
  2392 ;; *************** function _double_data_set *****************
  2393 ;; Defined at:
  2394 ;;		line 428 in file "protocol.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  p_data          1    wreg     PTR 
  2397 ;;		 -> main@cmd(1), 
  2398 ;;  data_len        1    9[COMMON] unsigned char 
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;  p_data          1    5[BANK0 ] PTR 
  2401 ;;		 -> main@cmd(1), 
  2402 ;;  buf             5    0[BANK0 ] unsigned char [5]
  2403 ;;  i               1    6[BANK0 ] unsigned char 
  2404 ;; Return value:  Size  Location     Type
  2405 ;;		None               void
  2406 ;; Registers used:
  2407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2413 ;;      Params:         1       0       0       0       0
  2414 ;;      Locals:         0       7       0       0       0
  2415 ;;      Temps:          1       0       0       0       0
  2416 ;;      Totals:         2       7       0       0       0
  2417 ;;Total ram usage:        9 bytes
  2418 ;; Hardware stack levels used:    1
  2419 ;; Hardware stack levels required when called:    1
  2420 ;; This function calls:
  2421 ;;		_double_to_byte_array
  2422 ;; This function is called by:
  2423 ;;		_sent_data_set
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           
  2428                           ;psect for function _double_data_set
  2429  0BF7                     _double_data_set:	
  2430                           
  2431                           ;incstack = 0
  2432                           ; Regs used in _double_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2433                           ;double_data_set@p_data stored from wreg
  2434  0BF7  1283               	bcf	3,5	;RP0=0, select bank0
  2435  0BF8  1303               	bcf	3,6	;RP1=0, select bank0
  2436  0BF9  00A5               	movwf	double_data_set@p_data
  2437  0BFA                     l162:	
  2438                           ;protocol.c: 430: uint8_t buf[5];
  2439                           ;protocol.c: 431: uint8_t i;
  2440                           ;protocol.c: 433: while(data_len)
  2441                           
  2442  0BFA  0879               	movf	double_data_set@data_len,w
  2443  0BFB  1903               	btfsc	3,2
  2444  0BFC  0008               	return
  2445                           
  2446                           ;protocol.c: 434: {
  2447                           ;protocol.c: 435: double_to_byte_array(p_data++, buf);
  2448  0BFD  3020               	movlw	(low (double_data_set@buf| 0))& (0+255)
  2449  0BFE  00FA               	movwf	??_double_data_set
  2450  0BFF  087A               	movf	??_double_data_set,w
  2451  0C00  00F0               	movwf	double_to_byte_array@p_data_array
  2452  0C01  0825               	movf	double_data_set@p_data,w
  2453  0C02  120A  158A  22C2  120A  158A  	fcall	_double_to_byte_array
  2454  0C07  3003               	movlw	3
  2455  0C08  00FA               	movwf	??_double_data_set
  2456  0C09  087A               	movf	??_double_data_set,w
  2457  0C0A  1283               	bcf	3,5	;RP0=0, select bank0
  2458  0C0B  1303               	bcf	3,6	;RP1=0, select bank0
  2459  0C0C  07A5               	addwf	double_data_set@p_data,f
  2460                           
  2461                           ;protocol.c: 437: for(i = 0; i < 5; i++)
  2462  0C0D  01A6               	clrf	double_data_set@i
  2463  0C0E  3005               	movlw	5
  2464  0C0F  0226               	subwf	double_data_set@i,w
  2465  0C10  1803               	btfsc	3,0
  2466  0C11  2C2E               	goto	l2150
  2467  0C12                     l2142:	
  2468                           
  2469                           ;protocol.c: 438: {
  2470                           ;protocol.c: 439: tx_packet.payload[tx_packet.payload_len++] = buf[i];
  2471  0C12  0826               	movf	double_data_set@i,w
  2472  0C13  3E20               	addlw	(low (double_data_set@buf| 0))& (0+255)
  2473  0C14  0084               	movwf	4
  2474  0C15  1383               	bcf	3,7	;select IRP bank0
  2475  0C16  0800               	movf	0,w
  2476  0C17  00FA               	movwf	??_double_data_set
  2477  0C18  1683               	bsf	3,5	;RP0=1, select bank3
  2478  0C19  1703               	bsf	3,6	;RP1=1, select bank3
  2479  0C1A  0811               	movf	(_tx_packet^(0+384)+1),w
  2480  0C1B  3E92               	addlw	(low ((_tx_packet| (0+256)+2)))& (0+255)
  2481  0C1C  0084               	movwf	4
  2482  0C1D  087A               	movf	??_double_data_set,w
  2483  0C1E  1783               	bsf	3,7	;select IRP bank3
  2484  0C1F  0080               	movwf	0
  2485  0C20  3001               	movlw	1
  2486  0C21  00FA               	movwf	??_double_data_set
  2487  0C22  087A               	movf	??_double_data_set,w
  2488  0C23  0791               	addwf	(_tx_packet^(0+384)+1),f
  2489  0C24  3001               	movlw	1
  2490  0C25  00FA               	movwf	??_double_data_set
  2491  0C26  087A               	movf	??_double_data_set,w
  2492  0C27  1283               	bcf	3,5	;RP0=0, select bank0
  2493  0C28  1303               	bcf	3,6	;RP1=0, select bank0
  2494  0C29  07A6               	addwf	double_data_set@i,f
  2495  0C2A  3005               	movlw	5
  2496  0C2B  0226               	subwf	double_data_set@i,w
  2497  0C2C  1C03               	skipc
  2498  0C2D  2C12               	goto	l2142
  2499  0C2E                     l2150:	
  2500                           
  2501                           ;protocol.c: 440: }
  2502                           ;protocol.c: 441: data_len--;
  2503  0C2E  3001               	movlw	1
  2504  0C2F  02F9               	subwf	double_data_set@data_len,f
  2505  0C30  2BFA               	goto	l162
  2506  0C31                     __end_of_double_data_set:	
  2507                           
  2508                           	psect	text8
  2509  0AC2                     __ptext8:	
  2510 ;; *************** function _double_to_byte_array *****************
  2511 ;; Defined at:
  2512 ;;		line 479 in file "protocol.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;  p_data          1    wreg     PTR 
  2515 ;;		 -> main@cmd(1), 
  2516 ;;  p_data_array    1    0[COMMON] PTR unsigned char 
  2517 ;;		 -> double_data_set@buf(5), 
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;  p_data          1    7[COMMON] PTR 
  2520 ;;		 -> main@cmd(1), 
  2521 ;;  converter       4    3[COMMON] struct .
  2522 ;;  i               1    8[COMMON] unsigned char 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;		None               void
  2525 ;; Registers used:
  2526 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2532 ;;      Params:         1       0       0       0       0
  2533 ;;      Locals:         6       0       0       0       0
  2534 ;;      Temps:          2       0       0       0       0
  2535 ;;      Totals:         9       0       0       0       0
  2536 ;;Total ram usage:        9 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; This function calls:
  2539 ;;		Nothing
  2540 ;; This function is called by:
  2541 ;;		_double_data_set
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           
  2546                           ;psect for function _double_to_byte_array
  2547  0AC2                     _double_to_byte_array:	
  2548                           
  2549                           ;incstack = 0
  2550                           ; Regs used in _double_to_byte_array: [wreg-fsr0h+status,2+status,0]
  2551                           ;double_to_byte_array@p_data stored from wreg
  2552  0AC2  00F7               	movwf	double_to_byte_array@p_data
  2553                           
  2554                           ;protocol.c: 481: uint8_t i;
  2555                           ;protocol.c: 482: union
  2556                           ;protocol.c: 483: {
  2557                           ;protocol.c: 484: double data;
  2558                           ;protocol.c: 485: uint8_t array[4];
  2559                           ;protocol.c: 486: } converter;
  2560                           ;protocol.c: 489: converter.data = *p_data;
  2561  0AC3  0877               	movf	double_to_byte_array@p_data,w
  2562  0AC4  0084               	movwf	4
  2563  0AC5  1383               	bcf	3,7	;select IRP bank0
  2564  0AC6  0800               	movf	0,w
  2565  0AC7  00F3               	movwf	double_to_byte_array@converter
  2566  0AC8  0A84               	incf	4,f
  2567  0AC9  0800               	movf	0,w
  2568  0ACA  00F4               	movwf	double_to_byte_array@converter+1
  2569  0ACB  0A84               	incf	4,f
  2570  0ACC  0800               	movf	0,w
  2571  0ACD  00F5               	movwf	double_to_byte_array@converter+2
  2572                           
  2573                           ;protocol.c: 492: p_data_array[0] = 4;
  2574  0ACE  3004               	movlw	4
  2575  0ACF  00F1               	movwf	??_double_to_byte_array
  2576  0AD0  0870               	movf	double_to_byte_array@p_data_array,w
  2577  0AD1  0084               	movwf	4
  2578  0AD2  0871               	movf	??_double_to_byte_array,w
  2579  0AD3  0080               	movwf	0
  2580                           
  2581                           ;protocol.c: 495: for(i = 0; i < 4; i++)
  2582  0AD4  01F8               	clrf	double_to_byte_array@i
  2583  0AD5                     L1:	
  2584  0AD5  3004               	movlw	4
  2585  0AD6  0278               	subwf	double_to_byte_array@i,w
  2586  0AD7  1803               	btfsc	3,0
  2587  0AD8  0008               	return
  2588                           
  2589                           ;protocol.c: 496: {
  2590                           ;protocol.c: 497: p_data_array[i + 1] = converter.array[i];
  2591  0AD9  0878               	movf	double_to_byte_array@i,w
  2592  0ADA  3E73               	addlw	(low (double_to_byte_array@converter| 0))& (0+255)
  2593  0ADB  0084               	movwf	4
  2594  0ADC  0800               	movf	0,w
  2595  0ADD  00F1               	movwf	??_double_to_byte_array
  2596  0ADE  0878               	movf	double_to_byte_array@i,w
  2597  0ADF  3E01               	addlw	1
  2598  0AE0  0770               	addwf	double_to_byte_array@p_data_array,w
  2599  0AE1  00F2               	movwf	??_double_to_byte_array+1
  2600  0AE2  0872               	movf	??_double_to_byte_array+1,w
  2601  0AE3  0084               	movwf	4
  2602  0AE4  0871               	movf	??_double_to_byte_array,w
  2603  0AE5  0080               	movwf	0
  2604  0AE6  3001               	movlw	1
  2605  0AE7  00F1               	movwf	??_double_to_byte_array
  2606  0AE8  0871               	movf	??_double_to_byte_array,w
  2607  0AE9  07F8               	addwf	double_to_byte_array@i,f
  2608  0AEA  2AD5               	goto	L1
  2609  0AEB                     __end_of_double_to_byte_array:	
  2610                           
  2611                           	psect	text9
  2612  0A55                     __ptext9:	
  2613 ;; *************** function ___wmul *****************
  2614 ;; Defined at:
  2615 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;  multiplier      2    0[COMMON] unsigned int 
  2618 ;;  multiplicand    2    2[COMMON] unsigned int 
  2619 ;; Auto vars:     Size  Location     Type
  2620 ;;  product         2    4[COMMON] unsigned int 
  2621 ;; Return value:  Size  Location     Type
  2622 ;;                  2    0[COMMON] unsigned int 
  2623 ;; Registers used:
  2624 ;;		wreg, status,2, status,0
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2630 ;;      Params:         4       0       0       0       0
  2631 ;;      Locals:         2       0       0       0       0
  2632 ;;      Temps:          0       0       0       0       0
  2633 ;;      Totals:         6       0       0       0       0
  2634 ;;Total ram usage:        6 bytes
  2635 ;; Hardware stack levels used:    1
  2636 ;; This function calls:
  2637 ;;		Nothing
  2638 ;; This function is called by:
  2639 ;;		_sent_data_set
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           
  2644                           ;psect for function ___wmul
  2645  0A55                     ___wmul:	
  2646                           
  2647                           ;incstack = 0
  2648                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2649  0A55  01F4               	clrf	___wmul@product
  2650  0A56  01F5               	clrf	___wmul@product+1
  2651  0A57                     l2226:	
  2652  0A57  1C70               	btfss	___wmul@multiplier,0
  2653  0A58  2A5F               	goto	l452
  2654  0A59  0872               	movf	___wmul@multiplicand,w
  2655  0A5A  07F4               	addwf	___wmul@product,f
  2656  0A5B  1803               	skipnc
  2657  0A5C  0AF5               	incf	___wmul@product+1,f
  2658  0A5D  0873               	movf	___wmul@multiplicand+1,w
  2659  0A5E  07F5               	addwf	___wmul@product+1,f
  2660  0A5F                     l452:	
  2661  0A5F  3001               	movlw	1
  2662  0A60                     u2455:	
  2663  0A60  1003               	clrc
  2664  0A61  0DF2               	rlf	___wmul@multiplicand,f
  2665  0A62  0DF3               	rlf	___wmul@multiplicand+1,f
  2666  0A63  3EFF               	addlw	-1
  2667  0A64  1D03               	skipz
  2668  0A65  2A60               	goto	u2455
  2669  0A66  3001               	movlw	1
  2670  0A67                     u2465:	
  2671  0A67  1003               	clrc
  2672  0A68  0CF1               	rrf	___wmul@multiplier+1,f
  2673  0A69  0CF0               	rrf	___wmul@multiplier,f
  2674  0A6A  3EFF               	addlw	-1
  2675  0A6B  1D03               	skipz
  2676  0A6C  2A67               	goto	u2465
  2677  0A6D  0870               	movf	___wmul@multiplier,w
  2678  0A6E  0471               	iorwf	___wmul@multiplier+1,w
  2679  0A6F  1D03               	btfss	3,2
  2680  0A70  2A57               	goto	l2226
  2681  0A71  0875               	movf	___wmul@product+1,w
  2682  0A72  00F1               	movwf	?___wmul+1
  2683  0A73  0874               	movf	___wmul@product,w
  2684  0A74  00F0               	movwf	?___wmul
  2685  0A75  0008               	return
  2686  0A76                     __end_of___wmul:	
  2687                           
  2688                           	psect	text10
  2689  00D8                     __ptext10:	
  2690 ;; *************** function _send_data_master *****************
  2691 ;; Defined at:
  2692 ;;		line 139 in file "protocol.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  destination     1    wreg     enum E1101
  2695 ;;  data_type       1    4[COMMON] enum E1107
  2696 ;;  data_end_com    1    5[COMMON] enum E1112
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;  destination     1    9[COMMON] enum E1101
  2699 ;;  i               1    8[COMMON] unsigned char 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;		None               void
  2702 ;; Registers used:
  2703 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2709 ;;      Params:         2       0       0       0       0
  2710 ;;      Locals:         2       0       0       0       0
  2711 ;;      Temps:          2       0       0       0       0
  2712 ;;      Totals:         6       0       0       0       0
  2713 ;;Total ram usage:        6 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:    1
  2716 ;; This function calls:
  2717 ;;		_spi_master_send
  2718 ;;		_tx_packet_clear
  2719 ;; This function is called by:
  2720 ;;		_main
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           
  2725                           ;psect for function _send_data_master
  2726  00D8                     _send_data_master:	
  2727                           
  2728                           ;incstack = 0
  2729                           ; Regs used in _send_data_master: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2730                           ;send_data_master@destination stored from wreg
  2731  00D8  00F9               	movwf	send_data_master@destination
  2732                           
  2733                           ;protocol.c: 141: uint8_t i;
  2734                           ;protocol.c: 144: tx_packet.data_type = (uint8_t)data_type;
  2735  00D9  0874               	movf	send_data_master@data_type,w
  2736  00DA  00F6               	movwf	??_send_data_master
  2737  00DB  0876               	movf	??_send_data_master,w
  2738  00DC  1683               	bsf	3,5	;RP0=1, select bank3
  2739  00DD  1703               	bsf	3,6	;RP1=1, select bank3
  2740  00DE  0090               	movwf	_tx_packet^(0+384)
  2741                           
  2742                           ;protocol.c: 145: tx_packet.data_end_command = (uint8_t)data_end_command;
  2743  00DF  0875               	movf	send_data_master@data_end_command,w
  2744  00E0  00F6               	movwf	??_send_data_master
  2745  00E1  0876               	movf	??_send_data_master,w
  2746  00E2  00B0               	movwf	(_tx_packet^(0+384)+32)
  2747                           
  2748                           ;protocol.c: 148: spi_master_send(destination, 0b10101010);
  2749  00E3  30AA               	movlw	170
  2750  00E4  00F6               	movwf	??_send_data_master
  2751  00E5  0876               	movf	??_send_data_master,w
  2752  00E6  00F0               	movwf	spi_master_send@data
  2753  00E7  0879               	movf	send_data_master@destination,w
  2754  00E8  120A  158A  23BD  120A  118A  	fcall	_spi_master_send
  2755                           
  2756                           ;protocol.c: 149: _delay((unsigned long)((10)*(20000000/4000.0)));
  2757  00ED  3041               	movlw	65
  2758  00EE  00F7               	movwf	??_send_data_master+1
  2759  00EF  30EE               	movlw	238
  2760  00F0  00F6               	movwf	??_send_data_master
  2761  00F1                     u2907:	
  2762  00F1  0BF6               	decfsz	??_send_data_master,f
  2763  00F2  28F1               	goto	u2907
  2764  00F3  0BF7               	decfsz	??_send_data_master+1,f
  2765  00F4  28F1               	goto	u2907
  2766  00F5  0000               	nop
  2767                           
  2768                           ;protocol.c: 152: spi_master_send(destination, 0x01);
  2769  00F6  01F0               	clrf	spi_master_send@data
  2770  00F7  0AF0               	incf	spi_master_send@data,f
  2771  00F8  0879               	movf	send_data_master@destination,w
  2772  00F9  120A  158A  23BD  120A  118A  	fcall	_spi_master_send
  2773                           
  2774                           ;protocol.c: 153: _delay((unsigned long)((10)*(20000000/4000.0)));
  2775  00FE  3041               	movlw	65
  2776  00FF  00F7               	movwf	??_send_data_master+1
  2777  0100  30EE               	movlw	238
  2778  0101  00F6               	movwf	??_send_data_master
  2779  0102                     u2917:	
  2780  0102  0BF6               	decfsz	??_send_data_master,f
  2781  0103  2902               	goto	u2917
  2782  0104  0BF7               	decfsz	??_send_data_master+1,f
  2783  0105  2902               	goto	u2917
  2784  0106  0000               	nop
  2785                           
  2786                           ;protocol.c: 156: spi_master_send(destination, tx_packet.data_type);
  2787  0107  1683               	bsf	3,5	;RP0=1, select bank3
  2788  0108  1703               	bsf	3,6	;RP1=1, select bank3
  2789  0109  0810               	movf	_tx_packet^(0+384),w
  2790  010A  00F6               	movwf	??_send_data_master
  2791  010B  0876               	movf	??_send_data_master,w
  2792  010C  00F0               	movwf	spi_master_send@data
  2793  010D  0879               	movf	send_data_master@destination,w
  2794  010E  120A  158A  23BD  120A  118A  	fcall	_spi_master_send
  2795                           
  2796                           ;protocol.c: 157: _delay((unsigned long)((10)*(20000000/4000.0)));
  2797  0113  3041               	movlw	65
  2798  0114  00F7               	movwf	??_send_data_master+1
  2799  0115  30EE               	movlw	238
  2800  0116  00F6               	movwf	??_send_data_master
  2801  0117                     u2927:	
  2802  0117  0BF6               	decfsz	??_send_data_master,f
  2803  0118  2917               	goto	u2927
  2804  0119  0BF7               	decfsz	??_send_data_master+1,f
  2805  011A  2917               	goto	u2927
  2806  011B  0000               	nop
  2807                           
  2808                           ;protocol.c: 160: spi_master_send(destination, tx_packet.payload_len);
  2809  011C  1683               	bsf	3,5	;RP0=1, select bank3
  2810  011D  1703               	bsf	3,6	;RP1=1, select bank3
  2811  011E  0811               	movf	(_tx_packet^(0+384)+1),w
  2812  011F  00F6               	movwf	??_send_data_master
  2813  0120  0876               	movf	??_send_data_master,w
  2814  0121  00F0               	movwf	spi_master_send@data
  2815  0122  0879               	movf	send_data_master@destination,w
  2816  0123  120A  158A  23BD  120A  118A  	fcall	_spi_master_send
  2817                           
  2818                           ;protocol.c: 161: _delay((unsigned long)((10)*(20000000/4000.0)));
  2819  0128  3041               	movlw	65
  2820  0129  00F7               	movwf	??_send_data_master+1
  2821  012A  30EE               	movlw	238
  2822  012B  00F6               	movwf	??_send_data_master
  2823  012C                     u2937:	
  2824  012C  0BF6               	decfsz	??_send_data_master,f
  2825  012D  292C               	goto	u2937
  2826  012E  0BF7               	decfsz	??_send_data_master+1,f
  2827  012F  292C               	goto	u2937
  2828  0130  0000               	nop
  2829                           
  2830                           ;protocol.c: 164: for(i = 0; i < tx_packet.payload_len; i++)
  2831  0131  01F8               	clrf	send_data_master@i
  2832  0132                     l2366:	
  2833  0132  1683               	bsf	3,5	;RP0=1, select bank3
  2834  0133  1703               	bsf	3,6	;RP1=1, select bank3
  2835  0134  0811               	movf	(_tx_packet^(0+384)+1),w
  2836  0135  0278               	subwf	send_data_master@i,w
  2837  0136  1803               	btfsc	3,0
  2838  0137  2954               	goto	l2368
  2839                           
  2840                           ;protocol.c: 165: {
  2841                           ;protocol.c: 166: spi_master_send(destination, tx_packet.payload[i]);
  2842  0138  0878               	movf	send_data_master@i,w
  2843  0139  3E92               	addlw	(low ((_tx_packet| (0+256)+2)))& (0+255)
  2844  013A  0084               	movwf	4
  2845  013B  1783               	bsf	3,7	;select IRP bank3
  2846  013C  0800               	movf	0,w
  2847  013D  00F6               	movwf	??_send_data_master
  2848  013E  0876               	movf	??_send_data_master,w
  2849  013F  00F0               	movwf	spi_master_send@data
  2850  0140  0879               	movf	send_data_master@destination,w
  2851  0141  120A  158A  23BD  120A  118A  	fcall	_spi_master_send
  2852                           
  2853                           ;protocol.c: 167: _delay((unsigned long)((10)*(20000000/4000.0)));
  2854  0146  3041               	movlw	65
  2855  0147  00F7               	movwf	??_send_data_master+1
  2856  0148  30EE               	movlw	238
  2857  0149  00F6               	movwf	??_send_data_master
  2858  014A                     u2947:	
  2859  014A  0BF6               	decfsz	??_send_data_master,f
  2860  014B  294A               	goto	u2947
  2861  014C  0BF7               	decfsz	??_send_data_master+1,f
  2862  014D  294A               	goto	u2947
  2863  014E  0000               	nop
  2864  014F  3001               	movlw	1
  2865  0150  00F6               	movwf	??_send_data_master
  2866  0151  0876               	movf	??_send_data_master,w
  2867  0152  07F8               	addwf	send_data_master@i,f
  2868  0153  2932               	goto	l2366
  2869  0154                     l2368:	
  2870                           
  2871                           ;protocol.c: 168: }
  2872                           ;protocol.c: 171: spi_master_send(destination, tx_packet.data_end_command);
  2873  0154  0830               	movf	(_tx_packet^(0+384)+32),w
  2874  0155  00F6               	movwf	??_send_data_master
  2875  0156  0876               	movf	??_send_data_master,w
  2876  0157  00F0               	movwf	spi_master_send@data
  2877  0158  0879               	movf	send_data_master@destination,w
  2878  0159  120A  158A  23BD  120A  118A  	fcall	_spi_master_send
  2879                           
  2880                           ;protocol.c: 172: _delay((unsigned long)((10)*(20000000/4000.0)));
  2881  015E  3041               	movlw	65
  2882  015F  00F7               	movwf	??_send_data_master+1
  2883  0160  30EE               	movlw	238
  2884  0161  00F6               	movwf	??_send_data_master
  2885  0162                     u2957:	
  2886  0162  0BF6               	decfsz	??_send_data_master,f
  2887  0163  2962               	goto	u2957
  2888  0164  0BF7               	decfsz	??_send_data_master+1,f
  2889  0165  2962               	goto	u2957
  2890  0166  0000               	nop
  2891                           
  2892                           ;protocol.c: 175: tx_packet_clear();
  2893  0167  120A  158A  21FB   	fcall	_tx_packet_clear
  2894  016A  0008               	return
  2895  016B                     __end_of_send_data_master:	
  2896                           
  2897                           	psect	text11
  2898  09FB                     __ptext11:	
  2899 ;; *************** function _tx_packet_clear *****************
  2900 ;; Defined at:
  2901 ;;		line 275 in file "protocol.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;		None
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  i               1    1[COMMON] unsigned char 
  2906 ;; Return value:  Size  Location     Type
  2907 ;;		None               void
  2908 ;; Registers used:
  2909 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2915 ;;      Params:         0       0       0       0       0
  2916 ;;      Locals:         1       0       0       0       0
  2917 ;;      Temps:          1       0       0       0       0
  2918 ;;      Totals:         2       0       0       0       0
  2919 ;;Total ram usage:        2 bytes
  2920 ;; Hardware stack levels used:    1
  2921 ;; This function calls:
  2922 ;;		Nothing
  2923 ;; This function is called by:
  2924 ;;		_send_data_master
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           
  2929                           ;psect for function _tx_packet_clear
  2930  09FB                     _tx_packet_clear:	
  2931                           
  2932                           ;protocol.c: 277: uint8_t i;
  2933                           ;protocol.c: 280: tx_packet.data_type = 0;
  2934                           
  2935                           ;incstack = 0
  2936                           ; Regs used in _tx_packet_clear: [wreg-fsr0h+status,2+status,0]
  2937  09FB  1683               	bsf	3,5	;RP0=1, select bank3
  2938  09FC  1703               	bsf	3,6	;RP1=1, select bank3
  2939  09FD  0190               	clrf	_tx_packet^(0+384)
  2940                           
  2941                           ;protocol.c: 283: tx_packet.payload_len = 0;
  2942  09FE  0191               	clrf	(_tx_packet^(0+384)+1)
  2943                           
  2944                           ;protocol.c: 286: for(i = 0; i < 30; i++)
  2945  09FF  01F1               	clrf	tx_packet_clear@i
  2946  0A00  301E               	movlw	30
  2947  0A01  0271               	subwf	tx_packet_clear@i,w
  2948  0A02  1803               	btfsc	3,0
  2949  0A03  2A11               	goto	l2164
  2950  0A04                     l2158:	
  2951                           
  2952                           ;protocol.c: 287: {
  2953                           ;protocol.c: 288: tx_packet.payload[i] = 0;
  2954  0A04  0871               	movf	tx_packet_clear@i,w
  2955  0A05  3E92               	addlw	(low ((_tx_packet| (0+256)+2)))& (0+255)
  2956  0A06  0084               	movwf	4
  2957  0A07  1783               	bsf	3,7	;select IRP bank3
  2958  0A08  0180               	clrf	0
  2959  0A09  3001               	movlw	1
  2960  0A0A  00F0               	movwf	??_tx_packet_clear
  2961  0A0B  0870               	movf	??_tx_packet_clear,w
  2962  0A0C  07F1               	addwf	tx_packet_clear@i,f
  2963  0A0D  301E               	movlw	30
  2964  0A0E  0271               	subwf	tx_packet_clear@i,w
  2965  0A0F  1C03               	skipc
  2966  0A10  2A04               	goto	l2158
  2967  0A11                     l2164:	
  2968                           
  2969                           ;protocol.c: 289: }
  2970                           ;protocol.c: 292: tx_packet.data_end_command = 0;
  2971  0A11  1683               	bsf	3,5	;RP0=1, select bank3
  2972  0A12  1703               	bsf	3,6	;RP1=1, select bank3
  2973  0A13  01B0               	clrf	(_tx_packet^(0+384)+32)
  2974  0A14  0008               	return
  2975  0A15                     __end_of_tx_packet_clear:	
  2976                           
  2977                           	psect	text12
  2978  0F75                     __ptext12:	
  2979 ;; *************** function _receive_data_master *****************
  2980 ;; Defined at:
  2981 ;;		line 189 in file "protocol.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;  destination     1    wreg     enum E1101
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;  destination     1   13[COMMON] enum E1101
  2986 ;;  i               1   12[COMMON] unsigned char 
  2987 ;; Return value:  Size  Location     Type
  2988 ;;		None               void
  2989 ;; Registers used:
  2990 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2996 ;;      Params:         0       0       0       0       0
  2997 ;;      Locals:         2       0       0       0       0
  2998 ;;      Temps:          2       0       0       0       0
  2999 ;;      Totals:         4       0       0       0       0
  3000 ;;Total ram usage:        4 bytes
  3001 ;; Hardware stack levels used:    1
  3002 ;; Hardware stack levels required when called:    2
  3003 ;; This function calls:
  3004 ;;		_flag_check
  3005 ;;		_spi_master_receive
  3006 ;;		_spi_master_send
  3007 ;; This function is called by:
  3008 ;;		_main
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           
  3013                           ;psect for function _receive_data_master
  3014  0F75                     _receive_data_master:	
  3015                           
  3016                           ;incstack = 0
  3017                           ; Regs used in _receive_data_master: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3018                           ;receive_data_master@destination stored from wreg
  3019  0F75  00FD               	movwf	receive_data_master@destination
  3020                           
  3021                           ;protocol.c: 191: uint8_t i;
  3022                           ;protocol.c: 194: flag_check(POW);
  3023  0F76  3003               	movlw	3
  3024  0F77  120A  158A  24AA  120A  158A  	fcall	_flag_check
  3025                           
  3026                           ;protocol.c: 197: spi_master_send(destination, 0b10101010);
  3027  0F7C  30AA               	movlw	170
  3028  0F7D  00FA               	movwf	??_receive_data_master
  3029  0F7E  087A               	movf	??_receive_data_master,w
  3030  0F7F  00F0               	movwf	spi_master_send@data
  3031  0F80  087D               	movf	receive_data_master@destination,w
  3032  0F81  120A  158A  23BD  120A  158A  	fcall	_spi_master_send
  3033                           
  3034                           ;protocol.c: 198: _delay((unsigned long)((10)*(20000000/4000.0)));
  3035  0F86  3041               	movlw	65
  3036  0F87  00FB               	movwf	??_receive_data_master+1
  3037  0F88  30EE               	movlw	238
  3038  0F89  00FA               	movwf	??_receive_data_master
  3039  0F8A                     u2967:	
  3040  0F8A  0BFA               	decfsz	??_receive_data_master,f
  3041  0F8B  2F8A               	goto	u2967
  3042  0F8C  0BFB               	decfsz	??_receive_data_master+1,f
  3043  0F8D  2F8A               	goto	u2967
  3044  0F8E  0000               	nop
  3045                           
  3046                           ;protocol.c: 201: spi_master_send(destination, 0x02);
  3047  0F8F  3002               	movlw	2
  3048  0F90  00FA               	movwf	??_receive_data_master
  3049  0F91  087A               	movf	??_receive_data_master,w
  3050  0F92  00F0               	movwf	spi_master_send@data
  3051  0F93  087D               	movf	receive_data_master@destination,w
  3052  0F94  120A  158A  23BD  120A  158A  	fcall	_spi_master_send
  3053                           
  3054                           ;protocol.c: 202: _delay((unsigned long)((10)*(20000000/4000.0)));
  3055  0F99  3041               	movlw	65
  3056  0F9A  00FB               	movwf	??_receive_data_master+1
  3057  0F9B  30EE               	movlw	238
  3058  0F9C  00FA               	movwf	??_receive_data_master
  3059  0F9D                     u2977:	
  3060  0F9D  0BFA               	decfsz	??_receive_data_master,f
  3061  0F9E  2F9D               	goto	u2977
  3062  0F9F  0BFB               	decfsz	??_receive_data_master+1,f
  3063  0FA0  2F9D               	goto	u2977
  3064  0FA1  0000               	nop
  3065                           
  3066                           ;protocol.c: 205: spi_master_receive(destination, &rx_packet.data_type);
  3067  0FA2  30B1               	movlw	(low (_rx_packet| (0+256)))& (0+255)
  3068  0FA3  00F0               	movwf	spi_master_receive@p_get
  3069  0FA4  3001               	movlw	1
  3070  0FA5  00F1               	movwf	spi_master_receive@p_get+1
  3071  0FA6  087D               	movf	receive_data_master@destination,w
  3072  0FA7  120A  158A  246D  120A  158A  	fcall	_spi_master_receive
  3073                           
  3074                           ;protocol.c: 206: _delay((unsigned long)((10)*(20000000/4000.0)));
  3075  0FAC  3041               	movlw	65
  3076  0FAD  00FB               	movwf	??_receive_data_master+1
  3077  0FAE  30EE               	movlw	238
  3078  0FAF  00FA               	movwf	??_receive_data_master
  3079  0FB0                     u2987:	
  3080  0FB0  0BFA               	decfsz	??_receive_data_master,f
  3081  0FB1  2FB0               	goto	u2987
  3082  0FB2  0BFB               	decfsz	??_receive_data_master+1,f
  3083  0FB3  2FB0               	goto	u2987
  3084  0FB4  0000               	nop
  3085                           
  3086                           ;protocol.c: 209: spi_master_receive(destination, &rx_packet.payload_len);
  3087  0FB5  30B2               	movlw	(low ((_rx_packet| (0+256)+1)))& (0+255)
  3088  0FB6  00F0               	movwf	spi_master_receive@p_get
  3089  0FB7  3001               	movlw	1
  3090  0FB8  00F1               	movwf	spi_master_receive@p_get+1
  3091  0FB9  087D               	movf	receive_data_master@destination,w
  3092  0FBA  120A  158A  246D  120A  158A  	fcall	_spi_master_receive
  3093                           
  3094                           ;protocol.c: 210: _delay((unsigned long)((10)*(20000000/4000.0)));
  3095  0FBF  3041               	movlw	65
  3096  0FC0  00FB               	movwf	??_receive_data_master+1
  3097  0FC1  30EE               	movlw	238
  3098  0FC2  00FA               	movwf	??_receive_data_master
  3099  0FC3                     u2997:	
  3100  0FC3  0BFA               	decfsz	??_receive_data_master,f
  3101  0FC4  2FC3               	goto	u2997
  3102  0FC5  0BFB               	decfsz	??_receive_data_master+1,f
  3103  0FC6  2FC3               	goto	u2997
  3104  0FC7  0000               	nop
  3105                           
  3106                           ;protocol.c: 213: for(i = 0; i < rx_packet.payload_len; i++)
  3107  0FC8  01FC               	clrf	receive_data_master@i
  3108  0FC9                     l2394:	
  3109  0FC9  1683               	bsf	3,5	;RP0=1, select bank3
  3110  0FCA  1703               	bsf	3,6	;RP1=1, select bank3
  3111  0FCB  0832               	movf	(_rx_packet^(0+384)+1),w
  3112  0FCC  027C               	subwf	receive_data_master@i,w
  3113  0FCD  1803               	btfsc	3,0
  3114  0FCE  2FE8               	goto	l2396
  3115                           
  3116                           ;protocol.c: 214: {
  3117                           ;protocol.c: 215: spi_master_receive(destination, &rx_packet.payload[i]);
  3118  0FCF  087C               	movf	receive_data_master@i,w
  3119  0FD0  3EB3               	addlw	(low ((_rx_packet| (0+256)+2)))& (0+255)
  3120  0FD1  00F0               	movwf	spi_master_receive@p_get
  3121  0FD2  3001               	movlw	1
  3122  0FD3  00F1               	movwf	spi_master_receive@p_get+1
  3123  0FD4  087D               	movf	receive_data_master@destination,w
  3124  0FD5  120A  158A  246D  120A  158A  	fcall	_spi_master_receive
  3125                           
  3126                           ;protocol.c: 216: _delay((unsigned long)((10)*(20000000/4000.0)));
  3127  0FDA  3041               	movlw	65
  3128  0FDB  00FB               	movwf	??_receive_data_master+1
  3129  0FDC  30EE               	movlw	238
  3130  0FDD  00FA               	movwf	??_receive_data_master
  3131  0FDE                     u3007:	
  3132  0FDE  0BFA               	decfsz	??_receive_data_master,f
  3133  0FDF  2FDE               	goto	u3007
  3134  0FE0  0BFB               	decfsz	??_receive_data_master+1,f
  3135  0FE1  2FDE               	goto	u3007
  3136  0FE2  0000               	nop
  3137  0FE3  3001               	movlw	1
  3138  0FE4  00FA               	movwf	??_receive_data_master
  3139  0FE5  087A               	movf	??_receive_data_master,w
  3140  0FE6  07FC               	addwf	receive_data_master@i,f
  3141  0FE7  2FC9               	goto	l2394
  3142  0FE8                     l2396:	
  3143                           
  3144                           ;protocol.c: 217: }
  3145                           ;protocol.c: 220: spi_master_receive(destination, &rx_packet.data_end_command);
  3146  0FE8  30D1               	movlw	(low ((_rx_packet| (0+256)+32)))& (0+255)
  3147  0FE9  00F0               	movwf	spi_master_receive@p_get
  3148  0FEA  3001               	movlw	1
  3149  0FEB  00F1               	movwf	spi_master_receive@p_get+1
  3150  0FEC  087D               	movf	receive_data_master@destination,w
  3151  0FED  120A  158A  246D  120A  158A  	fcall	_spi_master_receive
  3152                           
  3153                           ;protocol.c: 221: _delay((unsigned long)((10)*(20000000/4000.0)));
  3154  0FF2  3041               	movlw	65
  3155  0FF3  00FB               	movwf	??_receive_data_master+1
  3156  0FF4  30EE               	movlw	238
  3157  0FF5  00FA               	movwf	??_receive_data_master
  3158  0FF6                     u3017:	
  3159  0FF6  0BFA               	decfsz	??_receive_data_master,f
  3160  0FF7  2FF6               	goto	u3017
  3161  0FF8  0BFB               	decfsz	??_receive_data_master+1,f
  3162  0FF9  2FF6               	goto	u3017
  3163  0FFA  0000               	nop
  3164                           
  3165                           ;protocol.c: 224: rx_packet_status = TRUE;
  3166  0FFB  1683               	bsf	3,5	;RP0=1, select bank1
  3167  0FFC  1303               	bcf	3,6	;RP1=0, select bank1
  3168  0FFD  01E9               	clrf	_rx_packet_status^(0+128)
  3169  0FFE  0AE9               	incf	_rx_packet_status^(0+128),f
  3170  0FFF  0008               	return
  3171  1000                     __end_of_receive_data_master:	
  3172                           
  3173                           	psect	text13
  3174  0CAA                     __ptext13:	
  3175 ;; *************** function _flag_check *****************
  3176 ;; Defined at:
  3177 ;;		line 342 in file "protocol.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;  destination     1    wreg     enum E1101
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;  destination     1    9[COMMON] enum E1101
  3182 ;;  flag            1    8[COMMON] enum E1097
  3183 ;; Return value:  Size  Location     Type
  3184 ;;		None               void
  3185 ;; Registers used:
  3186 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3187 ;; Tracked objects:
  3188 ;;		On entry : 0/0
  3189 ;;		On exit  : 0/0
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3192 ;;      Params:         0       0       0       0       0
  3193 ;;      Locals:         2       0       0       0       0
  3194 ;;      Temps:          3       0       0       0       0
  3195 ;;      Totals:         5       0       0       0       0
  3196 ;;Total ram usage:        5 bytes
  3197 ;; Hardware stack levels used:    1
  3198 ;; Hardware stack levels required when called:    1
  3199 ;; This function calls:
  3200 ;;		_spi_master_receive
  3201 ;;		_spi_master_send
  3202 ;; This function is called by:
  3203 ;;		_receive_data_master
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           
  3208                           ;psect for function _flag_check
  3209  0CAA                     _flag_check:	
  3210                           
  3211                           ;incstack = 0
  3212                           ; Regs used in _flag_check: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3213                           ;flag_check@destination stored from wreg
  3214  0CAA  00F9               	movwf	flag_check@destination
  3215  0CAB                     l143:	
  3216                           ;protocol.c: 344: bool_t flag;
  3217                           ;protocol.c: 347: do
  3218                           
  3219                           
  3220                           ;protocol.c: 348: {
  3221                           ;protocol.c: 350: spi_master_send(destination, 0b10101010);
  3222  0CAB  30AA               	movlw	170
  3223  0CAC  00F5               	movwf	??_flag_check
  3224  0CAD  0875               	movf	??_flag_check,w
  3225  0CAE  00F0               	movwf	spi_master_send@data
  3226  0CAF  0879               	movf	flag_check@destination,w
  3227  0CB0  120A  158A  23BD  120A  158A  	fcall	_spi_master_send
  3228                           
  3229                           ;protocol.c: 351: _delay((unsigned long)((10)*(20000000/4000.0)));
  3230  0CB5  3041               	movlw	65
  3231  0CB6  00F6               	movwf	??_flag_check+1
  3232  0CB7  30EE               	movlw	238
  3233  0CB8  00F5               	movwf	??_flag_check
  3234  0CB9                     u3027:	
  3235  0CB9  0BF5               	decfsz	??_flag_check,f
  3236  0CBA  2CB9               	goto	u3027
  3237  0CBB  0BF6               	decfsz	??_flag_check+1,f
  3238  0CBC  2CB9               	goto	u3027
  3239  0CBD  0000               	nop
  3240                           
  3241                           ;protocol.c: 354: spi_master_send(destination, 0x03);
  3242  0CBE  3003               	movlw	3
  3243  0CBF  00F5               	movwf	??_flag_check
  3244  0CC0  0875               	movf	??_flag_check,w
  3245  0CC1  00F0               	movwf	spi_master_send@data
  3246  0CC2  0879               	movf	flag_check@destination,w
  3247  0CC3  120A  158A  23BD  120A  158A  	fcall	_spi_master_send
  3248                           
  3249                           ;protocol.c: 355: _delay((unsigned long)((10)*(20000000/4000.0)));
  3250  0CC8  3041               	movlw	65
  3251  0CC9  00F6               	movwf	??_flag_check+1
  3252  0CCA  30EE               	movlw	238
  3253  0CCB  00F5               	movwf	??_flag_check
  3254  0CCC                     u3037:	
  3255  0CCC  0BF5               	decfsz	??_flag_check,f
  3256  0CCD  2CCC               	goto	u3037
  3257  0CCE  0BF6               	decfsz	??_flag_check+1,f
  3258  0CCF  2CCC               	goto	u3037
  3259  0CD0  0000               	nop
  3260                           
  3261                           ;protocol.c: 358: spi_master_receive(destination, &flag);
  3262  0CD1  3078               	movlw	(low (flag_check@flag| 0))& (0+255)
  3263  0CD2  00F0               	movwf	spi_master_receive@p_get
  3264  0CD3  3000               	movlw	0
  3265  0CD4  00F1               	movwf	spi_master_receive@p_get+1
  3266  0CD5  0879               	movf	flag_check@destination,w
  3267  0CD6  120A  158A  246D  120A  158A  	fcall	_spi_master_receive
  3268                           
  3269                           ;protocol.c: 361: _delay((unsigned long)((500)*(20000000/4000.0)));
  3270  0CDB  300D               	movlw	13
  3271  0CDC  00F7               	movwf	??_flag_check+2
  3272  0CDD  30AF               	movlw	175
  3273  0CDE  00F6               	movwf	??_flag_check+1
  3274  0CDF  30C1               	movlw	193
  3275  0CE0  00F5               	movwf	??_flag_check
  3276  0CE1                     u3047:	
  3277  0CE1  0BF5               	decfsz	??_flag_check,f
  3278  0CE2  2CE1               	goto	u3047
  3279  0CE3  0BF6               	decfsz	??_flag_check+1,f
  3280  0CE4  2CE1               	goto	u3047
  3281  0CE5  0BF7               	decfsz	??_flag_check+2,f
  3282  0CE6  2CE1               	goto	u3047
  3283  0CE7  0000               	nop
  3284                           
  3285                           ;protocol.c: 362: } while(flag == FALSE);
  3286  0CE8  0878               	movf	flag_check@flag,w
  3287  0CE9  1D03               	btfss	3,2
  3288  0CEA  0008               	return
  3289  0CEB  2CAB               	goto	l143
  3290  0CEC                     __end_of_flag_check:	
  3291                           
  3292                           	psect	text14
  3293  0BBD                     __ptext14:	
  3294 ;; *************** function _spi_master_send *****************
  3295 ;; Defined at:
  3296 ;;		line 85 in file "spi_master.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;  destination     1    wreg     enum E1101
  3299 ;;  data            1    0[COMMON] unsigned char 
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;  destination     1    3[COMMON] enum E1101
  3302 ;;  buf             1    2[COMMON] unsigned char 
  3303 ;; Return value:  Size  Location     Type
  3304 ;;		None               void
  3305 ;; Registers used:
  3306 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3312 ;;      Params:         1       0       0       0       0
  3313 ;;      Locals:         2       0       0       0       0
  3314 ;;      Temps:          1       0       0       0       0
  3315 ;;      Totals:         4       0       0       0       0
  3316 ;;Total ram usage:        4 bytes
  3317 ;; Hardware stack levels used:    1
  3318 ;; This function calls:
  3319 ;;		Nothing
  3320 ;; This function is called by:
  3321 ;;		_send_data_master
  3322 ;;		_receive_data_master
  3323 ;;		_flag_check
  3324 ;; This function uses a non-reentrant model
  3325 ;;
  3326                           
  3327                           
  3328                           ;psect for function _spi_master_send
  3329  0BBD                     _spi_master_send:	
  3330                           
  3331                           ;incstack = 0
  3332                           ; Regs used in _spi_master_send: [wreg-fsr0h+status,2+status,0]
  3333                           ;spi_master_send@destination stored from wreg
  3334  0BBD  00F3               	movwf	spi_master_send@destination
  3335                           
  3336                           ;spi_master.c: 87: uint8_t buf;
  3337                           ;spi_master.c: 90: buf = SSPBUF;
  3338  0BBE  1283               	bcf	3,5	;RP0=0, select bank0
  3339  0BBF  1303               	bcf	3,6	;RP1=0, select bank0
  3340  0BC0  0813               	movf	19,w	;volatile
  3341  0BC1  00F1               	movwf	??_spi_master_send
  3342  0BC2  0871               	movf	??_spi_master_send,w
  3343  0BC3  00F2               	movwf	spi_master_send@buf
  3344                           
  3345                           ;spi_master.c: 93: switch(destination)
  3346  0BC4  2BCB               	goto	l1900
  3347  0BC5                     l194:	
  3348                           ;spi_master.c: 94: {
  3349                           ;spi_master.c: 95: case OBC2:
  3350                           
  3351                           
  3352                           ;spi_master.c: 96: PORTCbits.RC2 = 0;
  3353  0BC5  1107               	bcf	7,2	;volatile
  3354                           
  3355                           ;spi_master.c: 97: break;
  3356  0BC6  2BD6               	goto	l1902
  3357  0BC7                     l196:	
  3358                           ;spi_master.c: 98: case COM:
  3359                           
  3360                           
  3361                           ;spi_master.c: 99: PORTCbits.RC0 = 0;
  3362  0BC7  1007               	bcf	7,0	;volatile
  3363                           
  3364                           ;spi_master.c: 100: break;
  3365  0BC8  2BD6               	goto	l1902
  3366  0BC9                     l197:	
  3367                           ;spi_master.c: 101: case POW:
  3368                           
  3369                           
  3370                           ;spi_master.c: 102: PORTCbits.RC1 = 0;
  3371  0BC9  1087               	bcf	7,1	;volatile
  3372                           
  3373                           ;spi_master.c: 106: }
  3374                           
  3375                           ;spi_master.c: 105: break;
  3376                           
  3377                           ;spi_master.c: 104: default:
  3378                           
  3379                           ;spi_master.c: 103: break;
  3380  0BCA  2BD6               	goto	l1902
  3381  0BCB                     l1900:	
  3382  0BCB  0873               	movf	spi_master_send@destination,w
  3383                           
  3384                           ; Switch size 1, requested type "space"
  3385                           ; Number of cases is 3, Range of values is 1 to 3
  3386                           ; switch strategies available:
  3387                           ; Name         Instructions Cycles
  3388                           ; simple_byte           10     6 (average)
  3389                           ; direct_byte           20    11 (fixed)
  3390                           ; jumptable            263     9 (fixed)
  3391                           ;	Chosen strategy is simple_byte
  3392  0BCC  3A01               	xorlw	1	; case 1
  3393  0BCD  1903               	skipnz
  3394  0BCE  2BC5               	goto	l194
  3395  0BCF  3A03               	xorlw	3	; case 2
  3396  0BD0  1903               	skipnz
  3397  0BD1  2BC7               	goto	l196
  3398  0BD2  3A01               	xorlw	1	; case 3
  3399  0BD3  1903               	skipnz
  3400  0BD4  2BC9               	goto	l197
  3401  0BD5  2BD6               	goto	l1902
  3402  0BD6                     l1902:	
  3403                           
  3404                           ;spi_master.c: 109: SSPBUF = data;
  3405  0BD6  0870               	movf	spi_master_send@data,w
  3406  0BD7  0093               	movwf	19	;volatile
  3407  0BD8                     l199:	
  3408                           ;spi_master.c: 113: {
  3409                           ;spi_master.c: 114: ;
  3410                           
  3411                           ;spi_master.c: 112: while(SSPSTATbits.BF == 0)
  3412                           
  3413  0BD8  1683               	bsf	3,5	;RP0=1, select bank1
  3414  0BD9  1303               	bcf	3,6	;RP1=0, select bank1
  3415  0BDA  1814               	btfsc	20,0	;volatile
  3416  0BDB  2BE6               	goto	l1906
  3417  0BDC  2BD8               	goto	l199
  3418  0BDD                     l203:	
  3419                           ;spi_master.c: 119: {
  3420                           ;spi_master.c: 120: case OBC2:
  3421                           
  3422                           ;spi_master.c: 115: }
  3423                           ;spi_master.c: 118: switch(destination)
  3424                           
  3425                           
  3426                           ;spi_master.c: 121: PORTCbits.RC2 = 1;
  3427  0BDD  1283               	bcf	3,5	;RP0=0, select bank0
  3428  0BDE  1507               	bsf	7,2	;volatile
  3429                           
  3430                           ;spi_master.c: 122: break;
  3431  0BDF  2BF1               	goto	l1908
  3432  0BE0                     l205:	
  3433                           ;spi_master.c: 123: case COM:
  3434                           
  3435                           
  3436                           ;spi_master.c: 124: PORTCbits.RC0 = 1;
  3437  0BE0  1283               	bcf	3,5	;RP0=0, select bank0
  3438  0BE1  1407               	bsf	7,0	;volatile
  3439                           
  3440                           ;spi_master.c: 125: break;
  3441  0BE2  2BF1               	goto	l1908
  3442  0BE3                     l206:	
  3443                           ;spi_master.c: 126: case POW:
  3444                           
  3445                           
  3446                           ;spi_master.c: 127: PORTCbits.RC1 = 1;
  3447  0BE3  1283               	bcf	3,5	;RP0=0, select bank0
  3448  0BE4  1487               	bsf	7,1	;volatile
  3449                           
  3450                           ;spi_master.c: 131: }
  3451                           
  3452                           ;spi_master.c: 130: break;
  3453                           
  3454                           ;spi_master.c: 129: default:
  3455                           
  3456                           ;spi_master.c: 128: break;
  3457  0BE5  2BF1               	goto	l1908
  3458  0BE6                     l1906:	
  3459  0BE6  0873               	movf	spi_master_send@destination,w
  3460                           
  3461                           ; Switch size 1, requested type "space"
  3462                           ; Number of cases is 3, Range of values is 1 to 3
  3463                           ; switch strategies available:
  3464                           ; Name         Instructions Cycles
  3465                           ; simple_byte           10     6 (average)
  3466                           ; direct_byte           20    11 (fixed)
  3467                           ; jumptable            263     9 (fixed)
  3468                           ;	Chosen strategy is simple_byte
  3469  0BE7  3A01               	xorlw	1	; case 1
  3470  0BE8  1903               	skipnz
  3471  0BE9  2BDD               	goto	l203
  3472  0BEA  3A03               	xorlw	3	; case 2
  3473  0BEB  1903               	skipnz
  3474  0BEC  2BE0               	goto	l205
  3475  0BED  3A01               	xorlw	1	; case 3
  3476  0BEE  1903               	skipnz
  3477  0BEF  2BE3               	goto	l206
  3478  0BF0  2BF1               	goto	l1908
  3479  0BF1                     l1908:	
  3480                           
  3481                           ;spi_master.c: 134: buf = SSPBUF;
  3482  0BF1  1283               	bcf	3,5	;RP0=0, select bank0
  3483  0BF2  0813               	movf	19,w	;volatile
  3484  0BF3  00F1               	movwf	??_spi_master_send
  3485  0BF4  0871               	movf	??_spi_master_send,w
  3486  0BF5  00F2               	movwf	spi_master_send@buf
  3487  0BF6  0008               	return
  3488  0BF7                     __end_of_spi_master_send:	
  3489                           
  3490                           	psect	text15
  3491  0C6D                     __ptext15:	
  3492 ;; *************** function _spi_master_receive *****************
  3493 ;; Defined at:
  3494 ;;		line 149 in file "spi_master.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;  destination     1    wreg     enum E1101
  3497 ;;  p_get           2    0[COMMON] PTR unsigned char 
  3498 ;;		 -> flag_check@flag(1), rx_packet.payload(30), rx_packet(33), 
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;  destination     1    4[COMMON] enum E1101
  3501 ;;  buf             1    3[COMMON] unsigned char 
  3502 ;; Return value:  Size  Location     Type
  3503 ;;		None               void
  3504 ;; Registers used:
  3505 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3511 ;;      Params:         2       0       0       0       0
  3512 ;;      Locals:         2       0       0       0       0
  3513 ;;      Temps:          1       0       0       0       0
  3514 ;;      Totals:         5       0       0       0       0
  3515 ;;Total ram usage:        5 bytes
  3516 ;; Hardware stack levels used:    1
  3517 ;; This function calls:
  3518 ;;		Nothing
  3519 ;; This function is called by:
  3520 ;;		_receive_data_master
  3521 ;;		_flag_check
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525                           
  3526                           ;psect for function _spi_master_receive
  3527  0C6D                     _spi_master_receive:	
  3528                           
  3529                           ;incstack = 0
  3530                           ; Regs used in _spi_master_receive: [wreg-fsr0h+status,2+status,0]
  3531                           ;spi_master_receive@destination stored from wreg
  3532  0C6D  00F4               	movwf	spi_master_receive@destination
  3533                           
  3534                           ;spi_master.c: 151: uint8_t buf;
  3535                           ;spi_master.c: 154: buf = SSPBUF;
  3536  0C6E  1283               	bcf	3,5	;RP0=0, select bank0
  3537  0C6F  1303               	bcf	3,6	;RP1=0, select bank0
  3538  0C70  0813               	movf	19,w	;volatile
  3539  0C71  00F2               	movwf	??_spi_master_receive
  3540  0C72  0872               	movf	??_spi_master_receive,w
  3541  0C73  00F3               	movwf	spi_master_receive@buf
  3542                           
  3543                           ;spi_master.c: 157: switch(destination)
  3544  0C74  2C7B               	goto	l1914
  3545  0C75                     l212:	
  3546                           ;spi_master.c: 158: {
  3547                           ;spi_master.c: 159: case OBC2:
  3548                           
  3549                           
  3550                           ;spi_master.c: 160: PORTCbits.RC2 = 0;
  3551  0C75  1107               	bcf	7,2	;volatile
  3552                           
  3553                           ;spi_master.c: 161: break;
  3554  0C76  2C86               	goto	l1916
  3555  0C77                     l214:	
  3556                           ;spi_master.c: 162: case COM:
  3557                           
  3558                           
  3559                           ;spi_master.c: 163: PORTCbits.RC0 = 0;
  3560  0C77  1007               	bcf	7,0	;volatile
  3561                           
  3562                           ;spi_master.c: 164: break;
  3563  0C78  2C86               	goto	l1916
  3564  0C79                     l215:	
  3565                           ;spi_master.c: 165: case POW:
  3566                           
  3567                           
  3568                           ;spi_master.c: 166: PORTCbits.RC1 = 0;
  3569  0C79  1087               	bcf	7,1	;volatile
  3570                           
  3571                           ;spi_master.c: 170: }
  3572                           
  3573                           ;spi_master.c: 169: break;
  3574                           
  3575                           ;spi_master.c: 168: default:
  3576                           
  3577                           ;spi_master.c: 167: break;
  3578  0C7A  2C86               	goto	l1916
  3579  0C7B                     l1914:	
  3580  0C7B  0874               	movf	spi_master_receive@destination,w
  3581                           
  3582                           ; Switch size 1, requested type "space"
  3583                           ; Number of cases is 3, Range of values is 1 to 3
  3584                           ; switch strategies available:
  3585                           ; Name         Instructions Cycles
  3586                           ; simple_byte           10     6 (average)
  3587                           ; direct_byte           20    11 (fixed)
  3588                           ; jumptable            263     9 (fixed)
  3589                           ;	Chosen strategy is simple_byte
  3590  0C7C  3A01               	xorlw	1	; case 1
  3591  0C7D  1903               	skipnz
  3592  0C7E  2C75               	goto	l212
  3593  0C7F  3A03               	xorlw	3	; case 2
  3594  0C80  1903               	skipnz
  3595  0C81  2C77               	goto	l214
  3596  0C82  3A01               	xorlw	1	; case 3
  3597  0C83  1903               	skipnz
  3598  0C84  2C79               	goto	l215
  3599  0C85  2C86               	goto	l1916
  3600  0C86                     l1916:	
  3601                           
  3602                           ;spi_master.c: 173: SSPBUF = 0xff;
  3603  0C86  30FF               	movlw	255
  3604  0C87  0093               	movwf	19	;volatile
  3605  0C88                     l217:	
  3606                           ;spi_master.c: 177: {
  3607                           ;spi_master.c: 178: ;
  3608                           
  3609                           ;spi_master.c: 176: while(SSPSTATbits.BF == 0)
  3610                           
  3611  0C88  1683               	bsf	3,5	;RP0=1, select bank1
  3612  0C89  1303               	bcf	3,6	;RP1=0, select bank1
  3613  0C8A  1814               	btfsc	20,0	;volatile
  3614  0C8B  2C96               	goto	l1920
  3615  0C8C  2C88               	goto	l217
  3616  0C8D                     l221:	
  3617                           ;spi_master.c: 183: {
  3618                           ;spi_master.c: 184: case OBC2:
  3619                           
  3620                           ;spi_master.c: 179: }
  3621                           ;spi_master.c: 182: switch(destination)
  3622                           
  3623                           
  3624                           ;spi_master.c: 185: PORTCbits.RC2 = 1;
  3625  0C8D  1283               	bcf	3,5	;RP0=0, select bank0
  3626  0C8E  1507               	bsf	7,2	;volatile
  3627                           
  3628                           ;spi_master.c: 186: break;
  3629  0C8F  2CA1               	goto	l1922
  3630  0C90                     l223:	
  3631                           ;spi_master.c: 187: case COM:
  3632                           
  3633                           
  3634                           ;spi_master.c: 188: PORTCbits.RC0 = 1;
  3635  0C90  1283               	bcf	3,5	;RP0=0, select bank0
  3636  0C91  1407               	bsf	7,0	;volatile
  3637                           
  3638                           ;spi_master.c: 189: break;
  3639  0C92  2CA1               	goto	l1922
  3640  0C93                     l224:	
  3641                           ;spi_master.c: 190: case POW:
  3642                           
  3643                           
  3644                           ;spi_master.c: 191: PORTCbits.RC1 = 1;
  3645  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  3646  0C94  1487               	bsf	7,1	;volatile
  3647                           
  3648                           ;spi_master.c: 195: }
  3649                           
  3650                           ;spi_master.c: 194: break;
  3651                           
  3652                           ;spi_master.c: 193: default:
  3653                           
  3654                           ;spi_master.c: 192: break;
  3655  0C95  2CA1               	goto	l1922
  3656  0C96                     l1920:	
  3657  0C96  0874               	movf	spi_master_receive@destination,w
  3658                           
  3659                           ; Switch size 1, requested type "space"
  3660                           ; Number of cases is 3, Range of values is 1 to 3
  3661                           ; switch strategies available:
  3662                           ; Name         Instructions Cycles
  3663                           ; simple_byte           10     6 (average)
  3664                           ; direct_byte           20    11 (fixed)
  3665                           ; jumptable            263     9 (fixed)
  3666                           ;	Chosen strategy is simple_byte
  3667  0C97  3A01               	xorlw	1	; case 1
  3668  0C98  1903               	skipnz
  3669  0C99  2C8D               	goto	l221
  3670  0C9A  3A03               	xorlw	3	; case 2
  3671  0C9B  1903               	skipnz
  3672  0C9C  2C90               	goto	l223
  3673  0C9D  3A01               	xorlw	1	; case 3
  3674  0C9E  1903               	skipnz
  3675  0C9F  2C93               	goto	l224
  3676  0CA0  2CA1               	goto	l1922
  3677  0CA1                     l1922:	
  3678                           
  3679                           ;spi_master.c: 198: *p_get = SSPBUF;
  3680  0CA1  0870               	movf	spi_master_receive@p_get,w
  3681  0CA2  0084               	movwf	4
  3682  0CA3  1383               	bcf	3,7
  3683  0CA4  1871               	btfsc	spi_master_receive@p_get+1,0
  3684  0CA5  1783               	bsf	3,7
  3685  0CA6  1283               	bcf	3,5	;RP0=0, select bank0
  3686  0CA7  0813               	movf	19,w	;volatile
  3687  0CA8  0080               	movwf	0
  3688  0CA9  0008               	return
  3689  0CAA                     __end_of_spi_master_receive:	
  3690                           
  3691                           	psect	text16
  3692  0A34                     __ptext16:	
  3693 ;; *************** function _put_string *****************
  3694 ;; Defined at:
  3695 ;;		line 76 in file "uart.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;  str             1    wreg     PTR unsigned char 
  3698 ;;		 -> STR_2(3), STR_1(24), 
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;  str             1    2[COMMON] PTR unsigned char 
  3701 ;;		 -> STR_2(3), STR_1(24), 
  3702 ;; Return value:  Size  Location     Type
  3703 ;;		None               void
  3704 ;; Registers used:
  3705 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3711 ;;      Params:         0       0       0       0       0
  3712 ;;      Locals:         1       0       0       0       0
  3713 ;;      Temps:          1       0       0       0       0
  3714 ;;      Totals:         2       0       0       0       0
  3715 ;;Total ram usage:        2 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; Hardware stack levels required when called:    1
  3718 ;; This function calls:
  3719 ;;		_put_char
  3720 ;; This function is called by:
  3721 ;;		_main
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725                           
  3726                           ;psect for function _put_string
  3727  0A34                     _put_string:	
  3728                           
  3729                           ;incstack = 0
  3730                           ; Regs used in _put_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3731                           ;put_string@str stored from wreg
  3732  0A34  00F2               	movwf	put_string@str
  3733  0A35                     l2326:	
  3734                           ;uart.c: 78: while(*str != '\0')
  3735                           
  3736  0A35  0872               	movf	put_string@str,w
  3737  0A36  0084               	movwf	4
  3738  0A37  120A  158A  2000  120A  158A  	fcall	stringdir
  3739  0A3C  3A00               	xorlw	0
  3740  0A3D  1903               	btfsc	3,2
  3741  0A3E  2A50               	goto	l2328
  3742                           
  3743                           ;uart.c: 79: {
  3744                           ;uart.c: 80: put_char(*str);
  3745  0A3F  0872               	movf	put_string@str,w
  3746  0A40  0084               	movwf	4
  3747  0A41  120A  158A  2000  120A  158A  	fcall	stringdir
  3748  0A46  120A  158A  217B  120A  158A  	fcall	_put_char
  3749                           
  3750                           ;uart.c: 81: str++;
  3751  0A4B  3001               	movlw	1
  3752  0A4C  00F1               	movwf	??_put_string
  3753  0A4D  0871               	movf	??_put_string,w
  3754  0A4E  07F2               	addwf	put_string@str,f
  3755  0A4F  2A35               	goto	l2326
  3756  0A50                     l2328:	
  3757                           
  3758                           ;uart.c: 82: }
  3759                           ;uart.c: 84: put_char('\0');
  3760  0A50  3000               	movlw	0
  3761  0A51  120A  158A  217B   	fcall	_put_char
  3762  0A54  0008               	return
  3763  0A55                     __end_of_put_string:	
  3764                           
  3765                           	psect	text17
  3766  097B                     __ptext17:	
  3767 ;; *************** function _put_char *****************
  3768 ;; Defined at:
  3769 ;;		line 60 in file "uart.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;  byte_data       1    wreg     unsigned char 
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;  byte_data       1    0[COMMON] unsigned char 
  3774 ;; Return value:  Size  Location     Type
  3775 ;;		None               void
  3776 ;; Registers used:
  3777 ;;		wreg
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3783 ;;      Params:         0       0       0       0       0
  3784 ;;      Locals:         1       0       0       0       0
  3785 ;;      Temps:          0       0       0       0       0
  3786 ;;      Totals:         1       0       0       0       0
  3787 ;;Total ram usage:        1 bytes
  3788 ;; Hardware stack levels used:    1
  3789 ;; This function calls:
  3790 ;;		Nothing
  3791 ;; This function is called by:
  3792 ;;		_main
  3793 ;;		_put_string
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           
  3798                           ;psect for function _put_char
  3799  097B                     _put_char:	
  3800                           
  3801                           ;incstack = 0
  3802                           ; Regs used in _put_char: [wreg]
  3803                           ;put_char@byte_data stored from wreg
  3804  097B  00F0               	movwf	put_char@byte_data
  3805  097C                     l250:	
  3806                           ;uart.c: 64: {
  3807                           ;uart.c: 65: ;
  3808                           
  3809                           ;uart.c: 63: while(TXIF == 0)
  3810                           
  3811  097C  1283               	bcf	3,5	;RP0=0, select bank0
  3812  097D  1303               	bcf	3,6	;RP1=0, select bank0
  3813  097E  1E0C               	btfss	12,4	;volatile
  3814  097F  297C               	goto	l250
  3815                           
  3816                           ;uart.c: 66: }
  3817                           ;uart.c: 69: TXREG = byte_data;
  3818  0980  0870               	movf	put_char@byte_data,w
  3819  0981  0099               	movwf	25	;volatile
  3820  0982  0008               	return
  3821  0983                     __end_of_put_char:	
  3822                           
  3823                           	psect	text18
  3824  09AD                     __ptext18:	
  3825 ;; *************** function _pic_port_init *****************
  3826 ;; Defined at:
  3827 ;;		line 158 in file "main.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;		None
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;		None
  3832 ;; Return value:  Size  Location     Type
  3833 ;;		None               void
  3834 ;; Registers used:
  3835 ;;		status,2
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3841 ;;      Params:         0       0       0       0       0
  3842 ;;      Locals:         0       0       0       0       0
  3843 ;;      Temps:          0       0       0       0       0
  3844 ;;      Totals:         0       0       0       0       0
  3845 ;;Total ram usage:        0 bytes
  3846 ;; Hardware stack levels used:    1
  3847 ;; This function calls:
  3848 ;;		Nothing
  3849 ;; This function is called by:
  3850 ;;		_main
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           
  3855                           ;psect for function _pic_port_init
  3856  09AD                     _pic_port_init:	
  3857                           
  3858                           ;main.c: 161: TRISA = 0x00;
  3859                           
  3860                           ;incstack = 0
  3861                           ; Regs used in _pic_port_init: [status,2]
  3862  09AD  1683               	bsf	3,5	;RP0=1, select bank1
  3863  09AE  1303               	bcf	3,6	;RP1=0, select bank1
  3864  09AF  0185               	clrf	5	;volatile
  3865                           
  3866                           ;main.c: 162: TRISB = 0x00;
  3867  09B0  0186               	clrf	6	;volatile
  3868                           
  3869                           ;main.c: 163: TRISC = 0x00;
  3870  09B1  0187               	clrf	7	;volatile
  3871                           
  3872                           ;main.c: 164: TRISD = 0x00;
  3873  09B2  0188               	clrf	8	;volatile
  3874                           
  3875                           ;main.c: 165: TRISE = 0x00;
  3876  09B3  0189               	clrf	9	;volatile
  3877                           
  3878                           ;main.c: 168: PORTA = 0x00;
  3879  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  3880  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  3881  09B6  0185               	clrf	5	;volatile
  3882                           
  3883                           ;main.c: 169: PORTB = 0x00;
  3884  09B7  0186               	clrf	6	;volatile
  3885                           
  3886                           ;main.c: 170: PORTC = 0x00;
  3887  09B8  0187               	clrf	7	;volatile
  3888                           
  3889                           ;main.c: 171: PORTD = 0x00;
  3890  09B9  0188               	clrf	8	;volatile
  3891                           
  3892                           ;main.c: 172: PORTE = 0x00;
  3893  09BA  0189               	clrf	9	;volatile
  3894  09BB  0008               	return
  3895  09BC                     __end_of_pic_port_init:	
  3896                           
  3897                           	psect	text19
  3898  0009                     __ptext19:	
  3899 ;; *************** function _number_to_string_char *****************
  3900 ;; Defined at:
  3901 ;;		line 21 in file "convert.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;  buf             1    wreg     PTR unsigned char 
  3904 ;;		 -> main@temp_buf_c(5), 
  3905 ;;  num             1   12[BANK0 ] unsigned char 
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;  buf             1   16[BANK0 ] PTR unsigned char 
  3908 ;;		 -> main@temp_buf_c(5), 
  3909 ;;  flag            1   15[BANK0 ] unsigned char 
  3910 ;; Return value:  Size  Location     Type
  3911 ;;		None               void
  3912 ;; Registers used:
  3913 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3914 ;; Tracked objects:
  3915 ;;		On entry : 0/0
  3916 ;;		On exit  : 0/0
  3917 ;;		Unchanged: 0/0
  3918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3919 ;;      Params:         0       1       0       0       0
  3920 ;;      Locals:         0       2       0       0       0
  3921 ;;      Temps:          0       2       0       0       0
  3922 ;;      Totals:         0       5       0       0       0
  3923 ;;Total ram usage:        5 bytes
  3924 ;; Hardware stack levels used:    1
  3925 ;; Hardware stack levels required when called:    3
  3926 ;; This function calls:
  3927 ;;		___bmul
  3928 ;;		convert@process_1
  3929 ;;		convert@process_10
  3930 ;;		convert@process_100
  3931 ;; This function is called by:
  3932 ;;		_main
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935                           
  3936                           
  3937                           ;psect for function _number_to_string_char
  3938  0009                     _number_to_string_char:	
  3939                           
  3940                           ;incstack = 0
  3941                           ; Regs used in _number_to_string_char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3942                           ;number_to_string_char@buf stored from wreg
  3943  0009  1283               	bcf	3,5	;RP0=0, select bank0
  3944  000A  1303               	bcf	3,6	;RP1=0, select bank0
  3945  000B  00B0               	movwf	number_to_string_char@buf
  3946                           
  3947                           ;convert.c: 23: uint8_t flag = 0;
  3948  000C  01AF               	clrf	number_to_string_char@flag
  3949                           
  3950                           ;convert.c: 43: }
  3951                           ;convert.c: 46: if((100) <= num && num <= (127))
  3952                           
  3953                           ;convert.c: 42: num *= (-1);
  3954                           
  3955                           ;convert.c: 41: flag++;
  3956                           
  3957                           ;convert.c: 39: {
  3958                           ;convert.c: 40: buf[flag] = '-';
  3959                           
  3960                           ;convert.c: 35: }
  3961                           ;convert.c: 38: if(num < 0)
  3962                           
  3963                           ;convert.c: 34: return;
  3964                           
  3965                           ;convert.c: 32: buf[4] = '\0';
  3966                           
  3967                           ;convert.c: 31: buf[3] = '8';
  3968                           
  3969                           ;convert.c: 30: buf[2] = '2';
  3970                           
  3971                           ;convert.c: 29: buf[1] = '1';
  3972                           
  3973                           ;convert.c: 27: {
  3974                           ;convert.c: 28: buf[0] = '-';
  3975                           
  3976                           ;convert.c: 26: if(num == (-128))
  3977  000D  3064               	movlw	100
  3978  000E  022C               	subwf	number_to_string_char@num,w
  3979  000F  1C03               	skipc
  3980  0010  2822               	goto	l2310
  3981  0011  3080               	movlw	128
  3982  0012  022C               	subwf	number_to_string_char@num,w
  3983  0013  1803               	skipnc
  3984  0014  2822               	goto	l2310
  3985                           
  3986                           ;convert.c: 47: {
  3987                           ;convert.c: 48: process_100(num, &flag, buf);
  3988  0015  302F               	movlw	(low (number_to_string_char@flag| 0))& (0+255)
  3989  0016  00AD               	movwf	??_number_to_string_char
  3990  0017  082D               	movf	??_number_to_string_char,w
  3991  0018  00A5               	movwf	convert@process_100@p_flag
  3992  0019  0830               	movf	number_to_string_char@buf,w
  3993  001A  00AE               	movwf	??_number_to_string_char+1
  3994  001B  082E               	movf	??_number_to_string_char+1,w
  3995  001C  00A6               	movwf	convert@process_100@p_buf
  3996  001D  082C               	movf	number_to_string_char@num,w
  3997  001E  120A  158A  2385   	fcall	convert@process_100
  3998                           
  3999                           ;convert.c: 49: }
  4000  0021  0008               	return
  4001  0022                     l2310:	
  4002                           
  4003                           ;convert.c: 50: else if((10) <= num && num <= (99))
  4004  0022  300A               	movlw	10
  4005  0023  1283               	bcf	3,5	;RP0=0, select bank0
  4006  0024  1303               	bcf	3,6	;RP1=0, select bank0
  4007  0025  022C               	subwf	number_to_string_char@num,w
  4008  0026  1C03               	skipc
  4009  0027  2839               	goto	l2316
  4010  0028  3064               	movlw	100
  4011  0029  022C               	subwf	number_to_string_char@num,w
  4012  002A  1803               	skipnc
  4013  002B  2839               	goto	l2316
  4014                           
  4015                           ;convert.c: 51: {
  4016                           ;convert.c: 52: process_10(num, &flag, buf);
  4017  002C  302F               	movlw	(low (number_to_string_char@flag| 0))& (0+255)
  4018  002D  00AD               	movwf	??_number_to_string_char
  4019  002E  082D               	movf	??_number_to_string_char,w
  4020  002F  00F9               	movwf	convert@process_10@p_flag
  4021  0030  0830               	movf	number_to_string_char@buf,w
  4022  0031  00AE               	movwf	??_number_to_string_char+1
  4023  0032  082E               	movf	??_number_to_string_char+1,w
  4024  0033  00FA               	movwf	convert@process_10@p_buf
  4025  0034  082C               	movf	number_to_string_char@num,w
  4026  0035  120A  158A  263D   	fcall	convert@process_10
  4027                           
  4028                           ;convert.c: 53: }
  4029  0038  0008               	return
  4030  0039                     l2316:	
  4031                           ;convert.c: 54: else if((0) <= num && num <= (9))
  4032                           
  4033  0039  300A               	movlw	10
  4034  003A  1283               	bcf	3,5	;RP0=0, select bank0
  4035  003B  1303               	bcf	3,6	;RP1=0, select bank0
  4036  003C  022C               	subwf	number_to_string_char@num,w
  4037  003D  1803               	skipnc
  4038  003E  0008               	return
  4039                           
  4040                           ;convert.c: 55: {
  4041                           ;convert.c: 56: process_1(num, &flag, buf);
  4042  003F  302F               	movlw	(low (number_to_string_char@flag| 0))& (0+255)
  4043  0040  00AD               	movwf	??_number_to_string_char
  4044  0041  082D               	movf	??_number_to_string_char,w
  4045  0042  00F0               	movwf	convert@process_1@p_flag
  4046  0043  0830               	movf	number_to_string_char@buf,w
  4047  0044  00AE               	movwf	??_number_to_string_char+1
  4048  0045  082E               	movf	??_number_to_string_char+1,w
  4049  0046  00F1               	movwf	convert@process_1@p_buf
  4050  0047  082C               	movf	number_to_string_char@num,w
  4051  0048  120A  158A  2431   	fcall	convert@process_1
  4052                           
  4053                           ;convert.c: 58: else
  4054                           ;convert.c: 59: {
  4055                           
  4056                           ;convert.c: 57: }
  4057  004B  0008               	return
  4058  004C                     __end_of_number_to_string_char:	
  4059                           
  4060                           	psect	text20
  4061  0B85                     __ptext20:	
  4062 ;; *************** function convert@process_100 *****************
  4063 ;; Defined at:
  4064 ;;		line 68 in file "convert.c"
  4065 ;; Parameters:    Size  Location     Type
  4066 ;;  num             1    wreg     unsigned char 
  4067 ;;  p_flag          1    5[BANK0 ] PTR unsigned char 
  4068 ;;		 -> number_to_string_char@flag(1), 
  4069 ;;  p_buf           1    6[BANK0 ] PTR unsigned char 
  4070 ;;		 -> main@temp_buf_c(5), 
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;  num             1   10[BANK0 ] unsigned char 
  4073 ;;  remainder_10    1   11[BANK0 ] unsigned char 
  4074 ;; Return value:  Size  Location     Type
  4075 ;;		None               void
  4076 ;; Registers used:
  4077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4083 ;;      Params:         0       2       0       0       0
  4084 ;;      Locals:         0       2       0       0       0
  4085 ;;      Temps:          0       3       0       0       0
  4086 ;;      Totals:         0       7       0       0       0
  4087 ;;Total ram usage:        7 bytes
  4088 ;; Hardware stack levels used:    1
  4089 ;; Hardware stack levels required when called:    2
  4090 ;; This function calls:
  4091 ;;		___awmod
  4092 ;;		convert@process_10
  4093 ;; This function is called by:
  4094 ;;		_number_to_string_char
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           
  4099                           ;psect for function convert@process_100
  4100  0B85                     convert@process_100:	
  4101                           
  4102                           ;incstack = 0
  4103                           ; Regs used in convert@process_100: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4104                           ;convert@process_100@num stored from wreg
  4105  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  4106  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  4107  0B87  00AA               	movwf	convert@process_100@num
  4108                           
  4109                           ;convert.c: 70: uint8_t remainder_100 = num % 100;
  4110  0B88  3064               	movlw	100
  4111  0B89  00F0               	movwf	___awmod@divisor
  4112  0B8A  3000               	movlw	0
  4113  0B8B  00F1               	movwf	___awmod@divisor+1
  4114  0B8C  082A               	movf	convert@process_100@num,w
  4115  0B8D  00A7               	movwf	??convert@process_100
  4116  0B8E  01A8               	clrf	??convert@process_100+1
  4117  0B8F  0827               	movf	??convert@process_100,w
  4118  0B90  00F2               	movwf	___awmod@dividend
  4119  0B91  0828               	movf	??convert@process_100+1,w
  4120  0B92  00F3               	movwf	___awmod@dividend+1
  4121  0B93  120A  158A  24EC  120A  158A  	fcall	___awmod
  4122  0B98  0870               	movf	?___awmod,w
  4123  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  4124  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  4125  0B9B  00A9               	movwf	??convert@process_100+2
  4126  0B9C  0829               	movf	??convert@process_100+2,w
  4127  0B9D  00AB               	movwf	convert@process_100@remainder_100
  4128                           
  4129                           ;convert.c: 72: p_buf[*p_flag] = (0x30) + 1;
  4130  0B9E  3031               	movlw	49
  4131  0B9F  00A7               	movwf	??convert@process_100
  4132  0BA0  0825               	movf	convert@process_100@p_flag,w
  4133  0BA1  0084               	movwf	4
  4134  0BA2  1383               	bcf	3,7	;select IRP bank0
  4135  0BA3  0800               	movf	0,w
  4136  0BA4  0726               	addwf	convert@process_100@p_buf,w
  4137  0BA5  00A8               	movwf	??convert@process_100+1
  4138  0BA6  0828               	movf	??convert@process_100+1,w
  4139  0BA7  0084               	movwf	4
  4140  0BA8  0827               	movf	??convert@process_100,w
  4141  0BA9  0080               	movwf	0
  4142                           
  4143                           ;convert.c: 73: (*p_flag)++;
  4144  0BAA  3001               	movlw	1
  4145  0BAB  00A7               	movwf	??convert@process_100
  4146  0BAC  0825               	movf	convert@process_100@p_flag,w
  4147  0BAD  0084               	movwf	4
  4148  0BAE  0827               	movf	??convert@process_100,w
  4149  0BAF  0780               	addwf	0,f
  4150                           
  4151                           ;convert.c: 75: process_10(remainder_100, p_flag, p_buf);
  4152  0BB0  0825               	movf	convert@process_100@p_flag,w
  4153  0BB1  00A7               	movwf	??convert@process_100
  4154  0BB2  0827               	movf	??convert@process_100,w
  4155  0BB3  00F9               	movwf	convert@process_10@p_flag
  4156  0BB4  0826               	movf	convert@process_100@p_buf,w
  4157  0BB5  00A8               	movwf	??convert@process_100+1
  4158  0BB6  0828               	movf	??convert@process_100+1,w
  4159  0BB7  00FA               	movwf	convert@process_10@p_buf
  4160  0BB8  082B               	movf	convert@process_100@remainder_100,w
  4161  0BB9  120A  158A  263D   	fcall	convert@process_10
  4162  0BBC  0008               	return
  4163  0BBD                     __end_ofconvert@process_100:	
  4164                           
  4165                           	psect	text21
  4166  0E3D                     __ptext21:	
  4167 ;; *************** function convert@process_10 *****************
  4168 ;; Defined at:
  4169 ;;		line 82 in file "convert.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;  num             1    wreg     unsigned char 
  4172 ;;  p_flag          1    9[COMMON] PTR unsigned char 
  4173 ;;		 -> number_to_string_char@flag(1), 
  4174 ;;  p_buf           1   10[COMMON] PTR unsigned char 
  4175 ;;		 -> main@temp_buf_c(5), 
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;  num             1    4[BANK0 ] unsigned char 
  4178 ;;  i               1    3[BANK0 ] unsigned char 
  4179 ;;  val             1    2[BANK0 ] unsigned char 
  4180 ;;  remainder_10    1    1[BANK0 ] unsigned char 
  4181 ;;  divide_10       1    0[BANK0 ] unsigned char 
  4182 ;; Return value:  Size  Location     Type
  4183 ;;		None               void
  4184 ;; Registers used:
  4185 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4191 ;;      Params:         2       0       0       0       0
  4192 ;;      Locals:         0       5       0       0       0
  4193 ;;      Temps:          3       0       0       0       0
  4194 ;;      Totals:         5       5       0       0       0
  4195 ;;Total ram usage:       10 bytes
  4196 ;; Hardware stack levels used:    1
  4197 ;; Hardware stack levels required when called:    1
  4198 ;; This function calls:
  4199 ;;		___awdiv
  4200 ;;		___awmod
  4201 ;;		convert@process_1
  4202 ;; This function is called by:
  4203 ;;		_number_to_string_char
  4204 ;;		convert@process_100
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           
  4209                           ;psect for function convert@process_10
  4210  0E3D                     convert@process_10:	
  4211                           
  4212                           ;incstack = 0
  4213                           ; Regs used in convert@process_10: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4214                           ;convert@process_10@num stored from wreg
  4215  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  4216  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  4217  0E3F  00A4               	movwf	convert@process_10@num
  4218                           
  4219                           ;convert.c: 84: uint8_t divide_10 = num / 10;
  4220  0E40  300A               	movlw	10
  4221  0E41  00F0               	movwf	___awdiv@divisor
  4222  0E42  3000               	movlw	0
  4223  0E43  00F1               	movwf	___awdiv@divisor+1
  4224  0E44  0824               	movf	convert@process_10@num,w
  4225  0E45  00FB               	movwf	??convert@process_10
  4226  0E46  01FC               	clrf	??convert@process_10+1
  4227  0E47  087B               	movf	??convert@process_10,w
  4228  0E48  00F2               	movwf	___awdiv@dividend
  4229  0E49  087C               	movf	??convert@process_10+1,w
  4230  0E4A  00F3               	movwf	___awdiv@dividend+1
  4231  0E4B  120A  158A  2587  120A  158A  	fcall	___awdiv
  4232  0E50  0870               	movf	?___awdiv,w
  4233  0E51  00FD               	movwf	??convert@process_10+2
  4234  0E52  087D               	movf	??convert@process_10+2,w
  4235  0E53  1283               	bcf	3,5	;RP0=0, select bank0
  4236  0E54  1303               	bcf	3,6	;RP1=0, select bank0
  4237  0E55  00A0               	movwf	convert@process_10@divide_10
  4238                           
  4239                           ;convert.c: 85: uint8_t remainder_10 = num % 10;
  4240  0E56  300A               	movlw	10
  4241  0E57  00F0               	movwf	___awmod@divisor
  4242  0E58  3000               	movlw	0
  4243  0E59  00F1               	movwf	___awmod@divisor+1
  4244  0E5A  0824               	movf	convert@process_10@num,w
  4245  0E5B  00FB               	movwf	??convert@process_10
  4246  0E5C  01FC               	clrf	??convert@process_10+1
  4247  0E5D  087B               	movf	??convert@process_10,w
  4248  0E5E  00F2               	movwf	___awmod@dividend
  4249  0E5F  087C               	movf	??convert@process_10+1,w
  4250  0E60  00F3               	movwf	___awmod@dividend+1
  4251  0E61  120A  158A  24EC  120A  158A  	fcall	___awmod
  4252  0E66  0870               	movf	?___awmod,w
  4253  0E67  00FD               	movwf	??convert@process_10+2
  4254  0E68  087D               	movf	??convert@process_10+2,w
  4255  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  4256  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  4257  0E6B  00A1               	movwf	convert@process_10@remainder_10
  4258                           
  4259                           ;convert.c: 86: uint8_t val = (0x30);
  4260  0E6C  3030               	movlw	48
  4261  0E6D  00FB               	movwf	??convert@process_10
  4262  0E6E  087B               	movf	??convert@process_10,w
  4263  0E6F  00A2               	movwf	convert@process_10@val
  4264                           
  4265                           ;convert.c: 87: uint8_t i;
  4266                           ;convert.c: 89: for(i = 0; i < divide_10; i++)
  4267  0E70  01A3               	clrf	convert@process_10@i
  4268  0E71                     l1952:	
  4269  0E71  0820               	movf	convert@process_10@divide_10,w
  4270  0E72  0223               	subwf	convert@process_10@i,w
  4271  0E73  1803               	btfsc	3,0
  4272  0E74  2E7E               	goto	l1954
  4273                           
  4274                           ;convert.c: 90: {
  4275                           ;convert.c: 91: val++;
  4276  0E75  3001               	movlw	1
  4277  0E76  00FB               	movwf	??convert@process_10
  4278  0E77  087B               	movf	??convert@process_10,w
  4279  0E78  07A2               	addwf	convert@process_10@val,f
  4280  0E79  3001               	movlw	1
  4281  0E7A  00FB               	movwf	??convert@process_10
  4282  0E7B  087B               	movf	??convert@process_10,w
  4283  0E7C  07A3               	addwf	convert@process_10@i,f
  4284  0E7D  2E71               	goto	l1952
  4285  0E7E                     l1954:	
  4286                           
  4287                           ;convert.c: 92: }
  4288                           ;convert.c: 94: p_buf[*p_flag] = val;
  4289  0E7E  0822               	movf	convert@process_10@val,w
  4290  0E7F  00FB               	movwf	??convert@process_10
  4291  0E80  0879               	movf	convert@process_10@p_flag,w
  4292  0E81  0084               	movwf	4
  4293  0E82  1383               	bcf	3,7	;select IRP bank0
  4294  0E83  0800               	movf	0,w
  4295  0E84  077A               	addwf	convert@process_10@p_buf,w
  4296  0E85  00FC               	movwf	??convert@process_10+1
  4297  0E86  087C               	movf	??convert@process_10+1,w
  4298  0E87  0084               	movwf	4
  4299  0E88  087B               	movf	??convert@process_10,w
  4300  0E89  0080               	movwf	0
  4301                           
  4302                           ;convert.c: 95: (*p_flag)++;
  4303  0E8A  3001               	movlw	1
  4304  0E8B  00FB               	movwf	??convert@process_10
  4305  0E8C  0879               	movf	convert@process_10@p_flag,w
  4306  0E8D  0084               	movwf	4
  4307  0E8E  087B               	movf	??convert@process_10,w
  4308  0E8F  0780               	addwf	0,f
  4309                           
  4310                           ;convert.c: 97: process_1(remainder_10, p_flag, p_buf);
  4311  0E90  0879               	movf	convert@process_10@p_flag,w
  4312  0E91  00FB               	movwf	??convert@process_10
  4313  0E92  087B               	movf	??convert@process_10,w
  4314  0E93  00F0               	movwf	convert@process_1@p_flag
  4315  0E94  087A               	movf	convert@process_10@p_buf,w
  4316  0E95  00FC               	movwf	??convert@process_10+1
  4317  0E96  087C               	movf	??convert@process_10+1,w
  4318  0E97  00F1               	movwf	convert@process_1@p_buf
  4319  0E98  0821               	movf	convert@process_10@remainder_10,w
  4320  0E99  120A  158A  2431   	fcall	convert@process_1
  4321  0E9C  0008               	return
  4322  0E9D                     __end_ofconvert@process_10:	
  4323                           
  4324                           	psect	text22
  4325  0C31                     __ptext22:	
  4326 ;; *************** function convert@process_1 *****************
  4327 ;; Defined at:
  4328 ;;		line 104 in file "convert.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;  num             1    wreg     unsigned char 
  4331 ;;  p_flag          1    0[COMMON] PTR unsigned char 
  4332 ;;		 -> number_to_string_char@flag(1), 
  4333 ;;  p_buf           1    1[COMMON] PTR unsigned char 
  4334 ;;		 -> main@temp_buf_c(5), 
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;  num             1    4[COMMON] unsigned char 
  4337 ;;  i               2    5[COMMON] int 
  4338 ;;  val             1    8[COMMON] unsigned char 
  4339 ;;  divide_1        1    7[COMMON] unsigned char 
  4340 ;; Return value:  Size  Location     Type
  4341 ;;		None               void
  4342 ;; Registers used:
  4343 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4349 ;;      Params:         2       0       0       0       0
  4350 ;;      Locals:         5       0       0       0       0
  4351 ;;      Temps:          2       0       0       0       0
  4352 ;;      Totals:         9       0       0       0       0
  4353 ;;Total ram usage:        9 bytes
  4354 ;; Hardware stack levels used:    1
  4355 ;; This function calls:
  4356 ;;		Nothing
  4357 ;; This function is called by:
  4358 ;;		_number_to_string_char
  4359 ;;		convert@process_10
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363                           
  4364                           ;psect for function convert@process_1
  4365  0C31                     convert@process_1:	
  4366                           
  4367                           ;incstack = 0
  4368                           ; Regs used in convert@process_1: [wreg-fsr0h+status,2+status,0]
  4369                           ;convert@process_1@num stored from wreg
  4370  0C31  00F4               	movwf	convert@process_1@num
  4371                           
  4372                           ;convert.c: 106: uint8_t divide_1 = num;
  4373  0C32  0874               	movf	convert@process_1@num,w
  4374  0C33  00F2               	movwf	??convert@process_1
  4375  0C34  0872               	movf	??convert@process_1,w
  4376  0C35  00F7               	movwf	convert@process_1@divide_1
  4377                           
  4378                           ;convert.c: 107: uint8_t val = (0x30);
  4379  0C36  3030               	movlw	48
  4380  0C37  00F2               	movwf	??convert@process_1
  4381  0C38  0872               	movf	??convert@process_1,w
  4382  0C39  00F8               	movwf	convert@process_1@val
  4383                           
  4384                           ;convert.c: 108: int i;
  4385                           ;convert.c: 110: for(i = 0; i < divide_1; i++)
  4386  0C3A  01F5               	clrf	convert@process_1@i
  4387  0C3B  01F6               	clrf	convert@process_1@i+1
  4388  0C3C                     l1752:	
  4389  0C3C  0876               	movf	convert@process_1@i+1,w
  4390  0C3D  3A80               	xorlw	128
  4391  0C3E  00F2               	movwf	??convert@process_1
  4392  0C3F  3080               	movlw	128
  4393  0C40  0272               	subwf	??convert@process_1,w
  4394  0C41  1D03               	skipz
  4395  0C42  2C45               	goto	u1565
  4396  0C43  0877               	movf	convert@process_1@divide_1,w
  4397  0C44  0275               	subwf	convert@process_1@i,w
  4398  0C45                     u1565:	
  4399  0C45  1803               	btfsc	3,0
  4400  0C46  2C52               	goto	l1754
  4401                           
  4402                           ;convert.c: 111: {
  4403                           ;convert.c: 112: val++;
  4404  0C47  3001               	movlw	1
  4405  0C48  00F2               	movwf	??convert@process_1
  4406  0C49  0872               	movf	??convert@process_1,w
  4407  0C4A  07F8               	addwf	convert@process_1@val,f
  4408  0C4B  3001               	movlw	1
  4409  0C4C  07F5               	addwf	convert@process_1@i,f
  4410  0C4D  1803               	skipnc
  4411  0C4E  0AF6               	incf	convert@process_1@i+1,f
  4412  0C4F  3000               	movlw	0
  4413  0C50  07F6               	addwf	convert@process_1@i+1,f
  4414  0C51  2C3C               	goto	l1752
  4415  0C52                     l1754:	
  4416                           
  4417                           ;convert.c: 113: }
  4418                           ;convert.c: 115: p_buf[*p_flag] = val;
  4419  0C52  0878               	movf	convert@process_1@val,w
  4420  0C53  00F2               	movwf	??convert@process_1
  4421  0C54  0870               	movf	convert@process_1@p_flag,w
  4422  0C55  0084               	movwf	4
  4423  0C56  1383               	bcf	3,7	;select IRP bank0
  4424  0C57  0800               	movf	0,w
  4425  0C58  0771               	addwf	convert@process_1@p_buf,w
  4426  0C59  00F3               	movwf	??convert@process_1+1
  4427  0C5A  0873               	movf	??convert@process_1+1,w
  4428  0C5B  0084               	movwf	4
  4429  0C5C  0872               	movf	??convert@process_1,w
  4430  0C5D  0080               	movwf	0
  4431                           
  4432                           ;convert.c: 116: (*p_flag)++;
  4433  0C5E  3001               	movlw	1
  4434  0C5F  00F2               	movwf	??convert@process_1
  4435  0C60  0870               	movf	convert@process_1@p_flag,w
  4436  0C61  0084               	movwf	4
  4437  0C62  0872               	movf	??convert@process_1,w
  4438  0C63  0780               	addwf	0,f
  4439                           
  4440                           ;convert.c: 118: p_buf[*p_flag] = '\0';
  4441  0C64  0870               	movf	convert@process_1@p_flag,w
  4442  0C65  0084               	movwf	4
  4443  0C66  0800               	movf	0,w
  4444  0C67  0771               	addwf	convert@process_1@p_buf,w
  4445  0C68  00F2               	movwf	??convert@process_1
  4446  0C69  0872               	movf	??convert@process_1,w
  4447  0C6A  0084               	movwf	4
  4448  0C6B  0180               	clrf	0
  4449  0C6C  0008               	return
  4450  0C6D                     __end_ofconvert@process_1:	
  4451                           
  4452                           	psect	text23
  4453  0CEC                     __ptext23:	
  4454 ;; *************** function ___awmod *****************
  4455 ;; Defined at:
  4456 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;  divisor         2    0[COMMON] int 
  4459 ;;  dividend        2    2[COMMON] int 
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;  sign            1    6[COMMON] unsigned char 
  4462 ;;  counter         1    5[COMMON] unsigned char 
  4463 ;; Return value:  Size  Location     Type
  4464 ;;                  2    0[COMMON] int 
  4465 ;; Registers used:
  4466 ;;		wreg, status,2, status,0
  4467 ;; Tracked objects:
  4468 ;;		On entry : 0/0
  4469 ;;		On exit  : 0/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4472 ;;      Params:         4       0       0       0       0
  4473 ;;      Locals:         2       0       0       0       0
  4474 ;;      Temps:          1       0       0       0       0
  4475 ;;      Totals:         7       0       0       0       0
  4476 ;;Total ram usage:        7 bytes
  4477 ;; Hardware stack levels used:    1
  4478 ;; This function calls:
  4479 ;;		Nothing
  4480 ;; This function is called by:
  4481 ;;		convert@process_100
  4482 ;;		convert@process_10
  4483 ;;		_process_100
  4484 ;;		_process_10
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488                           
  4489                           ;psect for function ___awmod
  4490  0CEC                     ___awmod:	
  4491                           
  4492                           ;incstack = 0
  4493                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4494  0CEC  01F6               	clrf	___awmod@sign
  4495  0CED  1FF3               	btfss	___awmod@dividend+1,7
  4496  0CEE  2CF6               	goto	l1812
  4497  0CEF  09F2               	comf	___awmod@dividend,f
  4498  0CF0  09F3               	comf	___awmod@dividend+1,f
  4499  0CF1  0AF2               	incf	___awmod@dividend,f
  4500  0CF2  1903               	skipnz
  4501  0CF3  0AF3               	incf	___awmod@dividend+1,f
  4502  0CF4  01F6               	clrf	___awmod@sign
  4503  0CF5  0AF6               	incf	___awmod@sign,f
  4504  0CF6                     l1812:	
  4505  0CF6  1FF1               	btfss	___awmod@divisor+1,7
  4506  0CF7  2CFD               	goto	l1816
  4507  0CF8  09F0               	comf	___awmod@divisor,f
  4508  0CF9  09F1               	comf	___awmod@divisor+1,f
  4509  0CFA  0AF0               	incf	___awmod@divisor,f
  4510  0CFB  1903               	skipnz
  4511  0CFC  0AF1               	incf	___awmod@divisor+1,f
  4512  0CFD                     l1816:	
  4513  0CFD  0870               	movf	___awmod@divisor,w
  4514  0CFE  0471               	iorwf	___awmod@divisor+1,w
  4515  0CFF  1903               	btfsc	3,2
  4516  0D00  2D2A               	goto	l1834
  4517  0D01  01F5               	clrf	___awmod@counter
  4518  0D02  0AF5               	incf	___awmod@counter,f
  4519  0D03                     l1824:	
  4520  0D03  1BF1               	btfsc	___awmod@divisor+1,7
  4521  0D04  2D11               	goto	l1826
  4522  0D05  3001               	movlw	1
  4523  0D06                     u1725:	
  4524  0D06  1003               	clrc
  4525  0D07  0DF0               	rlf	___awmod@divisor,f
  4526  0D08  0DF1               	rlf	___awmod@divisor+1,f
  4527  0D09  3EFF               	addlw	-1
  4528  0D0A  1D03               	skipz
  4529  0D0B  2D06               	goto	u1725
  4530  0D0C  3001               	movlw	1
  4531  0D0D  00F4               	movwf	??___awmod
  4532  0D0E  0874               	movf	??___awmod,w
  4533  0D0F  07F5               	addwf	___awmod@counter,f
  4534  0D10  2D03               	goto	l1824
  4535  0D11                     l1826:	
  4536  0D11  0871               	movf	___awmod@divisor+1,w
  4537  0D12  0273               	subwf	___awmod@dividend+1,w
  4538  0D13  1D03               	skipz
  4539  0D14  2D17               	goto	u1745
  4540  0D15  0870               	movf	___awmod@divisor,w
  4541  0D16  0272               	subwf	___awmod@dividend,w
  4542  0D17                     u1745:	
  4543  0D17  1C03               	skipc
  4544  0D18  2D1F               	goto	l1830
  4545  0D19  0870               	movf	___awmod@divisor,w
  4546  0D1A  02F2               	subwf	___awmod@dividend,f
  4547  0D1B  0871               	movf	___awmod@divisor+1,w
  4548  0D1C  1C03               	skipc
  4549  0D1D  03F3               	decf	___awmod@dividend+1,f
  4550  0D1E  02F3               	subwf	___awmod@dividend+1,f
  4551  0D1F                     l1830:	
  4552  0D1F  3001               	movlw	1
  4553  0D20                     u1755:	
  4554  0D20  1003               	clrc
  4555  0D21  0CF1               	rrf	___awmod@divisor+1,f
  4556  0D22  0CF0               	rrf	___awmod@divisor,f
  4557  0D23  3EFF               	addlw	-1
  4558  0D24  1D03               	skipz
  4559  0D25  2D20               	goto	u1755
  4560  0D26  3001               	movlw	1
  4561  0D27  02F5               	subwf	___awmod@counter,f
  4562  0D28  1D03               	btfss	3,2
  4563  0D29  2D11               	goto	l1826
  4564  0D2A                     l1834:	
  4565  0D2A  0876               	movf	___awmod@sign,w
  4566  0D2B  1903               	btfsc	3,2
  4567  0D2C  2D32               	goto	l1838
  4568  0D2D  09F2               	comf	___awmod@dividend,f
  4569  0D2E  09F3               	comf	___awmod@dividend+1,f
  4570  0D2F  0AF2               	incf	___awmod@dividend,f
  4571  0D30  1903               	skipnz
  4572  0D31  0AF3               	incf	___awmod@dividend+1,f
  4573  0D32                     l1838:	
  4574  0D32  0873               	movf	___awmod@dividend+1,w
  4575  0D33  00F1               	movwf	?___awmod+1
  4576  0D34  0872               	movf	___awmod@dividend,w
  4577  0D35  00F0               	movwf	?___awmod
  4578  0D36  0008               	return
  4579  0D37                     __end_of___awmod:	
  4580                           
  4581                           	psect	text24
  4582  0D87                     __ptext24:	
  4583 ;; *************** function ___awdiv *****************
  4584 ;; Defined at:
  4585 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  4586 ;; Parameters:    Size  Location     Type
  4587 ;;  divisor         2    0[COMMON] int 
  4588 ;;  dividend        2    2[COMMON] int 
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;  quotient        2    7[COMMON] int 
  4591 ;;  sign            1    6[COMMON] unsigned char 
  4592 ;;  counter         1    5[COMMON] unsigned char 
  4593 ;; Return value:  Size  Location     Type
  4594 ;;                  2    0[COMMON] int 
  4595 ;; Registers used:
  4596 ;;		wreg, status,2, status,0
  4597 ;; Tracked objects:
  4598 ;;		On entry : 0/0
  4599 ;;		On exit  : 0/0
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4602 ;;      Params:         4       0       0       0       0
  4603 ;;      Locals:         4       0       0       0       0
  4604 ;;      Temps:          1       0       0       0       0
  4605 ;;      Totals:         9       0       0       0       0
  4606 ;;Total ram usage:        9 bytes
  4607 ;; Hardware stack levels used:    1
  4608 ;; This function calls:
  4609 ;;		Nothing
  4610 ;; This function is called by:
  4611 ;;		convert@process_10
  4612 ;;		_process_10
  4613 ;; This function uses a non-reentrant model
  4614 ;;
  4615                           
  4616                           
  4617                           ;psect for function ___awdiv
  4618  0D87                     ___awdiv:	
  4619                           
  4620                           ;incstack = 0
  4621                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4622  0D87  01F6               	clrf	___awdiv@sign
  4623  0D88  1FF1               	btfss	___awdiv@divisor+1,7
  4624  0D89  2D91               	goto	l1768
  4625  0D8A  09F0               	comf	___awdiv@divisor,f
  4626  0D8B  09F1               	comf	___awdiv@divisor+1,f
  4627  0D8C  0AF0               	incf	___awdiv@divisor,f
  4628  0D8D  1903               	skipnz
  4629  0D8E  0AF1               	incf	___awdiv@divisor+1,f
  4630  0D8F  01F6               	clrf	___awdiv@sign
  4631  0D90  0AF6               	incf	___awdiv@sign,f
  4632  0D91                     l1768:	
  4633  0D91  1FF3               	btfss	___awdiv@dividend+1,7
  4634  0D92  2D9C               	goto	l1774
  4635  0D93  09F2               	comf	___awdiv@dividend,f
  4636  0D94  09F3               	comf	___awdiv@dividend+1,f
  4637  0D95  0AF2               	incf	___awdiv@dividend,f
  4638  0D96  1903               	skipnz
  4639  0D97  0AF3               	incf	___awdiv@dividend+1,f
  4640  0D98  3001               	movlw	1
  4641  0D99  00F4               	movwf	??___awdiv
  4642  0D9A  0874               	movf	??___awdiv,w
  4643  0D9B  06F6               	xorwf	___awdiv@sign,f
  4644  0D9C                     l1774:	
  4645  0D9C  01F7               	clrf	___awdiv@quotient
  4646  0D9D  01F8               	clrf	___awdiv@quotient+1
  4647  0D9E  0870               	movf	___awdiv@divisor,w
  4648  0D9F  0471               	iorwf	___awdiv@divisor+1,w
  4649  0DA0  1903               	btfsc	3,2
  4650  0DA1  2DD3               	goto	l1796
  4651  0DA2  01F5               	clrf	___awdiv@counter
  4652  0DA3  0AF5               	incf	___awdiv@counter,f
  4653  0DA4                     l1784:	
  4654  0DA4  1BF1               	btfsc	___awdiv@divisor+1,7
  4655  0DA5  2DB2               	goto	l1786
  4656  0DA6  3001               	movlw	1
  4657  0DA7                     u1625:	
  4658  0DA7  1003               	clrc
  4659  0DA8  0DF0               	rlf	___awdiv@divisor,f
  4660  0DA9  0DF1               	rlf	___awdiv@divisor+1,f
  4661  0DAA  3EFF               	addlw	-1
  4662  0DAB  1D03               	skipz
  4663  0DAC  2DA7               	goto	u1625
  4664  0DAD  3001               	movlw	1
  4665  0DAE  00F4               	movwf	??___awdiv
  4666  0DAF  0874               	movf	??___awdiv,w
  4667  0DB0  07F5               	addwf	___awdiv@counter,f
  4668  0DB1  2DA4               	goto	l1784
  4669  0DB2                     l1786:	
  4670  0DB2  3001               	movlw	1
  4671  0DB3                     u1645:	
  4672  0DB3  1003               	clrc
  4673  0DB4  0DF7               	rlf	___awdiv@quotient,f
  4674  0DB5  0DF8               	rlf	___awdiv@quotient+1,f
  4675  0DB6  3EFF               	addlw	-1
  4676  0DB7  1D03               	skipz
  4677  0DB8  2DB3               	goto	u1645
  4678  0DB9  0871               	movf	___awdiv@divisor+1,w
  4679  0DBA  0273               	subwf	___awdiv@dividend+1,w
  4680  0DBB  1D03               	skipz
  4681  0DBC  2DBF               	goto	u1655
  4682  0DBD  0870               	movf	___awdiv@divisor,w
  4683  0DBE  0272               	subwf	___awdiv@dividend,w
  4684  0DBF                     u1655:	
  4685  0DBF  1C03               	skipc
  4686  0DC0  2DC8               	goto	l1792
  4687  0DC1  0870               	movf	___awdiv@divisor,w
  4688  0DC2  02F2               	subwf	___awdiv@dividend,f
  4689  0DC3  0871               	movf	___awdiv@divisor+1,w
  4690  0DC4  1C03               	skipc
  4691  0DC5  03F3               	decf	___awdiv@dividend+1,f
  4692  0DC6  02F3               	subwf	___awdiv@dividend+1,f
  4693  0DC7  1477               	bsf	___awdiv@quotient,0
  4694  0DC8                     l1792:	
  4695  0DC8  3001               	movlw	1
  4696  0DC9                     u1665:	
  4697  0DC9  1003               	clrc
  4698  0DCA  0CF1               	rrf	___awdiv@divisor+1,f
  4699  0DCB  0CF0               	rrf	___awdiv@divisor,f
  4700  0DCC  3EFF               	addlw	-1
  4701  0DCD  1D03               	skipz
  4702  0DCE  2DC9               	goto	u1665
  4703  0DCF  3001               	movlw	1
  4704  0DD0  02F5               	subwf	___awdiv@counter,f
  4705  0DD1  1D03               	btfss	3,2
  4706  0DD2  2DB2               	goto	l1786
  4707  0DD3                     l1796:	
  4708  0DD3  0876               	movf	___awdiv@sign,w
  4709  0DD4  1903               	btfsc	3,2
  4710  0DD5  2DDB               	goto	l1800
  4711  0DD6  09F7               	comf	___awdiv@quotient,f
  4712  0DD7  09F8               	comf	___awdiv@quotient+1,f
  4713  0DD8  0AF7               	incf	___awdiv@quotient,f
  4714  0DD9  1903               	skipnz
  4715  0DDA  0AF8               	incf	___awdiv@quotient+1,f
  4716  0DDB                     l1800:	
  4717  0DDB  0878               	movf	___awdiv@quotient+1,w
  4718  0DDC  00F1               	movwf	?___awdiv+1
  4719  0DDD  0877               	movf	___awdiv@quotient,w
  4720  0DDE  00F0               	movwf	?___awdiv
  4721  0DDF  0008               	return
  4722  0DE0                     __end_of___awdiv:	
  4723                           
  4724                           	psect	text25
  4725  09BC                     __ptext25:	
  4726 ;; *************** function ___bmul *****************
  4727 ;; Defined at:
  4728 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul8.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;  multiplier      1    wreg     unsigned char 
  4731 ;;  multiplicand    1    0[COMMON] unsigned char 
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;  multiplier      1    3[COMMON] unsigned char 
  4734 ;;  product         1    2[COMMON] unsigned char 
  4735 ;; Return value:  Size  Location     Type
  4736 ;;                  1    wreg      unsigned char 
  4737 ;; Registers used:
  4738 ;;		wreg, status,2, status,0
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4744 ;;      Params:         1       0       0       0       0
  4745 ;;      Locals:         2       0       0       0       0
  4746 ;;      Temps:          1       0       0       0       0
  4747 ;;      Totals:         4       0       0       0       0
  4748 ;;Total ram usage:        4 bytes
  4749 ;; Hardware stack levels used:    1
  4750 ;; This function calls:
  4751 ;;		Nothing
  4752 ;; This function is called by:
  4753 ;;		_number_to_string_char
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           
  4758                           ;psect for function ___bmul
  4759  09BC                     ___bmul:	
  4760                           
  4761                           ;incstack = 0
  4762                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4763                           ;___bmul@multiplier stored from wreg
  4764  09BC  00F3               	movwf	___bmul@multiplier
  4765  09BD  01F2               	clrf	___bmul@product
  4766  09BE                     l2240:	
  4767  09BE  1C73               	btfss	___bmul@multiplier,0
  4768  09BF  29C4               	goto	l2244
  4769  09C0  0870               	movf	___bmul@multiplicand,w
  4770  09C1  00F1               	movwf	??___bmul
  4771  09C2  0871               	movf	??___bmul,w
  4772  09C3  07F2               	addwf	___bmul@product,f
  4773  09C4                     l2244:	
  4774  09C4  1003               	clrc
  4775  09C5  0DF0               	rlf	___bmul@multiplicand,f
  4776  09C6  1003               	clrc
  4777  09C7  0CF3               	rrf	___bmul@multiplier,f
  4778  09C8  0873               	movf	___bmul@multiplier,w
  4779  09C9  1D03               	btfss	3,2
  4780  09CA  29BE               	goto	l2240
  4781  09CB  0872               	movf	___bmul@product,w
  4782  09CC  0008               	return
  4783  09CD                     __end_of___bmul:	
  4784                           
  4785                           	psect	text26
  4786  0F09                     __ptext26:	
  4787 ;; *************** function _get_temp *****************
  4788 ;; Defined at:
  4789 ;;		line 62 in file "plati_temp.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;		None
  4792 ;; Auto vars:     Size  Location     Type
  4793 ;;  t_average       3   69[BANK0 ] unsigned char 
  4794 ;;  i               2   67[BANK0 ] int 
  4795 ;; Return value:  Size  Location     Type
  4796 ;;                  3   61[BANK0 ] int 
  4797 ;; Registers used:
  4798 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4804 ;;      Params:         0       3       0       0       0
  4805 ;;      Locals:         0       8       0       0       0
  4806 ;;      Temps:          0       0       0       0       0
  4807 ;;      Totals:         0      11       0       0       0
  4808 ;;Total ram usage:       11 bytes
  4809 ;; Hardware stack levels used:    1
  4810 ;; Hardware stack levels required when called:    4
  4811 ;; This function calls:
  4812 ;;		___ftadd
  4813 ;;		___ftdiv
  4814 ;;		_get_pt
  4815 ;; This function is called by:
  4816 ;;		_main
  4817 ;; This function uses a non-reentrant model
  4818 ;;
  4819                           
  4820                           
  4821                           ;psect for function _get_temp
  4822  0F09                     _get_temp:	
  4823                           
  4824                           ;plati_temp.c: 64: double t_average = 0.0;
  4825                           
  4826                           ;incstack = 0
  4827                           ; Regs used in _get_temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4828  0F09  3000               	movlw	0
  4829  0F0A  1283               	bcf	3,5	;RP0=0, select bank0
  4830  0F0B  1303               	bcf	3,6	;RP1=0, select bank0
  4831  0F0C  00E5               	movwf	get_temp@t_average
  4832  0F0D  3000               	movlw	0
  4833  0F0E  00E6               	movwf	get_temp@t_average+1
  4834  0F0F  3000               	movlw	0
  4835  0F10  00E7               	movwf	get_temp@t_average+2
  4836                           
  4837                           ;plati_temp.c: 65: int i;
  4838                           ;plati_temp.c: 68: for(i = 0; i <= 300; i++){
  4839  0F11  01E3               	clrf	get_temp@i
  4840  0F12  01E4               	clrf	get_temp@i+1
  4841  0F13  0864               	movf	get_temp@i+1,w
  4842  0F14  3A80               	xorlw	128
  4843  0F15  00FF               	movwf	127
  4844  0F16  3081               	movlw	129
  4845  0F17  027F               	subwf	127,w
  4846  0F18  1D03               	skipz
  4847  0F19  2F1C               	goto	u2505
  4848  0F1A  302D               	movlw	45
  4849  0F1B  0263               	subwf	get_temp@i,w
  4850  0F1C                     u2505:	
  4851  0F1C  1803               	btfsc	3,0
  4852  0F1D  2F55               	goto	l2280
  4853  0F1E                     l2272:	
  4854                           
  4855                           ;plati_temp.c: 69: t_average += get_pt();
  4856  0F1E  120A  118A  2537  120A  158A  	fcall	_get_pt
  4857  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  4858  0F24  1303               	bcf	3,6	;RP1=0, select bank0
  4859  0F25  085A               	movf	?_get_pt,w
  4860  0F26  00E0               	movwf	_get_temp$1103
  4861  0F27  085B               	movf	?_get_pt+1,w
  4862  0F28  00E1               	movwf	_get_temp$1103+1
  4863  0F29  085C               	movf	?_get_pt+2,w
  4864  0F2A  00E2               	movwf	_get_temp$1103+2
  4865                           
  4866                           ;plati_temp.c: 69: t_average += get_pt();
  4867  0F2B  0860               	movf	_get_temp$1103,w
  4868  0F2C  00BD               	movwf	___ftadd@f1
  4869  0F2D  0861               	movf	_get_temp$1103+1,w
  4870  0F2E  00BE               	movwf	___ftadd@f1+1
  4871  0F2F  0862               	movf	_get_temp$1103+2,w
  4872  0F30  00BF               	movwf	___ftadd@f1+2
  4873  0F31  0865               	movf	get_temp@t_average,w
  4874  0F32  00C0               	movwf	___ftadd@f2
  4875  0F33  0866               	movf	get_temp@t_average+1,w
  4876  0F34  00C1               	movwf	___ftadd@f2+1
  4877  0F35  0867               	movf	get_temp@t_average+2,w
  4878  0F36  00C2               	movwf	___ftadd@f2+2
  4879  0F37  120A  118A  22F6  120A  158A  	fcall	___ftadd
  4880  0F3C  1283               	bcf	3,5	;RP0=0, select bank0
  4881  0F3D  1303               	bcf	3,6	;RP1=0, select bank0
  4882  0F3E  083D               	movf	?___ftadd,w
  4883  0F3F  00E5               	movwf	get_temp@t_average
  4884  0F40  083E               	movf	?___ftadd+1,w
  4885  0F41  00E6               	movwf	get_temp@t_average+1
  4886  0F42  083F               	movf	?___ftadd+2,w
  4887  0F43  00E7               	movwf	get_temp@t_average+2
  4888  0F44  3001               	movlw	1
  4889  0F45  07E3               	addwf	get_temp@i,f
  4890  0F46  1803               	skipnc
  4891  0F47  0AE4               	incf	get_temp@i+1,f
  4892  0F48  3000               	movlw	0
  4893  0F49  07E4               	addwf	get_temp@i+1,f
  4894  0F4A  0864               	movf	get_temp@i+1,w
  4895  0F4B  3A80               	xorlw	128
  4896  0F4C  00FF               	movwf	127
  4897  0F4D  3081               	movlw	129
  4898  0F4E  027F               	subwf	127,w
  4899  0F4F  1D03               	skipz
  4900  0F50  2F53               	goto	u2515
  4901  0F51  302D               	movlw	45
  4902  0F52  0263               	subwf	get_temp@i,w
  4903  0F53                     u2515:	
  4904  0F53  1C03               	skipc
  4905  0F54  2F1E               	goto	l2272
  4906  0F55                     l2280:	
  4907                           
  4908                           ;plati_temp.c: 70: }
  4909                           ;plati_temp.c: 71: t_average /= 300.0;
  4910  0F55  3000               	movlw	0
  4911  0F56  1283               	bcf	3,5	;RP0=0, select bank0
  4912  0F57  1303               	bcf	3,6	;RP1=0, select bank0
  4913  0F58  00CA               	movwf	___ftdiv@f2
  4914  0F59  3096               	movlw	150
  4915  0F5A  00CB               	movwf	___ftdiv@f2+1
  4916  0F5B  3043               	movlw	67
  4917  0F5C  00CC               	movwf	___ftdiv@f2+2
  4918  0F5D  0865               	movf	get_temp@t_average,w
  4919  0F5E  00CD               	movwf	___ftdiv@f1
  4920  0F5F  0866               	movf	get_temp@t_average+1,w
  4921  0F60  00CE               	movwf	___ftdiv@f1+1
  4922  0F61  0867               	movf	get_temp@t_average+2,w
  4923  0F62  00CF               	movwf	___ftdiv@f1+2
  4924  0F63  120A  118A  216B   	fcall	___ftdiv
  4925  0F66  1283               	bcf	3,5	;RP0=0, select bank0
  4926  0F67  1303               	bcf	3,6	;RP1=0, select bank0
  4927  0F68  084A               	movf	?___ftdiv,w
  4928  0F69  00E5               	movwf	get_temp@t_average
  4929  0F6A  084B               	movf	?___ftdiv+1,w
  4930  0F6B  00E6               	movwf	get_temp@t_average+1
  4931  0F6C  084C               	movf	?___ftdiv+2,w
  4932  0F6D  00E7               	movwf	get_temp@t_average+2
  4933                           
  4934                           ;plati_temp.c: 73: return t_average;
  4935  0F6E  0865               	movf	get_temp@t_average,w
  4936  0F6F  00DD               	movwf	?_get_temp
  4937  0F70  0866               	movf	get_temp@t_average+1,w
  4938  0F71  00DE               	movwf	?_get_temp+1
  4939  0F72  0867               	movf	get_temp@t_average+2,w
  4940  0F73  00DF               	movwf	?_get_temp+2
  4941  0F74  0008               	return
  4942  0F75                     __end_of_get_temp:	
  4943                           
  4944                           	psect	text27
  4945  0537                     __ptext27:	
  4946 ;; *************** function _get_pt *****************
  4947 ;; Defined at:
  4948 ;;		line 36 in file "plati_temp.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;		None
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;  a               3   27[BANK1 ] int 
  4953 ;;  t1              3   24[BANK1 ] int 
  4954 ;;  r1              3   18[BANK1 ] int 
  4955 ;;  b               3    6[BANK1 ] int 
  4956 ;;  t2              3    3[BANK1 ] int 
  4957 ;;  r2              3    0[BANK1 ] int 
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  3   58[BANK0 ] int 
  4960 ;; Registers used:
  4961 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4967 ;;      Params:         0       3       0       0       0
  4968 ;;      Locals:         0       0      30       0       0
  4969 ;;      Temps:          0       0       0       0       0
  4970 ;;      Totals:         0       3      30       0       0
  4971 ;;Total ram usage:       33 bytes
  4972 ;; Hardware stack levels used:    1
  4973 ;; Hardware stack levels required when called:    3
  4974 ;; This function calls:
  4975 ;;		___ftadd
  4976 ;;		___ftdiv
  4977 ;;		___ftmul
  4978 ;;		___ftneg
  4979 ;;		_get_adcon
  4980 ;; This function is called by:
  4981 ;;		_get_temp
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           
  4985                           
  4986                           ;psect for function _get_pt
  4987  0537                     _get_pt:	
  4988                           
  4989                           ;plati_temp.c: 38: double r1, r2, t1, t2;
  4990                           ;plati_temp.c: 39: double a = 0.0039083;
  4991                           
  4992                           ;incstack = 0
  4993                           ; Regs used in _get_pt: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4994  0537  3011               	movlw	17
  4995  0538  1683               	bsf	3,5	;RP0=1, select bank1
  4996  0539  1303               	bcf	3,6	;RP1=0, select bank1
  4997  053A  00BB               	movwf	get_pt@a^(0+128)
  4998  053B  3080               	movlw	128
  4999  053C  00BC               	movwf	(get_pt@a+1)^(0+128)
  5000  053D  303B               	movlw	59
  5001  053E  00BD               	movwf	(get_pt@a+2)^(0+128)
  5002                           
  5003                           ;plati_temp.c: 40: double b = -0.0000005775;
  5004  053F  3005               	movlw	5
  5005  0540  00A6               	movwf	get_pt@b^(0+128)
  5006  0541  301B               	movlw	27
  5007  0542  00A7               	movwf	(get_pt@b+1)^(0+128)
  5008  0543  30B5               	movlw	181
  5009  0544  00A8               	movwf	(get_pt@b+2)^(0+128)
  5010                           
  5011                           ;plati_temp.c: 43: r1 = (get_adcon() / (5.0 - get_adcon())) * 3900.0;
  5012  0545  3000               	movlw	0
  5013  0546  1283               	bcf	3,5	;RP0=0, select bank0
  5014  0547  1303               	bcf	3,6	;RP1=0, select bank0
  5015  0548  00BD               	movwf	___ftadd@f1
  5016  0549  30A0               	movlw	160
  5017  054A  00BE               	movwf	___ftadd@f1+1
  5018  054B  3040               	movlw	64
  5019  054C  00BF               	movwf	___ftadd@f1+2
  5020  054D  120A  158A  2537  120A  118A  	fcall	_get_adcon
  5021  0552  1283               	bcf	3,5	;RP0=0, select bank0
  5022  0553  1303               	bcf	3,6	;RP1=0, select bank0
  5023  0554  0830               	movf	?_get_adcon,w
  5024  0555  00BA               	movwf	___ftneg@f1
  5025  0556  0831               	movf	?_get_adcon+1,w
  5026  0557  00BB               	movwf	___ftneg@f1+1
  5027  0558  0832               	movf	?_get_adcon+2,w
  5028  0559  00BC               	movwf	___ftneg@f1+2
  5029  055A  120A  158A  218B  120A  118A  	fcall	___ftneg
  5030  055F  1283               	bcf	3,5	;RP0=0, select bank0
  5031  0560  1303               	bcf	3,6	;RP1=0, select bank0
  5032  0561  083A               	movf	?___ftneg,w
  5033  0562  00C0               	movwf	___ftadd@f2
  5034  0563  083B               	movf	?___ftneg+1,w
  5035  0564  00C1               	movwf	___ftadd@f2+1
  5036  0565  083C               	movf	?___ftneg+2,w
  5037  0566  00C2               	movwf	___ftadd@f2+2
  5038  0567  120A  118A  22F6  120A  118A  	fcall	___ftadd
  5039  056C  1283               	bcf	3,5	;RP0=0, select bank0
  5040  056D  1303               	bcf	3,6	;RP1=0, select bank0
  5041  056E  083D               	movf	?___ftadd,w
  5042  056F  00CA               	movwf	___ftdiv@f2
  5043  0570  083E               	movf	?___ftadd+1,w
  5044  0571  00CB               	movwf	___ftdiv@f2+1
  5045  0572  083F               	movf	?___ftadd+2,w
  5046  0573  00CC               	movwf	___ftdiv@f2+2
  5047  0574  120A  158A  2537  120A  118A  	fcall	_get_adcon
  5048  0579  1283               	bcf	3,5	;RP0=0, select bank0
  5049  057A  1303               	bcf	3,6	;RP1=0, select bank0
  5050  057B  0830               	movf	?_get_adcon,w
  5051  057C  00CD               	movwf	___ftdiv@f1
  5052  057D  0831               	movf	?_get_adcon+1,w
  5053  057E  00CE               	movwf	___ftdiv@f1+1
  5054  057F  0832               	movf	?_get_adcon+2,w
  5055  0580  00CF               	movwf	___ftdiv@f1+2
  5056  0581  120A  118A  216B  120A  118A  	fcall	___ftdiv
  5057  0586  1283               	bcf	3,5	;RP0=0, select bank0
  5058  0587  1303               	bcf	3,6	;RP1=0, select bank0
  5059  0588  084A               	movf	?___ftdiv,w
  5060  0589  1683               	bsf	3,5	;RP0=1, select bank1
  5061  058A  1303               	bcf	3,6	;RP1=0, select bank1
  5062  058B  00A9               	movwf	_get_pt$1099^(0+128)
  5063  058C  1283               	bcf	3,5	;RP0=0, select bank0
  5064  058D  1303               	bcf	3,6	;RP1=0, select bank0
  5065  058E  084B               	movf	?___ftdiv+1,w
  5066  058F  1683               	bsf	3,5	;RP0=1, select bank1
  5067  0590  1303               	bcf	3,6	;RP1=0, select bank1
  5068  0591  00AA               	movwf	(_get_pt$1099+1)^(0+128)
  5069  0592  1283               	bcf	3,5	;RP0=0, select bank0
  5070  0593  1303               	bcf	3,6	;RP1=0, select bank0
  5071  0594  084C               	movf	?___ftdiv+2,w
  5072  0595  1683               	bsf	3,5	;RP0=1, select bank1
  5073  0596  1303               	bcf	3,6	;RP1=0, select bank1
  5074  0597  00AB               	movwf	(_get_pt$1099+2)^(0+128)
  5075                           
  5076                           ;plati_temp.c: 43: r1 = (get_adcon() / (5.0 - get_adcon())) * 3900.0;
  5077  0598  30C0               	movlw	192
  5078  0599  1283               	bcf	3,5	;RP0=0, select bank0
  5079  059A  1303               	bcf	3,6	;RP1=0, select bank0
  5080  059B  00A0               	movwf	___ftmul@f1
  5081  059C  3073               	movlw	115
  5082  059D  00A1               	movwf	___ftmul@f1+1
  5083  059E  3045               	movlw	69
  5084  059F  00A2               	movwf	___ftmul@f1+2
  5085  05A0  1683               	bsf	3,5	;RP0=1, select bank1
  5086  05A1  1303               	bcf	3,6	;RP1=0, select bank1
  5087  05A2  0829               	movf	_get_pt$1099^(0+128),w
  5088  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  5089  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  5090  05A5  00A3               	movwf	___ftmul@f2
  5091  05A6  1683               	bsf	3,5	;RP0=1, select bank1
  5092  05A7  1303               	bcf	3,6	;RP1=0, select bank1
  5093  05A8  082A               	movf	(_get_pt$1099+1)^(0+128),w
  5094  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  5095  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  5096  05AB  00A4               	movwf	___ftmul@f2+1
  5097  05AC  1683               	bsf	3,5	;RP0=1, select bank1
  5098  05AD  1303               	bcf	3,6	;RP1=0, select bank1
  5099  05AE  082B               	movf	(_get_pt$1099+2)^(0+128),w
  5100  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  5101  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  5102  05B1  00A5               	movwf	___ftmul@f2+2
  5103  05B2  120A  118A  2223  120A  118A  	fcall	___ftmul
  5104  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  5105  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  5106  05B9  0820               	movf	?___ftmul,w
  5107  05BA  1683               	bsf	3,5	;RP0=1, select bank1
  5108  05BB  1303               	bcf	3,6	;RP1=0, select bank1
  5109  05BC  00B2               	movwf	get_pt@r1^(0+128)
  5110  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  5111  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  5112  05BF  0821               	movf	?___ftmul+1,w
  5113  05C0  1683               	bsf	3,5	;RP0=1, select bank1
  5114  05C1  1303               	bcf	3,6	;RP1=0, select bank1
  5115  05C2  00B3               	movwf	(get_pt@r1+1)^(0+128)
  5116  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  5117  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  5118  05C5  0822               	movf	?___ftmul+2,w
  5119  05C6  1683               	bsf	3,5	;RP0=1, select bank1
  5120  05C7  1303               	bcf	3,6	;RP1=0, select bank1
  5121  05C8  00B4               	movwf	(get_pt@r1+2)^(0+128)
  5122                           
  5123                           ;plati_temp.c: 44: t1 = (r1 / 100.0 - 1.0) / a;
  5124  05C9  3000               	movlw	0
  5125  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  5126  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  5127  05CC  00BD               	movwf	___ftadd@f1
  5128  05CD  3080               	movlw	128
  5129  05CE  00BE               	movwf	___ftadd@f1+1
  5130  05CF  30BF               	movlw	191
  5131  05D0  00BF               	movwf	___ftadd@f1+2
  5132  05D1  3000               	movlw	0
  5133  05D2  00CA               	movwf	___ftdiv@f2
  5134  05D3  30C8               	movlw	200
  5135  05D4  00CB               	movwf	___ftdiv@f2+1
  5136  05D5  3042               	movlw	66
  5137  05D6  00CC               	movwf	___ftdiv@f2+2
  5138  05D7  1683               	bsf	3,5	;RP0=1, select bank1
  5139  05D8  1303               	bcf	3,6	;RP1=0, select bank1
  5140  05D9  0832               	movf	get_pt@r1^(0+128),w
  5141  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  5142  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  5143  05DC  00CD               	movwf	___ftdiv@f1
  5144  05DD  1683               	bsf	3,5	;RP0=1, select bank1
  5145  05DE  1303               	bcf	3,6	;RP1=0, select bank1
  5146  05DF  0833               	movf	(get_pt@r1+1)^(0+128),w
  5147  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  5148  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  5149  05E2  00CE               	movwf	___ftdiv@f1+1
  5150  05E3  1683               	bsf	3,5	;RP0=1, select bank1
  5151  05E4  1303               	bcf	3,6	;RP1=0, select bank1
  5152  05E5  0834               	movf	(get_pt@r1+2)^(0+128),w
  5153  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  5154  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  5155  05E8  00CF               	movwf	___ftdiv@f1+2
  5156  05E9  120A  118A  216B  120A  118A  	fcall	___ftdiv
  5157  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  5158  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  5159  05F0  084A               	movf	?___ftdiv,w
  5160  05F1  00C0               	movwf	___ftadd@f2
  5161  05F2  084B               	movf	?___ftdiv+1,w
  5162  05F3  00C1               	movwf	___ftadd@f2+1
  5163  05F4  084C               	movf	?___ftdiv+2,w
  5164  05F5  00C2               	movwf	___ftadd@f2+2
  5165  05F6  120A  118A  22F6  120A  118A  	fcall	___ftadd
  5166  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  5167  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  5168  05FD  083D               	movf	?___ftadd,w
  5169  05FE  1683               	bsf	3,5	;RP0=1, select bank1
  5170  05FF  1303               	bcf	3,6	;RP1=0, select bank1
  5171  0600  00B5               	movwf	_get_pt$1100^(0+128)
  5172  0601  1283               	bcf	3,5	;RP0=0, select bank0
  5173  0602  1303               	bcf	3,6	;RP1=0, select bank0
  5174  0603  083E               	movf	?___ftadd+1,w
  5175  0604  1683               	bsf	3,5	;RP0=1, select bank1
  5176  0605  1303               	bcf	3,6	;RP1=0, select bank1
  5177  0606  00B6               	movwf	(_get_pt$1100+1)^(0+128)
  5178  0607  1283               	bcf	3,5	;RP0=0, select bank0
  5179  0608  1303               	bcf	3,6	;RP1=0, select bank0
  5180  0609  083F               	movf	?___ftadd+2,w
  5181  060A  1683               	bsf	3,5	;RP0=1, select bank1
  5182  060B  1303               	bcf	3,6	;RP1=0, select bank1
  5183  060C  00B7               	movwf	(_get_pt$1100+2)^(0+128)
  5184                           
  5185                           ;plati_temp.c: 44: t1 = (r1 / 100.0 - 1.0) / a;
  5186  060D  083B               	movf	get_pt@a^(0+128),w
  5187  060E  1283               	bcf	3,5	;RP0=0, select bank0
  5188  060F  1303               	bcf	3,6	;RP1=0, select bank0
  5189  0610  00CA               	movwf	___ftdiv@f2
  5190  0611  1683               	bsf	3,5	;RP0=1, select bank1
  5191  0612  1303               	bcf	3,6	;RP1=0, select bank1
  5192  0613  083C               	movf	(get_pt@a+1)^(0+128),w
  5193  0614  1283               	bcf	3,5	;RP0=0, select bank0
  5194  0615  1303               	bcf	3,6	;RP1=0, select bank0
  5195  0616  00CB               	movwf	___ftdiv@f2+1
  5196  0617  1683               	bsf	3,5	;RP0=1, select bank1
  5197  0618  1303               	bcf	3,6	;RP1=0, select bank1
  5198  0619  083D               	movf	(get_pt@a+2)^(0+128),w
  5199  061A  1283               	bcf	3,5	;RP0=0, select bank0
  5200  061B  1303               	bcf	3,6	;RP1=0, select bank0
  5201  061C  00CC               	movwf	___ftdiv@f2+2
  5202  061D  1683               	bsf	3,5	;RP0=1, select bank1
  5203  061E  1303               	bcf	3,6	;RP1=0, select bank1
  5204  061F  0835               	movf	_get_pt$1100^(0+128),w
  5205  0620  1283               	bcf	3,5	;RP0=0, select bank0
  5206  0621  1303               	bcf	3,6	;RP1=0, select bank0
  5207  0622  00CD               	movwf	___ftdiv@f1
  5208  0623  1683               	bsf	3,5	;RP0=1, select bank1
  5209  0624  1303               	bcf	3,6	;RP1=0, select bank1
  5210  0625  0836               	movf	(_get_pt$1100+1)^(0+128),w
  5211  0626  1283               	bcf	3,5	;RP0=0, select bank0
  5212  0627  1303               	bcf	3,6	;RP1=0, select bank0
  5213  0628  00CE               	movwf	___ftdiv@f1+1
  5214  0629  1683               	bsf	3,5	;RP0=1, select bank1
  5215  062A  1303               	bcf	3,6	;RP1=0, select bank1
  5216  062B  0837               	movf	(_get_pt$1100+2)^(0+128),w
  5217  062C  1283               	bcf	3,5	;RP0=0, select bank0
  5218  062D  1303               	bcf	3,6	;RP1=0, select bank0
  5219  062E  00CF               	movwf	___ftdiv@f1+2
  5220  062F  120A  118A  216B  120A  118A  	fcall	___ftdiv
  5221  0634  1283               	bcf	3,5	;RP0=0, select bank0
  5222  0635  1303               	bcf	3,6	;RP1=0, select bank0
  5223  0636  084A               	movf	?___ftdiv,w
  5224  0637  1683               	bsf	3,5	;RP0=1, select bank1
  5225  0638  1303               	bcf	3,6	;RP1=0, select bank1
  5226  0639  00B8               	movwf	get_pt@t1^(0+128)
  5227  063A  1283               	bcf	3,5	;RP0=0, select bank0
  5228  063B  1303               	bcf	3,6	;RP1=0, select bank0
  5229  063C  084B               	movf	?___ftdiv+1,w
  5230  063D  1683               	bsf	3,5	;RP0=1, select bank1
  5231  063E  1303               	bcf	3,6	;RP1=0, select bank1
  5232  063F  00B9               	movwf	(get_pt@t1+1)^(0+128)
  5233  0640  1283               	bcf	3,5	;RP0=0, select bank0
  5234  0641  1303               	bcf	3,6	;RP1=0, select bank0
  5235  0642  084C               	movf	?___ftdiv+2,w
  5236  0643  1683               	bsf	3,5	;RP0=1, select bank1
  5237  0644  1303               	bcf	3,6	;RP1=0, select bank1
  5238  0645  00BA               	movwf	(get_pt@t1+2)^(0+128)
  5239                           
  5240                           ;plati_temp.c: 45: r2 = ((t1 * b + a) * t1 +1.0) * 100.0;
  5241  0646  083B               	movf	get_pt@a^(0+128),w
  5242  0647  1283               	bcf	3,5	;RP0=0, select bank0
  5243  0648  1303               	bcf	3,6	;RP1=0, select bank0
  5244  0649  00BD               	movwf	___ftadd@f1
  5245  064A  1683               	bsf	3,5	;RP0=1, select bank1
  5246  064B  1303               	bcf	3,6	;RP1=0, select bank1
  5247  064C  083C               	movf	(get_pt@a+1)^(0+128),w
  5248  064D  1283               	bcf	3,5	;RP0=0, select bank0
  5249  064E  1303               	bcf	3,6	;RP1=0, select bank0
  5250  064F  00BE               	movwf	___ftadd@f1+1
  5251  0650  1683               	bsf	3,5	;RP0=1, select bank1
  5252  0651  1303               	bcf	3,6	;RP1=0, select bank1
  5253  0652  083D               	movf	(get_pt@a+2)^(0+128),w
  5254  0653  1283               	bcf	3,5	;RP0=0, select bank0
  5255  0654  1303               	bcf	3,6	;RP1=0, select bank0
  5256  0655  00BF               	movwf	___ftadd@f1+2
  5257  0656  1683               	bsf	3,5	;RP0=1, select bank1
  5258  0657  1303               	bcf	3,6	;RP1=0, select bank1
  5259  0658  0826               	movf	get_pt@b^(0+128),w
  5260  0659  1283               	bcf	3,5	;RP0=0, select bank0
  5261  065A  1303               	bcf	3,6	;RP1=0, select bank0
  5262  065B  00A0               	movwf	___ftmul@f1
  5263  065C  1683               	bsf	3,5	;RP0=1, select bank1
  5264  065D  1303               	bcf	3,6	;RP1=0, select bank1
  5265  065E  0827               	movf	(get_pt@b+1)^(0+128),w
  5266  065F  1283               	bcf	3,5	;RP0=0, select bank0
  5267  0660  1303               	bcf	3,6	;RP1=0, select bank0
  5268  0661  00A1               	movwf	___ftmul@f1+1
  5269  0662  1683               	bsf	3,5	;RP0=1, select bank1
  5270  0663  1303               	bcf	3,6	;RP1=0, select bank1
  5271  0664  0828               	movf	(get_pt@b+2)^(0+128),w
  5272  0665  1283               	bcf	3,5	;RP0=0, select bank0
  5273  0666  1303               	bcf	3,6	;RP1=0, select bank0
  5274  0667  00A2               	movwf	___ftmul@f1+2
  5275  0668  1683               	bsf	3,5	;RP0=1, select bank1
  5276  0669  1303               	bcf	3,6	;RP1=0, select bank1
  5277  066A  0838               	movf	get_pt@t1^(0+128),w
  5278  066B  1283               	bcf	3,5	;RP0=0, select bank0
  5279  066C  1303               	bcf	3,6	;RP1=0, select bank0
  5280  066D  00A3               	movwf	___ftmul@f2
  5281  066E  1683               	bsf	3,5	;RP0=1, select bank1
  5282  066F  1303               	bcf	3,6	;RP1=0, select bank1
  5283  0670  0839               	movf	(get_pt@t1+1)^(0+128),w
  5284  0671  1283               	bcf	3,5	;RP0=0, select bank0
  5285  0672  1303               	bcf	3,6	;RP1=0, select bank0
  5286  0673  00A4               	movwf	___ftmul@f2+1
  5287  0674  1683               	bsf	3,5	;RP0=1, select bank1
  5288  0675  1303               	bcf	3,6	;RP1=0, select bank1
  5289  0676  083A               	movf	(get_pt@t1+2)^(0+128),w
  5290  0677  1283               	bcf	3,5	;RP0=0, select bank0
  5291  0678  1303               	bcf	3,6	;RP1=0, select bank0
  5292  0679  00A5               	movwf	___ftmul@f2+2
  5293  067A  120A  118A  2223  120A  118A  	fcall	___ftmul
  5294  067F  1283               	bcf	3,5	;RP0=0, select bank0
  5295  0680  1303               	bcf	3,6	;RP1=0, select bank0
  5296  0681  0820               	movf	?___ftmul,w
  5297  0682  00C0               	movwf	___ftadd@f2
  5298  0683  0821               	movf	?___ftmul+1,w
  5299  0684  00C1               	movwf	___ftadd@f2+1
  5300  0685  0822               	movf	?___ftmul+2,w
  5301  0686  00C2               	movwf	___ftadd@f2+2
  5302  0687  120A  118A  22F6  120A  118A  	fcall	___ftadd
  5303  068C  1283               	bcf	3,5	;RP0=0, select bank0
  5304  068D  1303               	bcf	3,6	;RP1=0, select bank0
  5305  068E  083D               	movf	?___ftadd,w
  5306  068F  1683               	bsf	3,5	;RP0=1, select bank1
  5307  0690  1303               	bcf	3,6	;RP1=0, select bank1
  5308  0691  00AC               	movwf	_get_pt$1101^(0+128)
  5309  0692  1283               	bcf	3,5	;RP0=0, select bank0
  5310  0693  1303               	bcf	3,6	;RP1=0, select bank0
  5311  0694  083E               	movf	?___ftadd+1,w
  5312  0695  1683               	bsf	3,5	;RP0=1, select bank1
  5313  0696  1303               	bcf	3,6	;RP1=0, select bank1
  5314  0697  00AD               	movwf	(_get_pt$1101+1)^(0+128)
  5315  0698  1283               	bcf	3,5	;RP0=0, select bank0
  5316  0699  1303               	bcf	3,6	;RP1=0, select bank0
  5317  069A  083F               	movf	?___ftadd+2,w
  5318  069B  1683               	bsf	3,5	;RP0=1, select bank1
  5319  069C  1303               	bcf	3,6	;RP1=0, select bank1
  5320  069D  00AE               	movwf	(_get_pt$1101+2)^(0+128)
  5321                           
  5322                           ;plati_temp.c: 45: r2 = ((t1 * b + a) * t1 +1.0) * 100.0;
  5323  069E  3000               	movlw	0
  5324  069F  1283               	bcf	3,5	;RP0=0, select bank0
  5325  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  5326  06A1  00BD               	movwf	___ftadd@f1
  5327  06A2  3080               	movlw	128
  5328  06A3  00BE               	movwf	___ftadd@f1+1
  5329  06A4  303F               	movlw	63
  5330  06A5  00BF               	movwf	___ftadd@f1+2
  5331  06A6  1683               	bsf	3,5	;RP0=1, select bank1
  5332  06A7  1303               	bcf	3,6	;RP1=0, select bank1
  5333  06A8  0838               	movf	get_pt@t1^(0+128),w
  5334  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  5335  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  5336  06AB  00A0               	movwf	___ftmul@f1
  5337  06AC  1683               	bsf	3,5	;RP0=1, select bank1
  5338  06AD  1303               	bcf	3,6	;RP1=0, select bank1
  5339  06AE  0839               	movf	(get_pt@t1+1)^(0+128),w
  5340  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  5341  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  5342  06B1  00A1               	movwf	___ftmul@f1+1
  5343  06B2  1683               	bsf	3,5	;RP0=1, select bank1
  5344  06B3  1303               	bcf	3,6	;RP1=0, select bank1
  5345  06B4  083A               	movf	(get_pt@t1+2)^(0+128),w
  5346  06B5  1283               	bcf	3,5	;RP0=0, select bank0
  5347  06B6  1303               	bcf	3,6	;RP1=0, select bank0
  5348  06B7  00A2               	movwf	___ftmul@f1+2
  5349  06B8  1683               	bsf	3,5	;RP0=1, select bank1
  5350  06B9  1303               	bcf	3,6	;RP1=0, select bank1
  5351  06BA  082C               	movf	_get_pt$1101^(0+128),w
  5352  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  5353  06BC  1303               	bcf	3,6	;RP1=0, select bank0
  5354  06BD  00A3               	movwf	___ftmul@f2
  5355  06BE  1683               	bsf	3,5	;RP0=1, select bank1
  5356  06BF  1303               	bcf	3,6	;RP1=0, select bank1
  5357  06C0  082D               	movf	(_get_pt$1101+1)^(0+128),w
  5358  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  5359  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  5360  06C3  00A4               	movwf	___ftmul@f2+1
  5361  06C4  1683               	bsf	3,5	;RP0=1, select bank1
  5362  06C5  1303               	bcf	3,6	;RP1=0, select bank1
  5363  06C6  082E               	movf	(_get_pt$1101+2)^(0+128),w
  5364  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  5365  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  5366  06C9  00A5               	movwf	___ftmul@f2+2
  5367  06CA  120A  118A  2223  120A  118A  	fcall	___ftmul
  5368  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  5369  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  5370  06D1  0820               	movf	?___ftmul,w
  5371  06D2  00C0               	movwf	___ftadd@f2
  5372  06D3  0821               	movf	?___ftmul+1,w
  5373  06D4  00C1               	movwf	___ftadd@f2+1
  5374  06D5  0822               	movf	?___ftmul+2,w
  5375  06D6  00C2               	movwf	___ftadd@f2+2
  5376  06D7  120A  118A  22F6  120A  118A  	fcall	___ftadd
  5377  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  5378  06DD  1303               	bcf	3,6	;RP1=0, select bank0
  5379  06DE  083D               	movf	?___ftadd,w
  5380  06DF  1683               	bsf	3,5	;RP0=1, select bank1
  5381  06E0  1303               	bcf	3,6	;RP1=0, select bank1
  5382  06E1  00AF               	movwf	_get_pt$1102^(0+128)
  5383  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  5384  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  5385  06E4  083E               	movf	?___ftadd+1,w
  5386  06E5  1683               	bsf	3,5	;RP0=1, select bank1
  5387  06E6  1303               	bcf	3,6	;RP1=0, select bank1
  5388  06E7  00B0               	movwf	(_get_pt$1102+1)^(0+128)
  5389  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  5390  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  5391  06EA  083F               	movf	?___ftadd+2,w
  5392  06EB  1683               	bsf	3,5	;RP0=1, select bank1
  5393  06EC  1303               	bcf	3,6	;RP1=0, select bank1
  5394  06ED  00B1               	movwf	(_get_pt$1102+2)^(0+128)
  5395                           
  5396                           ;plati_temp.c: 45: r2 = ((t1 * b + a) * t1 +1.0) * 100.0;
  5397  06EE  3000               	movlw	0
  5398  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  5399  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  5400  06F1  00A0               	movwf	___ftmul@f1
  5401  06F2  30C8               	movlw	200
  5402  06F3  00A1               	movwf	___ftmul@f1+1
  5403  06F4  3042               	movlw	66
  5404  06F5  00A2               	movwf	___ftmul@f1+2
  5405  06F6  1683               	bsf	3,5	;RP0=1, select bank1
  5406  06F7  1303               	bcf	3,6	;RP1=0, select bank1
  5407  06F8  082F               	movf	_get_pt$1102^(0+128),w
  5408  06F9  1283               	bcf	3,5	;RP0=0, select bank0
  5409  06FA  1303               	bcf	3,6	;RP1=0, select bank0
  5410  06FB  00A3               	movwf	___ftmul@f2
  5411  06FC  1683               	bsf	3,5	;RP0=1, select bank1
  5412  06FD  1303               	bcf	3,6	;RP1=0, select bank1
  5413  06FE  0830               	movf	(_get_pt$1102+1)^(0+128),w
  5414  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  5415  0700  1303               	bcf	3,6	;RP1=0, select bank0
  5416  0701  00A4               	movwf	___ftmul@f2+1
  5417  0702  1683               	bsf	3,5	;RP0=1, select bank1
  5418  0703  1303               	bcf	3,6	;RP1=0, select bank1
  5419  0704  0831               	movf	(_get_pt$1102+2)^(0+128),w
  5420  0705  1283               	bcf	3,5	;RP0=0, select bank0
  5421  0706  1303               	bcf	3,6	;RP1=0, select bank0
  5422  0707  00A5               	movwf	___ftmul@f2+2
  5423  0708  120A  118A  2223  120A  118A  	fcall	___ftmul
  5424  070D  1283               	bcf	3,5	;RP0=0, select bank0
  5425  070E  1303               	bcf	3,6	;RP1=0, select bank0
  5426  070F  0820               	movf	?___ftmul,w
  5427  0710  1683               	bsf	3,5	;RP0=1, select bank1
  5428  0711  1303               	bcf	3,6	;RP1=0, select bank1
  5429  0712  00A0               	movwf	get_pt@r2^(0+128)
  5430  0713  1283               	bcf	3,5	;RP0=0, select bank0
  5431  0714  1303               	bcf	3,6	;RP1=0, select bank0
  5432  0715  0821               	movf	?___ftmul+1,w
  5433  0716  1683               	bsf	3,5	;RP0=1, select bank1
  5434  0717  1303               	bcf	3,6	;RP1=0, select bank1
  5435  0718  00A1               	movwf	(get_pt@r2+1)^(0+128)
  5436  0719  1283               	bcf	3,5	;RP0=0, select bank0
  5437  071A  1303               	bcf	3,6	;RP1=0, select bank0
  5438  071B  0822               	movf	?___ftmul+2,w
  5439  071C  1683               	bsf	3,5	;RP0=1, select bank1
  5440  071D  1303               	bcf	3,6	;RP1=0, select bank1
  5441  071E  00A2               	movwf	(get_pt@r2+2)^(0+128)
  5442                           
  5443                           ;plati_temp.c: 46: t2 = (r1 / 100.0 - r2 / 100.0) / a + t1;
  5444  071F  0820               	movf	get_pt@r2^(0+128),w
  5445  0720  1283               	bcf	3,5	;RP0=0, select bank0
  5446  0721  1303               	bcf	3,6	;RP1=0, select bank0
  5447  0722  00CD               	movwf	___ftdiv@f1
  5448  0723  1683               	bsf	3,5	;RP0=1, select bank1
  5449  0724  1303               	bcf	3,6	;RP1=0, select bank1
  5450  0725  0821               	movf	(get_pt@r2+1)^(0+128),w
  5451  0726  1283               	bcf	3,5	;RP0=0, select bank0
  5452  0727  1303               	bcf	3,6	;RP1=0, select bank0
  5453  0728  00CE               	movwf	___ftdiv@f1+1
  5454  0729  1683               	bsf	3,5	;RP0=1, select bank1
  5455  072A  1303               	bcf	3,6	;RP1=0, select bank1
  5456  072B  0822               	movf	(get_pt@r2+2)^(0+128),w
  5457  072C  1283               	bcf	3,5	;RP0=0, select bank0
  5458  072D  1303               	bcf	3,6	;RP1=0, select bank0
  5459  072E  00CF               	movwf	___ftdiv@f1+2
  5460  072F  3000               	movlw	0
  5461  0730  00CA               	movwf	___ftdiv@f2
  5462  0731  30C8               	movlw	200
  5463  0732  00CB               	movwf	___ftdiv@f2+1
  5464  0733  3042               	movlw	66
  5465  0734  00CC               	movwf	___ftdiv@f2+2
  5466  0735  120A  118A  216B  120A  118A  	fcall	___ftdiv
  5467  073A  1283               	bcf	3,5	;RP0=0, select bank0
  5468  073B  1303               	bcf	3,6	;RP1=0, select bank0
  5469  073C  084A               	movf	?___ftdiv,w
  5470  073D  00BA               	movwf	___ftneg@f1
  5471  073E  084B               	movf	?___ftdiv+1,w
  5472  073F  00BB               	movwf	___ftneg@f1+1
  5473  0740  084C               	movf	?___ftdiv+2,w
  5474  0741  00BC               	movwf	___ftneg@f1+2
  5475  0742  120A  158A  218B  120A  118A  	fcall	___ftneg
  5476  0747  1283               	bcf	3,5	;RP0=0, select bank0
  5477  0748  1303               	bcf	3,6	;RP1=0, select bank0
  5478  0749  083A               	movf	?___ftneg,w
  5479  074A  00BD               	movwf	___ftadd@f1
  5480  074B  083B               	movf	?___ftneg+1,w
  5481  074C  00BE               	movwf	___ftadd@f1+1
  5482  074D  083C               	movf	?___ftneg+2,w
  5483  074E  00BF               	movwf	___ftadd@f1+2
  5484  074F  3000               	movlw	0
  5485  0750  00CA               	movwf	___ftdiv@f2
  5486  0751  30C8               	movlw	200
  5487  0752  00CB               	movwf	___ftdiv@f2+1
  5488  0753  3042               	movlw	66
  5489  0754  00CC               	movwf	___ftdiv@f2+2
  5490  0755  1683               	bsf	3,5	;RP0=1, select bank1
  5491  0756  1303               	bcf	3,6	;RP1=0, select bank1
  5492  0757  0832               	movf	get_pt@r1^(0+128),w
  5493  0758  1283               	bcf	3,5	;RP0=0, select bank0
  5494  0759  1303               	bcf	3,6	;RP1=0, select bank0
  5495  075A  00CD               	movwf	___ftdiv@f1
  5496  075B  1683               	bsf	3,5	;RP0=1, select bank1
  5497  075C  1303               	bcf	3,6	;RP1=0, select bank1
  5498  075D  0833               	movf	(get_pt@r1+1)^(0+128),w
  5499  075E  1283               	bcf	3,5	;RP0=0, select bank0
  5500  075F  1303               	bcf	3,6	;RP1=0, select bank0
  5501  0760  00CE               	movwf	___ftdiv@f1+1
  5502  0761  1683               	bsf	3,5	;RP0=1, select bank1
  5503  0762  1303               	bcf	3,6	;RP1=0, select bank1
  5504  0763  0834               	movf	(get_pt@r1+2)^(0+128),w
  5505  0764  1283               	bcf	3,5	;RP0=0, select bank0
  5506  0765  1303               	bcf	3,6	;RP1=0, select bank0
  5507  0766  00CF               	movwf	___ftdiv@f1+2
  5508  0767  120A  118A  216B  120A  118A  	fcall	___ftdiv
  5509  076C  1283               	bcf	3,5	;RP0=0, select bank0
  5510  076D  1303               	bcf	3,6	;RP1=0, select bank0
  5511  076E  084A               	movf	?___ftdiv,w
  5512  076F  00C0               	movwf	___ftadd@f2
  5513  0770  084B               	movf	?___ftdiv+1,w
  5514  0771  00C1               	movwf	___ftadd@f2+1
  5515  0772  084C               	movf	?___ftdiv+2,w
  5516  0773  00C2               	movwf	___ftadd@f2+2
  5517  0774  120A  118A  22F6  120A  118A  	fcall	___ftadd
  5518  0779  1283               	bcf	3,5	;RP0=0, select bank0
  5519  077A  1303               	bcf	3,6	;RP1=0, select bank0
  5520  077B  083D               	movf	?___ftadd,w
  5521  077C  1683               	bsf	3,5	;RP0=1, select bank1
  5522  077D  1303               	bcf	3,6	;RP1=0, select bank1
  5523  077E  00B5               	movwf	_get_pt$1100^(0+128)
  5524  077F  1283               	bcf	3,5	;RP0=0, select bank0
  5525  0780  1303               	bcf	3,6	;RP1=0, select bank0
  5526  0781  083E               	movf	?___ftadd+1,w
  5527  0782  1683               	bsf	3,5	;RP0=1, select bank1
  5528  0783  1303               	bcf	3,6	;RP1=0, select bank1
  5529  0784  00B6               	movwf	(_get_pt$1100+1)^(0+128)
  5530  0785  1283               	bcf	3,5	;RP0=0, select bank0
  5531  0786  1303               	bcf	3,6	;RP1=0, select bank0
  5532  0787  083F               	movf	?___ftadd+2,w
  5533  0788  1683               	bsf	3,5	;RP0=1, select bank1
  5534  0789  1303               	bcf	3,6	;RP1=0, select bank1
  5535  078A  00B7               	movwf	(_get_pt$1100+2)^(0+128)
  5536                           
  5537                           ;plati_temp.c: 46: t2 = (r1 / 100.0 - r2 / 100.0) / a + t1;
  5538  078B  0838               	movf	get_pt@t1^(0+128),w
  5539  078C  1283               	bcf	3,5	;RP0=0, select bank0
  5540  078D  1303               	bcf	3,6	;RP1=0, select bank0
  5541  078E  00BD               	movwf	___ftadd@f1
  5542  078F  1683               	bsf	3,5	;RP0=1, select bank1
  5543  0790  1303               	bcf	3,6	;RP1=0, select bank1
  5544  0791  0839               	movf	(get_pt@t1+1)^(0+128),w
  5545  0792  1283               	bcf	3,5	;RP0=0, select bank0
  5546  0793  1303               	bcf	3,6	;RP1=0, select bank0
  5547  0794  00BE               	movwf	___ftadd@f1+1
  5548  0795  1683               	bsf	3,5	;RP0=1, select bank1
  5549  0796  1303               	bcf	3,6	;RP1=0, select bank1
  5550  0797  083A               	movf	(get_pt@t1+2)^(0+128),w
  5551  0798  1283               	bcf	3,5	;RP0=0, select bank0
  5552  0799  1303               	bcf	3,6	;RP1=0, select bank0
  5553  079A  00BF               	movwf	___ftadd@f1+2
  5554  079B  1683               	bsf	3,5	;RP0=1, select bank1
  5555  079C  1303               	bcf	3,6	;RP1=0, select bank1
  5556  079D  083B               	movf	get_pt@a^(0+128),w
  5557  079E  1283               	bcf	3,5	;RP0=0, select bank0
  5558  079F  1303               	bcf	3,6	;RP1=0, select bank0
  5559  07A0  00CA               	movwf	___ftdiv@f2
  5560  07A1  1683               	bsf	3,5	;RP0=1, select bank1
  5561  07A2  1303               	bcf	3,6	;RP1=0, select bank1
  5562  07A3  083C               	movf	(get_pt@a+1)^(0+128),w
  5563  07A4  1283               	bcf	3,5	;RP0=0, select bank0
  5564  07A5  1303               	bcf	3,6	;RP1=0, select bank0
  5565  07A6  00CB               	movwf	___ftdiv@f2+1
  5566  07A7  1683               	bsf	3,5	;RP0=1, select bank1
  5567  07A8  1303               	bcf	3,6	;RP1=0, select bank1
  5568  07A9  083D               	movf	(get_pt@a+2)^(0+128),w
  5569  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  5570  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  5571  07AC  00CC               	movwf	___ftdiv@f2+2
  5572  07AD  1683               	bsf	3,5	;RP0=1, select bank1
  5573  07AE  1303               	bcf	3,6	;RP1=0, select bank1
  5574  07AF  0835               	movf	_get_pt$1100^(0+128),w
  5575  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  5576  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  5577  07B2  00CD               	movwf	___ftdiv@f1
  5578  07B3  1683               	bsf	3,5	;RP0=1, select bank1
  5579  07B4  1303               	bcf	3,6	;RP1=0, select bank1
  5580  07B5  0836               	movf	(_get_pt$1100+1)^(0+128),w
  5581  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  5582  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  5583  07B8  00CE               	movwf	___ftdiv@f1+1
  5584  07B9  1683               	bsf	3,5	;RP0=1, select bank1
  5585  07BA  1303               	bcf	3,6	;RP1=0, select bank1
  5586  07BB  0837               	movf	(_get_pt$1100+2)^(0+128),w
  5587  07BC  1283               	bcf	3,5	;RP0=0, select bank0
  5588  07BD  1303               	bcf	3,6	;RP1=0, select bank0
  5589  07BE  00CF               	movwf	___ftdiv@f1+2
  5590  07BF  120A  118A  216B  120A  118A  	fcall	___ftdiv
  5591  07C4  1283               	bcf	3,5	;RP0=0, select bank0
  5592  07C5  1303               	bcf	3,6	;RP1=0, select bank0
  5593  07C6  084A               	movf	?___ftdiv,w
  5594  07C7  00C0               	movwf	___ftadd@f2
  5595  07C8  084B               	movf	?___ftdiv+1,w
  5596  07C9  00C1               	movwf	___ftadd@f2+1
  5597  07CA  084C               	movf	?___ftdiv+2,w
  5598  07CB  00C2               	movwf	___ftadd@f2+2
  5599  07CC  120A  118A  22F6   	fcall	___ftadd
  5600  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  5601  07D0  1303               	bcf	3,6	;RP1=0, select bank0
  5602  07D1  083D               	movf	?___ftadd,w
  5603  07D2  1683               	bsf	3,5	;RP0=1, select bank1
  5604  07D3  1303               	bcf	3,6	;RP1=0, select bank1
  5605  07D4  00A3               	movwf	get_pt@t2^(0+128)
  5606  07D5  1283               	bcf	3,5	;RP0=0, select bank0
  5607  07D6  1303               	bcf	3,6	;RP1=0, select bank0
  5608  07D7  083E               	movf	?___ftadd+1,w
  5609  07D8  1683               	bsf	3,5	;RP0=1, select bank1
  5610  07D9  1303               	bcf	3,6	;RP1=0, select bank1
  5611  07DA  00A4               	movwf	(get_pt@t2+1)^(0+128)
  5612  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  5613  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  5614  07DD  083F               	movf	?___ftadd+2,w
  5615  07DE  1683               	bsf	3,5	;RP0=1, select bank1
  5616  07DF  1303               	bcf	3,6	;RP1=0, select bank1
  5617  07E0  00A5               	movwf	(get_pt@t2+2)^(0+128)
  5618                           
  5619                           ;plati_temp.c: 48: return t2;
  5620  07E1  0823               	movf	get_pt@t2^(0+128),w
  5621  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  5622  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  5623  07E4  00DA               	movwf	?_get_pt
  5624  07E5  1683               	bsf	3,5	;RP0=1, select bank1
  5625  07E6  1303               	bcf	3,6	;RP1=0, select bank1
  5626  07E7  0824               	movf	(get_pt@t2+1)^(0+128),w
  5627  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  5628  07E9  1303               	bcf	3,6	;RP1=0, select bank0
  5629  07EA  00DB               	movwf	?_get_pt+1
  5630  07EB  1683               	bsf	3,5	;RP0=1, select bank1
  5631  07EC  1303               	bcf	3,6	;RP1=0, select bank1
  5632  07ED  0825               	movf	(get_pt@t2+2)^(0+128),w
  5633  07EE  1283               	bcf	3,5	;RP0=0, select bank0
  5634  07EF  1303               	bcf	3,6	;RP1=0, select bank0
  5635  07F0  00DC               	movwf	?_get_pt+2
  5636  07F1  0008               	return
  5637  07F2                     __end_of_get_pt:	
  5638                           
  5639                           	psect	text28
  5640  0D37                     __ptext28:	
  5641 ;; *************** function _get_adcon *****************
  5642 ;; Defined at:
  5643 ;;		line 93 in file "AD_value.c"
  5644 ;; Parameters:    Size  Location     Type
  5645 ;;		None
  5646 ;; Auto vars:     Size  Location     Type
  5647 ;;  voltage_valu    3   19[BANK0 ] int 
  5648 ;;  ad_value        2   24[BANK0 ] unsigned int 
  5649 ;;  my_adres        2   22[BANK0 ] struct .
  5650 ;; Return value:  Size  Location     Type
  5651 ;;                  3   16[BANK0 ] struct .
  5652 ;; Registers used:
  5653 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5654 ;; Tracked objects:
  5655 ;;		On entry : 0/0
  5656 ;;		On exit  : 0/0
  5657 ;;		Unchanged: 0/0
  5658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5659 ;;      Params:         0       3       0       0       0
  5660 ;;      Locals:         0       7       0       0       0
  5661 ;;      Temps:          1       0       0       0       0
  5662 ;;      Totals:         1      10       0       0       0
  5663 ;;Total ram usage:       11 bytes
  5664 ;; Hardware stack levels used:    1
  5665 ;; Hardware stack levels required when called:    2
  5666 ;; This function calls:
  5667 ;;		___ftmul
  5668 ;;		___lwtoft
  5669 ;;		_bit_shift
  5670 ;; This function is called by:
  5671 ;;		_get_pt
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           
  5676                           ;psect for function _get_adcon
  5677  0D37                     _get_adcon:	
  5678                           
  5679                           ;AD_value.c: 96: uint16_t ad_value = 0b0000000000;
  5680                           
  5681                           ;incstack = 0
  5682                           ; Regs used in _get_adcon: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5683  0D37  1283               	bcf	3,5	;RP0=0, select bank0
  5684  0D38  1303               	bcf	3,6	;RP1=0, select bank0
  5685  0D39  01B8               	clrf	get_adcon@ad_value
  5686  0D3A  01B9               	clrf	get_adcon@ad_value+1
  5687                           
  5688                           ;AD_value.c: 97: double voltage_value = 0.0;
  5689  0D3B  3000               	movlw	0
  5690  0D3C  00B3               	movwf	get_adcon@voltage_value
  5691  0D3D  3000               	movlw	0
  5692  0D3E  00B4               	movwf	get_adcon@voltage_value+1
  5693  0D3F  3000               	movlw	0
  5694  0D40  00B5               	movwf	get_adcon@voltage_value+2
  5695                           
  5696                           ;AD_value.c: 98: adres_t my_adres;
  5697                           ;AD_value.c: 101: ADCON0 = 0b10000001;
  5698  0D41  3081               	movlw	129
  5699  0D42  009F               	movwf	31	;volatile
  5700                           
  5701                           ;AD_value.c: 102: ADCON0bits.GO_DONE = 1;
  5702  0D43  151F               	bsf	31,2	;volatile
  5703  0D44                     l365:	
  5704                           ;AD_value.c: 105: while(ADCON0bits.GO_DONE){;}
  5705                           
  5706  0D44  191F               	btfsc	31,2	;volatile
  5707  0D45  2D44               	goto	l365
  5708                           
  5709                           ;AD_value.c: 108: my_adres.my_adres_h = ADRESH;
  5710  0D46  081E               	movf	30,w	;volatile
  5711  0D47  00FC               	movwf	??_get_adcon
  5712  0D48  087C               	movf	??_get_adcon,w
  5713  0D49  00B6               	movwf	get_adcon@my_adres
  5714                           
  5715                           ;AD_value.c: 109: my_adres.my_adres_l = ADRESL;
  5716  0D4A  1683               	bsf	3,5	;RP0=1, select bank1
  5717  0D4B  1303               	bcf	3,6	;RP1=0, select bank1
  5718  0D4C  081E               	movf	30,w	;volatile
  5719  0D4D  00FC               	movwf	??_get_adcon
  5720  0D4E  087C               	movf	??_get_adcon,w
  5721  0D4F  1283               	bcf	3,5	;RP0=0, select bank0
  5722  0D50  1303               	bcf	3,6	;RP1=0, select bank0
  5723  0D51  00B7               	movwf	get_adcon@my_adres+1
  5724                           
  5725                           ;AD_value.c: 110: bit_shift(&ad_value, &my_adres);
  5726  0D52  3036               	movlw	(low (get_adcon@my_adres| 0))& (0+255)
  5727  0D53  00FC               	movwf	??_get_adcon
  5728  0D54  087C               	movf	??_get_adcon,w
  5729  0D55  00F0               	movwf	bit_shift@p_adres
  5730  0D56  3038               	movlw	(low (get_adcon@ad_value| 0))& (0+255)
  5731  0D57  120A  158A  234E  120A  158A  	fcall	_bit_shift
  5732                           
  5733                           ;AD_value.c: 113: voltage_value = (double)(ad_value * 0.00488759);
  5734  0D5C  3028               	movlw	40
  5735  0D5D  1283               	bcf	3,5	;RP0=0, select bank0
  5736  0D5E  1303               	bcf	3,6	;RP1=0, select bank0
  5737  0D5F  00A0               	movwf	___ftmul@f1
  5738  0D60  30A0               	movlw	160
  5739  0D61  00A1               	movwf	___ftmul@f1+1
  5740  0D62  303B               	movlw	59
  5741  0D63  00A2               	movwf	___ftmul@f1+2
  5742  0D64  0839               	movf	get_adcon@ad_value+1,w
  5743  0D65  00F9               	movwf	___lwtoft@c+1
  5744  0D66  0838               	movf	get_adcon@ad_value,w
  5745  0D67  00F8               	movwf	___lwtoft@c
  5746  0D68  120A  158A  21CD  120A  158A  	fcall	___lwtoft
  5747  0D6D  0878               	movf	?___lwtoft,w
  5748  0D6E  1283               	bcf	3,5	;RP0=0, select bank0
  5749  0D6F  1303               	bcf	3,6	;RP1=0, select bank0
  5750  0D70  00A3               	movwf	___ftmul@f2
  5751  0D71  0879               	movf	?___lwtoft+1,w
  5752  0D72  00A4               	movwf	___ftmul@f2+1
  5753  0D73  087A               	movf	?___lwtoft+2,w
  5754  0D74  00A5               	movwf	___ftmul@f2+2
  5755  0D75  120A  118A  2223   	fcall	___ftmul
  5756  0D78  1283               	bcf	3,5	;RP0=0, select bank0
  5757  0D79  1303               	bcf	3,6	;RP1=0, select bank0
  5758  0D7A  0820               	movf	?___ftmul,w
  5759  0D7B  00B3               	movwf	get_adcon@voltage_value
  5760  0D7C  0821               	movf	?___ftmul+1,w
  5761  0D7D  00B4               	movwf	get_adcon@voltage_value+1
  5762  0D7E  0822               	movf	?___ftmul+2,w
  5763  0D7F  00B5               	movwf	get_adcon@voltage_value+2
  5764                           
  5765                           ;AD_value.c: 116: return voltage_value;
  5766  0D80  0833               	movf	get_adcon@voltage_value,w
  5767  0D81  00B0               	movwf	?_get_adcon
  5768  0D82  0834               	movf	get_adcon@voltage_value+1,w
  5769  0D83  00B1               	movwf	?_get_adcon+1
  5770  0D84  0835               	movf	get_adcon@voltage_value+2,w
  5771  0D85  00B2               	movwf	?_get_adcon+2
  5772  0D86  0008               	return
  5773  0D87                     __end_of_get_adcon:	
  5774                           
  5775                           	psect	text29
  5776  0B4E                     __ptext29:	
  5777 ;; *************** function _bit_shift *****************
  5778 ;; Defined at:
  5779 ;;		line 73 in file "AD_value.c"
  5780 ;; Parameters:    Size  Location     Type
  5781 ;;  p_ad_value      1    wreg     PTR unsigned int 
  5782 ;;		 -> get_adcon@ad_value(2), 
  5783 ;;  p_adres         1    0[COMMON] PTR struct .
  5784 ;;		 -> get_adcon@my_adres(2), 
  5785 ;; Auto vars:     Size  Location     Type
  5786 ;;  p_ad_value      1    5[COMMON] PTR unsigned int 
  5787 ;;		 -> get_adcon@ad_value(2), 
  5788 ;; Return value:  Size  Location     Type
  5789 ;;		None               void
  5790 ;; Registers used:
  5791 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5797 ;;      Params:         1       0       0       0       0
  5798 ;;      Locals:         1       0       0       0       0
  5799 ;;      Temps:          4       0       0       0       0
  5800 ;;      Totals:         6       0       0       0       0
  5801 ;;Total ram usage:        6 bytes
  5802 ;; Hardware stack levels used:    2
  5803 ;; This function calls:
  5804 ;;		Nothing
  5805 ;; This function is called by:
  5806 ;;		_get_adcon
  5807 ;; This function uses a non-reentrant model
  5808 ;;
  5809                           
  5810                           
  5811                           ;psect for function _bit_shift
  5812  0B4E                     _bit_shift:	
  5813                           
  5814                           ;incstack = 0
  5815                           ; Regs used in _bit_shift: [wreg-fsr0h+status,2+status,0+pclath]
  5816                           ;bit_shift@p_ad_value stored from wreg
  5817  0B4E  00F5               	movwf	bit_shift@p_ad_value
  5818                           
  5819                           ;AD_value.c: 75: const uint8_t bit_mask_for_l = 0b00000011;
  5820                           ;AD_value.c: 77: *p_ad_value = (uint16_t)(p_adres->my_adres_h);
  5821  0B4F  0870               	movf	bit_shift@p_adres,w
  5822  0B50  0084               	movwf	4
  5823  0B51  1383               	bcf	3,7	;select IRP bank0
  5824  0B52  0800               	movf	0,w
  5825  0B53  00F1               	movwf	??_bit_shift
  5826  0B54  01F2               	clrf	??_bit_shift+1
  5827  0B55  0875               	movf	bit_shift@p_ad_value,w
  5828  0B56  0084               	movwf	4
  5829  0B57  0871               	movf	??_bit_shift,w
  5830  0B58  0080               	movwf	0
  5831  0B59  0A84               	incf	4,f
  5832  0B5A  0872               	movf	??_bit_shift+1,w
  5833  0B5B  0080               	movwf	0
  5834                           
  5835                           ;AD_value.c: 78: *p_ad_value <<= 2;
  5836  0B5C  0875               	movf	bit_shift@p_ad_value,w
  5837  0B5D  0084               	movwf	4
  5838  0B5E  3002               	movlw	2
  5839  0B5F                     u1575:	
  5840  0B5F  1003               	clrc
  5841  0B60  0D80               	rlf	0,f
  5842  0B61  0A84               	incf	4,f
  5843  0B62  0D80               	rlf	0,f
  5844  0B63  0384               	decf	4,f
  5845  0B64  3EFF               	addlw	-1
  5846  0B65  1D03               	skipz
  5847  0B66  2B5F               	goto	u1575
  5848                           
  5849                           ;AD_value.c: 79: *p_ad_value |= (bit_mask_for_l & (p_adres->my_adres_l >> 6));
  5850  0B67  3021               	movlw	low (bit_shift@bit_mask_for_l-__stringbase)
  5851  0B68  0084               	movwf	4
  5852  0B69  120A  158A  2000  120A  158A  	fcall	stringdir
  5853  0B6E  00F1               	movwf	??_bit_shift
  5854  0B6F  0A70               	incf	bit_shift@p_adres,w
  5855  0B70  0084               	movwf	4
  5856  0B71  0800               	movf	0,w
  5857  0B72  00F2               	movwf	??_bit_shift+1
  5858  0B73  3006               	movlw	6
  5859  0B74                     u1585:	
  5860  0B74  1003               	clrc
  5861  0B75  0CF2               	rrf	??_bit_shift+1,f
  5862  0B76  3EFF               	addlw	-1
  5863  0B77  1D03               	skipz
  5864  0B78  2B74               	goto	u1585
  5865  0B79  0872               	movf	??_bit_shift+1,w
  5866  0B7A  0571               	andwf	??_bit_shift,w
  5867  0B7B  00F3               	movwf	??_bit_shift+2
  5868  0B7C  01F4               	clrf	??_bit_shift+3
  5869  0B7D  0875               	movf	bit_shift@p_ad_value,w
  5870  0B7E  0084               	movwf	4
  5871  0B7F  0873               	movf	??_bit_shift+2,w
  5872  0B80  0480               	iorwf	0,f
  5873  0B81  0A84               	incf	4,f
  5874  0B82  0874               	movf	??_bit_shift+3,w
  5875  0B83  0480               	iorwf	0,f
  5876  0B84  0008               	return
  5877  0B85                     __end_of_bit_shift:	
  5878                           
  5879                           	psect	text30
  5880  09CD                     __ptext30:	
  5881 ;; *************** function ___lwtoft *****************
  5882 ;; Defined at:
  5883 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwtoft.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;  c               2    8[COMMON] unsigned int 
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;		None
  5888 ;; Return value:  Size  Location     Type
  5889 ;;                  3    8[COMMON] float 
  5890 ;; Registers used:
  5891 ;;		wreg, status,2, status,0, pclath, cstack
  5892 ;; Tracked objects:
  5893 ;;		On entry : 0/0
  5894 ;;		On exit  : 0/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5897 ;;      Params:         3       0       0       0       0
  5898 ;;      Locals:         0       0       0       0       0
  5899 ;;      Temps:          1       0       0       0       0
  5900 ;;      Totals:         4       0       0       0       0
  5901 ;;Total ram usage:        4 bytes
  5902 ;; Hardware stack levels used:    1
  5903 ;; Hardware stack levels required when called:    1
  5904 ;; This function calls:
  5905 ;;		___ftpack
  5906 ;; This function is called by:
  5907 ;;		_get_adcon
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910                           
  5911                           
  5912                           ;psect for function ___lwtoft
  5913  09CD                     ___lwtoft:	
  5914                           
  5915                           ;incstack = 0
  5916                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  5917  09CD  0878               	movf	___lwtoft@c,w
  5918  09CE  00F0               	movwf	___ftpack@arg
  5919  09CF  0879               	movf	___lwtoft@c+1,w
  5920  09D0  00F1               	movwf	___ftpack@arg+1
  5921  09D1  01F2               	clrf	___ftpack@arg+2
  5922  09D2  308E               	movlw	142
  5923  09D3  00FB               	movwf	??___lwtoft
  5924  09D4  087B               	movf	??___lwtoft,w
  5925  09D5  00F3               	movwf	___ftpack@exp
  5926  09D6  01F4               	clrf	___ftpack@sign
  5927  09D7  120A  158A  269D   	fcall	___ftpack
  5928  09DA  0870               	movf	?___ftpack,w
  5929  09DB  00F8               	movwf	?___lwtoft
  5930  09DC  0871               	movf	?___ftpack+1,w
  5931  09DD  00F9               	movwf	?___lwtoft+1
  5932  09DE  0872               	movf	?___ftpack+2,w
  5933  09DF  00FA               	movwf	?___lwtoft+2
  5934  09E0  0008               	return
  5935  09E1                     __end_of___lwtoft:	
  5936                           
  5937                           	psect	text31
  5938  0223                     __ptext31:	
  5939 ;; *************** function ___ftmul *****************
  5940 ;; Defined at:
  5941 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;  f1              3    0[BANK0 ] float 
  5944 ;;  f2              3    3[BANK0 ] float 
  5945 ;; Auto vars:     Size  Location     Type
  5946 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  5947 ;;  sign            1   15[BANK0 ] unsigned char 
  5948 ;;  cntr            1   14[BANK0 ] unsigned char 
  5949 ;;  exp             1   10[BANK0 ] unsigned char 
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  3    0[BANK0 ] float 
  5952 ;; Registers used:
  5953 ;;		wreg, status,2, status,0, pclath, cstack
  5954 ;; Tracked objects:
  5955 ;;		On entry : 0/0
  5956 ;;		On exit  : 0/0
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5959 ;;      Params:         0       6       0       0       0
  5960 ;;      Locals:         0       6       0       0       0
  5961 ;;      Temps:          0       4       0       0       0
  5962 ;;      Totals:         0      16       0       0       0
  5963 ;;Total ram usage:       16 bytes
  5964 ;; Hardware stack levels used:    1
  5965 ;; Hardware stack levels required when called:    1
  5966 ;; This function calls:
  5967 ;;		___ftpack
  5968 ;; This function is called by:
  5969 ;;		_get_pt
  5970 ;;		_get_adcon
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974                           
  5975                           ;psect for function ___ftmul
  5976  0223                     ___ftmul:	
  5977                           
  5978                           ;incstack = 0
  5979                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5980  0223  1283               	bcf	3,5	;RP0=0, select bank0
  5981  0224  1303               	bcf	3,6	;RP1=0, select bank0
  5982  0225  0820               	movf	___ftmul@f1,w
  5983  0226  00A6               	movwf	??___ftmul
  5984  0227  0821               	movf	___ftmul@f1+1,w
  5985  0228  00A7               	movwf	??___ftmul+1
  5986  0229  0822               	movf	___ftmul@f1+2,w
  5987  022A  00A8               	movwf	??___ftmul+2
  5988  022B  1003               	clrc
  5989  022C  0D27               	rlf	??___ftmul+1,w
  5990  022D  0D28               	rlf	??___ftmul+2,w
  5991  022E  00A9               	movwf	??___ftmul+3
  5992  022F  0829               	movf	??___ftmul+3,w
  5993  0230  00AA               	movwf	___ftmul@exp
  5994  0231  082A               	movf	___ftmul@exp,w
  5995  0232  1D03               	btfss	3,2
  5996  0233  2A3B               	goto	l1848
  5997  0234  3000               	movlw	0
  5998  0235  00A0               	movwf	?___ftmul
  5999  0236  3000               	movlw	0
  6000  0237  00A1               	movwf	?___ftmul+1
  6001  0238  3000               	movlw	0
  6002  0239  00A2               	movwf	?___ftmul+2
  6003  023A  0008               	return
  6004  023B                     l1848:	
  6005  023B  0823               	movf	___ftmul@f2,w
  6006  023C  00A6               	movwf	??___ftmul
  6007  023D  0824               	movf	___ftmul@f2+1,w
  6008  023E  00A7               	movwf	??___ftmul+1
  6009  023F  0825               	movf	___ftmul@f2+2,w
  6010  0240  00A8               	movwf	??___ftmul+2
  6011  0241  1003               	clrc
  6012  0242  0D27               	rlf	??___ftmul+1,w
  6013  0243  0D28               	rlf	??___ftmul+2,w
  6014  0244  00A9               	movwf	??___ftmul+3
  6015  0245  0829               	movf	??___ftmul+3,w
  6016  0246  00AF               	movwf	___ftmul@sign
  6017  0247  082F               	movf	___ftmul@sign,w
  6018  0248  1D03               	btfss	3,2
  6019  0249  2A51               	goto	l1854
  6020  024A  3000               	movlw	0
  6021  024B  00A0               	movwf	?___ftmul
  6022  024C  3000               	movlw	0
  6023  024D  00A1               	movwf	?___ftmul+1
  6024  024E  3000               	movlw	0
  6025  024F  00A2               	movwf	?___ftmul+2
  6026  0250  0008               	return
  6027  0251                     l1854:	
  6028  0251  082F               	movf	___ftmul@sign,w
  6029  0252  3E7B               	addlw	123
  6030  0253  00A6               	movwf	??___ftmul
  6031  0254  0826               	movf	??___ftmul,w
  6032  0255  07AA               	addwf	___ftmul@exp,f
  6033  0256  0820               	movf	___ftmul@f1,w
  6034  0257  00A6               	movwf	??___ftmul
  6035  0258  0821               	movf	___ftmul@f1+1,w
  6036  0259  00A7               	movwf	??___ftmul+1
  6037  025A  0822               	movf	___ftmul@f1+2,w
  6038  025B  00A8               	movwf	??___ftmul+2
  6039  025C  3010               	movlw	16
  6040  025D                     u1805:	
  6041  025D  1003               	clrc
  6042  025E  0CA8               	rrf	??___ftmul+2,f
  6043  025F  0CA7               	rrf	??___ftmul+1,f
  6044  0260  0CA6               	rrf	??___ftmul,f
  6045  0261  3EFF               	addlw	-1
  6046  0262  1D03               	skipz
  6047  0263  2A5D               	goto	u1805
  6048  0264  0826               	movf	??___ftmul,w
  6049  0265  00A9               	movwf	??___ftmul+3
  6050  0266  0829               	movf	??___ftmul+3,w
  6051  0267  00AF               	movwf	___ftmul@sign
  6052  0268  0823               	movf	___ftmul@f2,w
  6053  0269  00A6               	movwf	??___ftmul
  6054  026A  0824               	movf	___ftmul@f2+1,w
  6055  026B  00A7               	movwf	??___ftmul+1
  6056  026C  0825               	movf	___ftmul@f2+2,w
  6057  026D  00A8               	movwf	??___ftmul+2
  6058  026E  3010               	movlw	16
  6059  026F                     u1815:	
  6060  026F  1003               	clrc
  6061  0270  0CA8               	rrf	??___ftmul+2,f
  6062  0271  0CA7               	rrf	??___ftmul+1,f
  6063  0272  0CA6               	rrf	??___ftmul,f
  6064  0273  3EFF               	addlw	-1
  6065  0274  1D03               	skipz
  6066  0275  2A6F               	goto	u1815
  6067  0276  0826               	movf	??___ftmul,w
  6068  0277  00A9               	movwf	??___ftmul+3
  6069  0278  0829               	movf	??___ftmul+3,w
  6070  0279  06AF               	xorwf	___ftmul@sign,f
  6071  027A  3080               	movlw	128
  6072  027B  00A6               	movwf	??___ftmul
  6073  027C  0826               	movf	??___ftmul,w
  6074  027D  05AF               	andwf	___ftmul@sign,f
  6075  027E  17A1               	bsf	___ftmul@f1+1,7
  6076  027F  17A4               	bsf	___ftmul@f2+1,7
  6077  0280  30FF               	movlw	255
  6078  0281  05A3               	andwf	___ftmul@f2,f
  6079  0282  30FF               	movlw	255
  6080  0283  05A4               	andwf	___ftmul@f2+1,f
  6081  0284  3000               	movlw	0
  6082  0285  05A5               	andwf	___ftmul@f2+2,f
  6083  0286  3000               	movlw	0
  6084  0287  00AB               	movwf	___ftmul@f3_as_product
  6085  0288  3000               	movlw	0
  6086  0289  00AC               	movwf	___ftmul@f3_as_product+1
  6087  028A  3000               	movlw	0
  6088  028B  00AD               	movwf	___ftmul@f3_as_product+2
  6089  028C  3007               	movlw	7
  6090  028D  00A6               	movwf	??___ftmul
  6091  028E  0826               	movf	??___ftmul,w
  6092  028F  00AE               	movwf	___ftmul@cntr
  6093  0290                     l1866:	
  6094  0290  1C20               	btfss	___ftmul@f1,0
  6095  0291  2AA0               	goto	l1870
  6096  0292  0823               	movf	___ftmul@f2,w
  6097  0293  07AB               	addwf	___ftmul@f3_as_product,f
  6098  0294  0824               	movf	___ftmul@f2+1,w
  6099  0295  1103               	clrz
  6100  0296  1803               	skipnc
  6101  0297  0A24               	incf	___ftmul@f2+1,w
  6102  0298  1D03               	btfss	3,2
  6103  0299  07AC               	addwf	___ftmul@f3_as_product+1,f
  6104  029A  0825               	movf	___ftmul@f2+2,w
  6105  029B  1103               	clrz
  6106  029C  1803               	skipnc
  6107  029D  0A25               	incf	___ftmul@f2+2,w
  6108  029E  1D03               	btfss	3,2
  6109  029F  07AD               	addwf	___ftmul@f3_as_product+2,f
  6110  02A0                     l1870:	
  6111  02A0  3001               	movlw	1
  6112  02A1                     u1845:	
  6113  02A1  1003               	clrc
  6114  02A2  0CA2               	rrf	___ftmul@f1+2,f
  6115  02A3  0CA1               	rrf	___ftmul@f1+1,f
  6116  02A4  0CA0               	rrf	___ftmul@f1,f
  6117  02A5  3EFF               	addlw	-1
  6118  02A6  1D03               	skipz
  6119  02A7  2AA1               	goto	u1845
  6120  02A8  3001               	movlw	1
  6121  02A9                     u1855:	
  6122  02A9  1003               	clrc
  6123  02AA  0DA3               	rlf	___ftmul@f2,f
  6124  02AB  0DA4               	rlf	___ftmul@f2+1,f
  6125  02AC  0DA5               	rlf	___ftmul@f2+2,f
  6126  02AD  3EFF               	addlw	-1
  6127  02AE  1D03               	skipz
  6128  02AF  2AA9               	goto	u1855
  6129  02B0  3001               	movlw	1
  6130  02B1  02AE               	subwf	___ftmul@cntr,f
  6131  02B2  1D03               	btfss	3,2
  6132  02B3  2A90               	goto	l1866
  6133  02B4  3009               	movlw	9
  6134  02B5  00A6               	movwf	??___ftmul
  6135  02B6  0826               	movf	??___ftmul,w
  6136  02B7  00AE               	movwf	___ftmul@cntr
  6137  02B8                     l1878:	
  6138  02B8  1C20               	btfss	___ftmul@f1,0
  6139  02B9  2AC8               	goto	l1882
  6140  02BA  0823               	movf	___ftmul@f2,w
  6141  02BB  07AB               	addwf	___ftmul@f3_as_product,f
  6142  02BC  0824               	movf	___ftmul@f2+1,w
  6143  02BD  1103               	clrz
  6144  02BE  1803               	skipnc
  6145  02BF  0A24               	incf	___ftmul@f2+1,w
  6146  02C0  1D03               	btfss	3,2
  6147  02C1  07AC               	addwf	___ftmul@f3_as_product+1,f
  6148  02C2  0825               	movf	___ftmul@f2+2,w
  6149  02C3  1103               	clrz
  6150  02C4  1803               	skipnc
  6151  02C5  0A25               	incf	___ftmul@f2+2,w
  6152  02C6  1D03               	btfss	3,2
  6153  02C7  07AD               	addwf	___ftmul@f3_as_product+2,f
  6154  02C8                     l1882:	
  6155  02C8  3001               	movlw	1
  6156  02C9                     u1895:	
  6157  02C9  1003               	clrc
  6158  02CA  0CA2               	rrf	___ftmul@f1+2,f
  6159  02CB  0CA1               	rrf	___ftmul@f1+1,f
  6160  02CC  0CA0               	rrf	___ftmul@f1,f
  6161  02CD  3EFF               	addlw	-1
  6162  02CE  1D03               	skipz
  6163  02CF  2AC9               	goto	u1895
  6164  02D0  3001               	movlw	1
  6165  02D1                     u1905:	
  6166  02D1  1003               	clrc
  6167  02D2  0CAD               	rrf	___ftmul@f3_as_product+2,f
  6168  02D3  0CAC               	rrf	___ftmul@f3_as_product+1,f
  6169  02D4  0CAB               	rrf	___ftmul@f3_as_product,f
  6170  02D5  3EFF               	addlw	-1
  6171  02D6  1D03               	skipz
  6172  02D7  2AD1               	goto	u1905
  6173  02D8  3001               	movlw	1
  6174  02D9  02AE               	subwf	___ftmul@cntr,f
  6175  02DA  1D03               	btfss	3,2
  6176  02DB  2AB8               	goto	l1878
  6177  02DC  082B               	movf	___ftmul@f3_as_product,w
  6178  02DD  00F0               	movwf	___ftpack@arg
  6179  02DE  082C               	movf	___ftmul@f3_as_product+1,w
  6180  02DF  00F1               	movwf	___ftpack@arg+1
  6181  02E0  082D               	movf	___ftmul@f3_as_product+2,w
  6182  02E1  00F2               	movwf	___ftpack@arg+2
  6183  02E2  082A               	movf	___ftmul@exp,w
  6184  02E3  00A6               	movwf	??___ftmul
  6185  02E4  0826               	movf	??___ftmul,w
  6186  02E5  00F3               	movwf	___ftpack@exp
  6187  02E6  082F               	movf	___ftmul@sign,w
  6188  02E7  00A7               	movwf	??___ftmul+1
  6189  02E8  0827               	movf	??___ftmul+1,w
  6190  02E9  00F4               	movwf	___ftpack@sign
  6191  02EA  120A  158A  269D   	fcall	___ftpack
  6192  02ED  0870               	movf	?___ftpack,w
  6193  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  6194  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  6195  02F0  00A0               	movwf	?___ftmul
  6196  02F1  0871               	movf	?___ftpack+1,w
  6197  02F2  00A1               	movwf	?___ftmul+1
  6198  02F3  0872               	movf	?___ftpack+2,w
  6199  02F4  00A2               	movwf	?___ftmul+2
  6200  02F5  0008               	return
  6201  02F6                     __end_of___ftmul:	
  6202                           
  6203                           	psect	text32
  6204  098B                     __ptext32:	
  6205 ;; *************** function ___ftneg *****************
  6206 ;; Defined at:
  6207 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftneg.c"
  6208 ;; Parameters:    Size  Location     Type
  6209 ;;  f1              3   26[BANK0 ] float 
  6210 ;; Auto vars:     Size  Location     Type
  6211 ;;		None
  6212 ;; Return value:  Size  Location     Type
  6213 ;;                  3   26[BANK0 ] float 
  6214 ;; Registers used:
  6215 ;;		wreg
  6216 ;; Tracked objects:
  6217 ;;		On entry : 0/0
  6218 ;;		On exit  : 0/0
  6219 ;;		Unchanged: 0/0
  6220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6221 ;;      Params:         0       3       0       0       0
  6222 ;;      Locals:         0       0       0       0       0
  6223 ;;      Temps:          0       0       0       0       0
  6224 ;;      Totals:         0       3       0       0       0
  6225 ;;Total ram usage:        3 bytes
  6226 ;; Hardware stack levels used:    1
  6227 ;; This function calls:
  6228 ;;		Nothing
  6229 ;; This function is called by:
  6230 ;;		_get_pt
  6231 ;; This function uses a non-reentrant model
  6232 ;;
  6233                           
  6234                           
  6235                           ;psect for function ___ftneg
  6236  098B                     ___ftneg:	
  6237                           
  6238                           ;incstack = 0
  6239                           ; Regs used in ___ftneg: [wreg]
  6240  098B  1283               	bcf	3,5	;RP0=0, select bank0
  6241  098C  1303               	bcf	3,6	;RP1=0, select bank0
  6242  098D  083C               	movf	___ftneg@f1+2,w
  6243  098E  043B               	iorwf	___ftneg@f1+1,w
  6244  098F  043A               	iorwf	___ftneg@f1,w
  6245  0990  1903               	skipnz
  6246  0991  0008               	return
  6247  0992  3080               	movlw	128
  6248  0993  06BC               	xorwf	___ftneg@f1+2,f
  6249  0994  0008               	return
  6250  0995                     __end_of___ftneg:	
  6251                           
  6252                           	psect	text33
  6253  016B                     __ptext33:	
  6254 ;; *************** function ___ftdiv *****************
  6255 ;; Defined at:
  6256 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdiv.c"
  6257 ;; Parameters:    Size  Location     Type
  6258 ;;  f2              3   42[BANK0 ] float 
  6259 ;;  f1              3   45[BANK0 ] float 
  6260 ;; Auto vars:     Size  Location     Type
  6261 ;;  f3              3   53[BANK0 ] float 
  6262 ;;  sign            1   57[BANK0 ] unsigned char 
  6263 ;;  exp             1   56[BANK0 ] unsigned char 
  6264 ;;  cntr            1   52[BANK0 ] unsigned char 
  6265 ;; Return value:  Size  Location     Type
  6266 ;;                  3   42[BANK0 ] float 
  6267 ;; Registers used:
  6268 ;;		wreg, status,2, status,0, pclath, cstack
  6269 ;; Tracked objects:
  6270 ;;		On entry : 0/0
  6271 ;;		On exit  : 0/0
  6272 ;;		Unchanged: 0/0
  6273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6274 ;;      Params:         0       6       0       0       0
  6275 ;;      Locals:         0       6       0       0       0
  6276 ;;      Temps:          0       4       0       0       0
  6277 ;;      Totals:         0      16       0       0       0
  6278 ;;Total ram usage:       16 bytes
  6279 ;; Hardware stack levels used:    1
  6280 ;; Hardware stack levels required when called:    1
  6281 ;; This function calls:
  6282 ;;		___ftpack
  6283 ;; This function is called by:
  6284 ;;		_get_pt
  6285 ;;		_get_temp
  6286 ;; This function uses a non-reentrant model
  6287 ;;
  6288                           
  6289                           
  6290                           ;psect for function ___ftdiv
  6291  016B                     ___ftdiv:	
  6292                           
  6293                           ;incstack = 0
  6294                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6295  016B  1283               	bcf	3,5	;RP0=0, select bank0
  6296  016C  1303               	bcf	3,6	;RP1=0, select bank0
  6297  016D  084D               	movf	___ftdiv@f1,w
  6298  016E  00D0               	movwf	??___ftdiv
  6299  016F  084E               	movf	___ftdiv@f1+1,w
  6300  0170  00D1               	movwf	??___ftdiv+1
  6301  0171  084F               	movf	___ftdiv@f1+2,w
  6302  0172  00D2               	movwf	??___ftdiv+2
  6303  0173  1003               	clrc
  6304  0174  0D51               	rlf	??___ftdiv+1,w
  6305  0175  0D52               	rlf	??___ftdiv+2,w
  6306  0176  00D3               	movwf	??___ftdiv+3
  6307  0177  0853               	movf	??___ftdiv+3,w
  6308  0178  00D8               	movwf	___ftdiv@exp
  6309  0179  0858               	movf	___ftdiv@exp,w
  6310  017A  1D03               	btfss	3,2
  6311  017B  2983               	goto	l2052
  6312  017C  3000               	movlw	0
  6313  017D  00CA               	movwf	?___ftdiv
  6314  017E  3000               	movlw	0
  6315  017F  00CB               	movwf	?___ftdiv+1
  6316  0180  3000               	movlw	0
  6317  0181  00CC               	movwf	?___ftdiv+2
  6318  0182  0008               	return
  6319  0183                     l2052:	
  6320  0183  084A               	movf	___ftdiv@f2,w
  6321  0184  00D0               	movwf	??___ftdiv
  6322  0185  084B               	movf	___ftdiv@f2+1,w
  6323  0186  00D1               	movwf	??___ftdiv+1
  6324  0187  084C               	movf	___ftdiv@f2+2,w
  6325  0188  00D2               	movwf	??___ftdiv+2
  6326  0189  1003               	clrc
  6327  018A  0D51               	rlf	??___ftdiv+1,w
  6328  018B  0D52               	rlf	??___ftdiv+2,w
  6329  018C  00D3               	movwf	??___ftdiv+3
  6330  018D  0853               	movf	??___ftdiv+3,w
  6331  018E  00D9               	movwf	___ftdiv@sign
  6332  018F  0859               	movf	___ftdiv@sign,w
  6333  0190  1D03               	btfss	3,2
  6334  0191  2999               	goto	l2058
  6335  0192  3000               	movlw	0
  6336  0193  00CA               	movwf	?___ftdiv
  6337  0194  3000               	movlw	0
  6338  0195  00CB               	movwf	?___ftdiv+1
  6339  0196  3000               	movlw	0
  6340  0197  00CC               	movwf	?___ftdiv+2
  6341  0198  0008               	return
  6342  0199                     l2058:	
  6343  0199  3000               	movlw	0
  6344  019A  00D5               	movwf	___ftdiv@f3
  6345  019B  3000               	movlw	0
  6346  019C  00D6               	movwf	___ftdiv@f3+1
  6347  019D  3000               	movlw	0
  6348  019E  00D7               	movwf	___ftdiv@f3+2
  6349  019F  3089               	movlw	137
  6350  01A0  0759               	addwf	___ftdiv@sign,w
  6351  01A1  00D0               	movwf	??___ftdiv
  6352  01A2  0850               	movf	??___ftdiv,w
  6353  01A3  02D8               	subwf	___ftdiv@exp,f
  6354  01A4  084D               	movf	___ftdiv@f1,w
  6355  01A5  00D0               	movwf	??___ftdiv
  6356  01A6  084E               	movf	___ftdiv@f1+1,w
  6357  01A7  00D1               	movwf	??___ftdiv+1
  6358  01A8  084F               	movf	___ftdiv@f1+2,w
  6359  01A9  00D2               	movwf	??___ftdiv+2
  6360  01AA  3010               	movlw	16
  6361  01AB                     u2245:	
  6362  01AB  1003               	clrc
  6363  01AC  0CD2               	rrf	??___ftdiv+2,f
  6364  01AD  0CD1               	rrf	??___ftdiv+1,f
  6365  01AE  0CD0               	rrf	??___ftdiv,f
  6366  01AF  3EFF               	addlw	-1
  6367  01B0  1D03               	skipz
  6368  01B1  29AB               	goto	u2245
  6369  01B2  0850               	movf	??___ftdiv,w
  6370  01B3  00D3               	movwf	??___ftdiv+3
  6371  01B4  0853               	movf	??___ftdiv+3,w
  6372  01B5  00D9               	movwf	___ftdiv@sign
  6373  01B6  084A               	movf	___ftdiv@f2,w
  6374  01B7  00D0               	movwf	??___ftdiv
  6375  01B8  084B               	movf	___ftdiv@f2+1,w
  6376  01B9  00D1               	movwf	??___ftdiv+1
  6377  01BA  084C               	movf	___ftdiv@f2+2,w
  6378  01BB  00D2               	movwf	??___ftdiv+2
  6379  01BC  3010               	movlw	16
  6380  01BD                     u2255:	
  6381  01BD  1003               	clrc
  6382  01BE  0CD2               	rrf	??___ftdiv+2,f
  6383  01BF  0CD1               	rrf	??___ftdiv+1,f
  6384  01C0  0CD0               	rrf	??___ftdiv,f
  6385  01C1  3EFF               	addlw	-1
  6386  01C2  1D03               	skipz
  6387  01C3  29BD               	goto	u2255
  6388  01C4  0850               	movf	??___ftdiv,w
  6389  01C5  00D3               	movwf	??___ftdiv+3
  6390  01C6  0853               	movf	??___ftdiv+3,w
  6391  01C7  06D9               	xorwf	___ftdiv@sign,f
  6392  01C8  3080               	movlw	128
  6393  01C9  00D0               	movwf	??___ftdiv
  6394  01CA  0850               	movf	??___ftdiv,w
  6395  01CB  05D9               	andwf	___ftdiv@sign,f
  6396  01CC  17CE               	bsf	___ftdiv@f1+1,7
  6397  01CD  30FF               	movlw	255
  6398  01CE  05CD               	andwf	___ftdiv@f1,f
  6399  01CF  30FF               	movlw	255
  6400  01D0  05CE               	andwf	___ftdiv@f1+1,f
  6401  01D1  3000               	movlw	0
  6402  01D2  05CF               	andwf	___ftdiv@f1+2,f
  6403  01D3  17CB               	bsf	___ftdiv@f2+1,7
  6404  01D4  30FF               	movlw	255
  6405  01D5  05CA               	andwf	___ftdiv@f2,f
  6406  01D6  30FF               	movlw	255
  6407  01D7  05CB               	andwf	___ftdiv@f2+1,f
  6408  01D8  3000               	movlw	0
  6409  01D9  05CC               	andwf	___ftdiv@f2+2,f
  6410  01DA  3018               	movlw	24
  6411  01DB  00D0               	movwf	??___ftdiv
  6412  01DC  0850               	movf	??___ftdiv,w
  6413  01DD  00D4               	movwf	___ftdiv@cntr
  6414  01DE                     l2072:	
  6415  01DE  3001               	movlw	1
  6416  01DF                     u2265:	
  6417  01DF  1003               	clrc
  6418  01E0  0DD5               	rlf	___ftdiv@f3,f
  6419  01E1  0DD6               	rlf	___ftdiv@f3+1,f
  6420  01E2  0DD7               	rlf	___ftdiv@f3+2,f
  6421  01E3  3EFF               	addlw	-1
  6422  01E4  1D03               	skipz
  6423  01E5  29DF               	goto	u2265
  6424  01E6  084C               	movf	___ftdiv@f2+2,w
  6425  01E7  024F               	subwf	___ftdiv@f1+2,w
  6426  01E8  1D03               	skipz
  6427  01E9  29F0               	goto	u2275
  6428  01EA  084B               	movf	___ftdiv@f2+1,w
  6429  01EB  024E               	subwf	___ftdiv@f1+1,w
  6430  01EC  1D03               	skipz
  6431  01ED  29F0               	goto	u2275
  6432  01EE  084A               	movf	___ftdiv@f2,w
  6433  01EF  024D               	subwf	___ftdiv@f1,w
  6434  01F0                     u2275:	
  6435  01F0  1C03               	skipc
  6436  01F1  29FD               	goto	l2080
  6437  01F2  084A               	movf	___ftdiv@f2,w
  6438  01F3  02CD               	subwf	___ftdiv@f1,f
  6439  01F4  084B               	movf	___ftdiv@f2+1,w
  6440  01F5  1C03               	skipc
  6441  01F6  0F4B               	incfsz	___ftdiv@f2+1,w
  6442  01F7  02CE               	subwf	___ftdiv@f1+1,f
  6443  01F8  084C               	movf	___ftdiv@f2+2,w
  6444  01F9  1C03               	skipc
  6445  01FA  0A4C               	incf	___ftdiv@f2+2,w
  6446  01FB  02CF               	subwf	___ftdiv@f1+2,f
  6447  01FC  1455               	bsf	___ftdiv@f3,0
  6448  01FD                     l2080:	
  6449  01FD  3001               	movlw	1
  6450  01FE                     u2285:	
  6451  01FE  1003               	clrc
  6452  01FF  0DCD               	rlf	___ftdiv@f1,f
  6453  0200  0DCE               	rlf	___ftdiv@f1+1,f
  6454  0201  0DCF               	rlf	___ftdiv@f1+2,f
  6455  0202  3EFF               	addlw	-1
  6456  0203  1D03               	skipz
  6457  0204  29FE               	goto	u2285
  6458  0205  3001               	movlw	1
  6459  0206  02D4               	subwf	___ftdiv@cntr,f
  6460  0207  1D03               	btfss	3,2
  6461  0208  29DE               	goto	l2072
  6462  0209  0855               	movf	___ftdiv@f3,w
  6463  020A  00F0               	movwf	___ftpack@arg
  6464  020B  0856               	movf	___ftdiv@f3+1,w
  6465  020C  00F1               	movwf	___ftpack@arg+1
  6466  020D  0857               	movf	___ftdiv@f3+2,w
  6467  020E  00F2               	movwf	___ftpack@arg+2
  6468  020F  0858               	movf	___ftdiv@exp,w
  6469  0210  00D0               	movwf	??___ftdiv
  6470  0211  0850               	movf	??___ftdiv,w
  6471  0212  00F3               	movwf	___ftpack@exp
  6472  0213  0859               	movf	___ftdiv@sign,w
  6473  0214  00D1               	movwf	??___ftdiv+1
  6474  0215  0851               	movf	??___ftdiv+1,w
  6475  0216  00F4               	movwf	___ftpack@sign
  6476  0217  120A  158A  269D   	fcall	___ftpack
  6477  021A  0870               	movf	?___ftpack,w
  6478  021B  1283               	bcf	3,5	;RP0=0, select bank0
  6479  021C  1303               	bcf	3,6	;RP1=0, select bank0
  6480  021D  00CA               	movwf	?___ftdiv
  6481  021E  0871               	movf	?___ftpack+1,w
  6482  021F  00CB               	movwf	?___ftdiv+1
  6483  0220  0872               	movf	?___ftpack+2,w
  6484  0221  00CC               	movwf	?___ftdiv+2
  6485  0222  0008               	return
  6486  0223                     __end_of___ftdiv:	
  6487                           
  6488                           	psect	text34
  6489  02F6                     __ptext34:	
  6490 ;; *************** function ___ftadd *****************
  6491 ;; Defined at:
  6492 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftadd.c"
  6493 ;; Parameters:    Size  Location     Type
  6494 ;;  f1              3   29[BANK0 ] float 
  6495 ;;  f2              3   32[BANK0 ] float 
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;  exp1            1   41[BANK0 ] unsigned char 
  6498 ;;  exp2            1   40[BANK0 ] unsigned char 
  6499 ;;  sign            1   39[BANK0 ] unsigned char 
  6500 ;; Return value:  Size  Location     Type
  6501 ;;                  3   29[BANK0 ] float 
  6502 ;; Registers used:
  6503 ;;		wreg, status,2, status,0, pclath, cstack
  6504 ;; Tracked objects:
  6505 ;;		On entry : 0/0
  6506 ;;		On exit  : 0/0
  6507 ;;		Unchanged: 0/0
  6508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6509 ;;      Params:         0       6       0       0       0
  6510 ;;      Locals:         0       3       0       0       0
  6511 ;;      Temps:          0       4       0       0       0
  6512 ;;      Totals:         0      13       0       0       0
  6513 ;;Total ram usage:       13 bytes
  6514 ;; Hardware stack levels used:    1
  6515 ;; Hardware stack levels required when called:    1
  6516 ;; This function calls:
  6517 ;;		___ftpack
  6518 ;; This function is called by:
  6519 ;;		_get_pt
  6520 ;;		_get_temp
  6521 ;; This function uses a non-reentrant model
  6522 ;;
  6523                           
  6524                           
  6525                           ;psect for function ___ftadd
  6526  02F6                     ___ftadd:	
  6527                           
  6528                           ;incstack = 0
  6529                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6530  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  6531  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  6532  02F8  083D               	movf	___ftadd@f1,w
  6533  02F9  00C3               	movwf	??___ftadd
  6534  02FA  083E               	movf	___ftadd@f1+1,w
  6535  02FB  00C4               	movwf	??___ftadd+1
  6536  02FC  083F               	movf	___ftadd@f1+2,w
  6537  02FD  00C5               	movwf	??___ftadd+2
  6538  02FE  1003               	clrc
  6539  02FF  0D44               	rlf	??___ftadd+1,w
  6540  0300  0D45               	rlf	??___ftadd+2,w
  6541  0301  00C6               	movwf	??___ftadd+3
  6542  0302  0846               	movf	??___ftadd+3,w
  6543  0303  00C9               	movwf	___ftadd@exp1
  6544  0304  0840               	movf	___ftadd@f2,w
  6545  0305  00C3               	movwf	??___ftadd
  6546  0306  0841               	movf	___ftadd@f2+1,w
  6547  0307  00C4               	movwf	??___ftadd+1
  6548  0308  0842               	movf	___ftadd@f2+2,w
  6549  0309  00C5               	movwf	??___ftadd+2
  6550  030A  1003               	clrc
  6551  030B  0D44               	rlf	??___ftadd+1,w
  6552  030C  0D45               	rlf	??___ftadd+2,w
  6553  030D  00C6               	movwf	??___ftadd+3
  6554  030E  0846               	movf	??___ftadd+3,w
  6555  030F  00C8               	movwf	___ftadd@exp2
  6556  0310  0849               	movf	___ftadd@exp1,w
  6557  0311  1903               	btfsc	3,2
  6558  0312  2B1F               	goto	l1982
  6559  0313  0848               	movf	___ftadd@exp2,w
  6560  0314  0249               	subwf	___ftadd@exp1,w
  6561  0315  1803               	skipnc
  6562  0316  2B26               	goto	l1986
  6563  0317  0349               	decf	___ftadd@exp1,w
  6564  0318  3AFF               	xorlw	255
  6565  0319  0748               	addwf	___ftadd@exp2,w
  6566  031A  00C3               	movwf	??___ftadd
  6567  031B  3019               	movlw	25
  6568  031C  0243               	subwf	??___ftadd,w
  6569  031D  1C03               	skipc
  6570  031E  2B26               	goto	l1986
  6571  031F                     l1982:	
  6572  031F  0840               	movf	___ftadd@f2,w
  6573  0320  00BD               	movwf	?___ftadd
  6574  0321  0841               	movf	___ftadd@f2+1,w
  6575  0322  00BE               	movwf	?___ftadd+1
  6576  0323  0842               	movf	___ftadd@f2+2,w
  6577  0324  00BF               	movwf	?___ftadd+2
  6578  0325  0008               	return
  6579  0326                     l1986:	
  6580  0326  0848               	movf	___ftadd@exp2,w
  6581  0327  1903               	btfsc	3,2
  6582  0328  0008               	return
  6583  0329  0849               	movf	___ftadd@exp1,w
  6584  032A  0248               	subwf	___ftadd@exp2,w
  6585  032B  1803               	skipnc
  6586  032C  2B35               	goto	l1992
  6587  032D  0348               	decf	___ftadd@exp2,w
  6588  032E  3AFF               	xorlw	255
  6589  032F  0749               	addwf	___ftadd@exp1,w
  6590  0330  00C3               	movwf	??___ftadd
  6591  0331  3019               	movlw	25
  6592  0332  0243               	subwf	??___ftadd,w
  6593  0333  1803               	btfsc	3,0
  6594  0334  0008               	return
  6595  0335                     l1992:	
  6596  0335  3006               	movlw	6
  6597  0336  00C3               	movwf	??___ftadd
  6598  0337  0843               	movf	??___ftadd,w
  6599  0338  00C7               	movwf	___ftadd@sign
  6600  0339  1BBF               	btfsc	___ftadd@f1+2,7
  6601  033A  17C7               	bsf	___ftadd@sign,7
  6602  033B  1BC2               	btfsc	___ftadd@f2+2,7
  6603  033C  1747               	bsf	___ftadd@sign,6
  6604  033D  17BE               	bsf	___ftadd@f1+1,7
  6605  033E  30FF               	movlw	255
  6606  033F  05BD               	andwf	___ftadd@f1,f
  6607  0340  30FF               	movlw	255
  6608  0341  05BE               	andwf	___ftadd@f1+1,f
  6609  0342  3000               	movlw	0
  6610  0343  05BF               	andwf	___ftadd@f1+2,f
  6611  0344  17C1               	bsf	___ftadd@f2+1,7
  6612  0345  30FF               	movlw	255
  6613  0346  05C0               	andwf	___ftadd@f2,f
  6614  0347  30FF               	movlw	255
  6615  0348  05C1               	andwf	___ftadd@f2+1,f
  6616  0349  3000               	movlw	0
  6617  034A  05C2               	andwf	___ftadd@f2+2,f
  6618  034B  0848               	movf	___ftadd@exp2,w
  6619  034C  0249               	subwf	___ftadd@exp1,w
  6620  034D  1803               	skipnc
  6621  034E  2B75               	goto	l2014
  6622  034F                     l2004:	
  6623  034F  3001               	movlw	1
  6624  0350                     u2075:	
  6625  0350  1003               	clrc
  6626  0351  0DC0               	rlf	___ftadd@f2,f
  6627  0352  0DC1               	rlf	___ftadd@f2+1,f
  6628  0353  0DC2               	rlf	___ftadd@f2+2,f
  6629  0354  3EFF               	addlw	-1
  6630  0355  1D03               	skipz
  6631  0356  2B50               	goto	u2075
  6632  0357  3001               	movlw	1
  6633  0358  02C8               	subwf	___ftadd@exp2,f
  6634  0359  0848               	movf	___ftadd@exp2,w
  6635  035A  0649               	xorwf	___ftadd@exp1,w
  6636  035B  1903               	skipnz
  6637  035C  2B70               	goto	l2012
  6638  035D  3001               	movlw	1
  6639  035E  02C7               	subwf	___ftadd@sign,f
  6640  035F  0847               	movf	___ftadd@sign,w
  6641  0360  3907               	andlw	7
  6642  0361  1903               	btfsc	3,2
  6643  0362  2B70               	goto	l2012
  6644  0363  2B4F               	goto	l2004
  6645  0364                     l2010:	
  6646  0364  3001               	movlw	1
  6647  0365                     u2105:	
  6648  0365  1003               	clrc
  6649  0366  0CBF               	rrf	___ftadd@f1+2,f
  6650  0367  0CBE               	rrf	___ftadd@f1+1,f
  6651  0368  0CBD               	rrf	___ftadd@f1,f
  6652  0369  3EFF               	addlw	-1
  6653  036A  1D03               	skipz
  6654  036B  2B65               	goto	u2105
  6655  036C  3001               	movlw	1
  6656  036D  00C3               	movwf	??___ftadd
  6657  036E  0843               	movf	??___ftadd,w
  6658  036F  07C9               	addwf	___ftadd@exp1,f
  6659  0370                     l2012:	
  6660  0370  0849               	movf	___ftadd@exp1,w
  6661  0371  0648               	xorwf	___ftadd@exp2,w
  6662  0372  1903               	btfsc	3,2
  6663  0373  2B9E               	goto	l644
  6664  0374  2B64               	goto	l2010
  6665  0375                     l2014:	
  6666  0375  0849               	movf	___ftadd@exp1,w
  6667  0376  0248               	subwf	___ftadd@exp2,w
  6668  0377  1803               	skipnc
  6669  0378  2B9E               	goto	l644
  6670  0379                     l2016:	
  6671  0379  3001               	movlw	1
  6672  037A                     u2135:	
  6673  037A  1003               	clrc
  6674  037B  0DBD               	rlf	___ftadd@f1,f
  6675  037C  0DBE               	rlf	___ftadd@f1+1,f
  6676  037D  0DBF               	rlf	___ftadd@f1+2,f
  6677  037E  3EFF               	addlw	-1
  6678  037F  1D03               	skipz
  6679  0380  2B7A               	goto	u2135
  6680  0381  3001               	movlw	1
  6681  0382  02C9               	subwf	___ftadd@exp1,f
  6682  0383  0848               	movf	___ftadd@exp2,w
  6683  0384  0649               	xorwf	___ftadd@exp1,w
  6684  0385  1903               	skipnz
  6685  0386  2B9A               	goto	l2024
  6686  0387  3001               	movlw	1
  6687  0388  02C7               	subwf	___ftadd@sign,f
  6688  0389  0847               	movf	___ftadd@sign,w
  6689  038A  3907               	andlw	7
  6690  038B  1903               	btfsc	3,2
  6691  038C  2B9A               	goto	l2024
  6692  038D  2B79               	goto	l2016
  6693  038E                     l2022:	
  6694  038E  3001               	movlw	1
  6695  038F                     u2165:	
  6696  038F  1003               	clrc
  6697  0390  0CC2               	rrf	___ftadd@f2+2,f
  6698  0391  0CC1               	rrf	___ftadd@f2+1,f
  6699  0392  0CC0               	rrf	___ftadd@f2,f
  6700  0393  3EFF               	addlw	-1
  6701  0394  1D03               	skipz
  6702  0395  2B8F               	goto	u2165
  6703  0396  3001               	movlw	1
  6704  0397  00C3               	movwf	??___ftadd
  6705  0398  0843               	movf	??___ftadd,w
  6706  0399  07C8               	addwf	___ftadd@exp2,f
  6707  039A                     l2024:	
  6708  039A  0849               	movf	___ftadd@exp1,w
  6709  039B  0648               	xorwf	___ftadd@exp2,w
  6710  039C  1D03               	skipz
  6711  039D  2B8E               	goto	l2022
  6712  039E                     l644:	
  6713  039E  1FC7               	btfss	___ftadd@sign,7
  6714  039F  2BB0               	goto	l2028
  6715  03A0  30FF               	movlw	255
  6716  03A1  06BD               	xorwf	___ftadd@f1,f
  6717  03A2  30FF               	movlw	255
  6718  03A3  06BE               	xorwf	___ftadd@f1+1,f
  6719  03A4  30FF               	movlw	255
  6720  03A5  06BF               	xorwf	___ftadd@f1+2,f
  6721  03A6  3001               	movlw	1
  6722  03A7  07BD               	addwf	___ftadd@f1,f
  6723  03A8  3000               	movlw	0
  6724  03A9  1803               	skipnc
  6725  03AA  3001               	movlw	1
  6726  03AB  07BE               	addwf	___ftadd@f1+1,f
  6727  03AC  3000               	movlw	0
  6728  03AD  1803               	skipnc
  6729  03AE  3001               	movlw	1
  6730  03AF  07BF               	addwf	___ftadd@f1+2,f
  6731  03B0                     l2028:	
  6732  03B0  1F47               	btfss	___ftadd@sign,6
  6733  03B1  2BC2               	goto	l2032
  6734  03B2  30FF               	movlw	255
  6735  03B3  06C0               	xorwf	___ftadd@f2,f
  6736  03B4  30FF               	movlw	255
  6737  03B5  06C1               	xorwf	___ftadd@f2+1,f
  6738  03B6  30FF               	movlw	255
  6739  03B7  06C2               	xorwf	___ftadd@f2+2,f
  6740  03B8  3001               	movlw	1
  6741  03B9  07C0               	addwf	___ftadd@f2,f
  6742  03BA  3000               	movlw	0
  6743  03BB  1803               	skipnc
  6744  03BC  3001               	movlw	1
  6745  03BD  07C1               	addwf	___ftadd@f2+1,f
  6746  03BE  3000               	movlw	0
  6747  03BF  1803               	skipnc
  6748  03C0  3001               	movlw	1
  6749  03C1  07C2               	addwf	___ftadd@f2+2,f
  6750  03C2                     l2032:	
  6751  03C2  01C7               	clrf	___ftadd@sign
  6752  03C3  083D               	movf	___ftadd@f1,w
  6753  03C4  07C0               	addwf	___ftadd@f2,f
  6754  03C5  083E               	movf	___ftadd@f1+1,w
  6755  03C6  1103               	clrz
  6756  03C7  1803               	skipnc
  6757  03C8  0A3E               	incf	___ftadd@f1+1,w
  6758  03C9  1D03               	btfss	3,2
  6759  03CA  07C1               	addwf	___ftadd@f2+1,f
  6760  03CB  083F               	movf	___ftadd@f1+2,w
  6761  03CC  1103               	clrz
  6762  03CD  1803               	skipnc
  6763  03CE  0A3F               	incf	___ftadd@f1+2,w
  6764  03CF  1D03               	btfss	3,2
  6765  03D0  07C2               	addwf	___ftadd@f2+2,f
  6766  03D1  1FC2               	btfss	___ftadd@f2+2,7
  6767  03D2  2BE5               	goto	l2042
  6768  03D3  30FF               	movlw	255
  6769  03D4  06C0               	xorwf	___ftadd@f2,f
  6770  03D5  30FF               	movlw	255
  6771  03D6  06C1               	xorwf	___ftadd@f2+1,f
  6772  03D7  30FF               	movlw	255
  6773  03D8  06C2               	xorwf	___ftadd@f2+2,f
  6774  03D9  3001               	movlw	1
  6775  03DA  07C0               	addwf	___ftadd@f2,f
  6776  03DB  3000               	movlw	0
  6777  03DC  1803               	skipnc
  6778  03DD  3001               	movlw	1
  6779  03DE  07C1               	addwf	___ftadd@f2+1,f
  6780  03DF  3000               	movlw	0
  6781  03E0  1803               	skipnc
  6782  03E1  3001               	movlw	1
  6783  03E2  07C2               	addwf	___ftadd@f2+2,f
  6784  03E3  01C7               	clrf	___ftadd@sign
  6785  03E4  0AC7               	incf	___ftadd@sign,f
  6786  03E5                     l2042:	
  6787  03E5  0840               	movf	___ftadd@f2,w
  6788  03E6  00F0               	movwf	___ftpack@arg
  6789  03E7  0841               	movf	___ftadd@f2+1,w
  6790  03E8  00F1               	movwf	___ftpack@arg+1
  6791  03E9  0842               	movf	___ftadd@f2+2,w
  6792  03EA  00F2               	movwf	___ftpack@arg+2
  6793  03EB  0849               	movf	___ftadd@exp1,w
  6794  03EC  00C3               	movwf	??___ftadd
  6795  03ED  0843               	movf	??___ftadd,w
  6796  03EE  00F3               	movwf	___ftpack@exp
  6797  03EF  0847               	movf	___ftadd@sign,w
  6798  03F0  00C4               	movwf	??___ftadd+1
  6799  03F1  0844               	movf	??___ftadd+1,w
  6800  03F2  00F4               	movwf	___ftpack@sign
  6801  03F3  120A  158A  269D   	fcall	___ftpack
  6802  03F6  0870               	movf	?___ftpack,w
  6803  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  6804  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  6805  03F9  00BD               	movwf	?___ftadd
  6806  03FA  0871               	movf	?___ftpack+1,w
  6807  03FB  00BE               	movwf	?___ftadd+1
  6808  03FC  0872               	movf	?___ftpack+2,w
  6809  03FD  00BF               	movwf	?___ftadd+2
  6810  03FE  0008               	return
  6811  03FF                     __end_of___ftadd:	
  6812                           
  6813                           	psect	text35
  6814  0E9D                     __ptext35:	
  6815 ;; *************** function ___ftpack *****************
  6816 ;; Defined at:
  6817 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
  6818 ;; Parameters:    Size  Location     Type
  6819 ;;  arg             3    0[COMMON] unsigned um
  6820 ;;  exp             1    3[COMMON] unsigned char 
  6821 ;;  sign            1    4[COMMON] unsigned char 
  6822 ;; Auto vars:     Size  Location     Type
  6823 ;;		None
  6824 ;; Return value:  Size  Location     Type
  6825 ;;                  3    0[COMMON] float 
  6826 ;; Registers used:
  6827 ;;		wreg, status,2, status,0
  6828 ;; Tracked objects:
  6829 ;;		On entry : 0/0
  6830 ;;		On exit  : 0/0
  6831 ;;		Unchanged: 0/0
  6832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6833 ;;      Params:         5       0       0       0       0
  6834 ;;      Locals:         0       0       0       0       0
  6835 ;;      Temps:          3       0       0       0       0
  6836 ;;      Totals:         8       0       0       0       0
  6837 ;;Total ram usage:        8 bytes
  6838 ;; Hardware stack levels used:    1
  6839 ;; This function calls:
  6840 ;;		Nothing
  6841 ;; This function is called by:
  6842 ;;		___ftadd
  6843 ;;		___ftdiv
  6844 ;;		___ftmul
  6845 ;;		___lwtoft
  6846 ;; This function uses a non-reentrant model
  6847 ;;
  6848                           
  6849                           
  6850                           ;psect for function ___ftpack
  6851  0E9D                     ___ftpack:	
  6852                           
  6853                           ;incstack = 0
  6854                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6855  0E9D  0873               	movf	___ftpack@exp,w
  6856  0E9E  1903               	btfsc	3,2
  6857  0E9F  2EA5               	goto	l1716
  6858  0EA0  0872               	movf	___ftpack@arg+2,w
  6859  0EA1  0471               	iorwf	___ftpack@arg+1,w
  6860  0EA2  0470               	iorwf	___ftpack@arg,w
  6861  0EA3  1D03               	skipz
  6862  0EA4  2EB8               	goto	l1722
  6863  0EA5                     l1716:	
  6864  0EA5  3000               	movlw	0
  6865  0EA6  00F0               	movwf	?___ftpack
  6866  0EA7  3000               	movlw	0
  6867  0EA8  00F1               	movwf	?___ftpack+1
  6868  0EA9  3000               	movlw	0
  6869  0EAA  00F2               	movwf	?___ftpack+2
  6870  0EAB  0008               	return
  6871  0EAC                     l1720:	
  6872  0EAC  3001               	movlw	1
  6873  0EAD  00F5               	movwf	??___ftpack
  6874  0EAE  0875               	movf	??___ftpack,w
  6875  0EAF  07F3               	addwf	___ftpack@exp,f
  6876  0EB0  3001               	movlw	1
  6877  0EB1                     u1465:	
  6878  0EB1  1003               	clrc
  6879  0EB2  0CF2               	rrf	___ftpack@arg+2,f
  6880  0EB3  0CF1               	rrf	___ftpack@arg+1,f
  6881  0EB4  0CF0               	rrf	___ftpack@arg,f
  6882  0EB5  3EFF               	addlw	-1
  6883  0EB6  1D03               	skipz
  6884  0EB7  2EB1               	goto	u1465
  6885  0EB8                     l1722:	
  6886  0EB8  30FE               	movlw	254
  6887  0EB9  0572               	andwf	___ftpack@arg+2,w
  6888  0EBA  1903               	btfsc	3,2
  6889  0EBB  2ED3               	goto	l613
  6890  0EBC  2EAC               	goto	l1720
  6891  0EBD                     l1724:	
  6892  0EBD  3001               	movlw	1
  6893  0EBE  00F5               	movwf	??___ftpack
  6894  0EBF  0875               	movf	??___ftpack,w
  6895  0EC0  07F3               	addwf	___ftpack@exp,f
  6896  0EC1  3001               	movlw	1
  6897  0EC2  07F0               	addwf	___ftpack@arg,f
  6898  0EC3  3000               	movlw	0
  6899  0EC4  1803               	skipnc
  6900  0EC5  3001               	movlw	1
  6901  0EC6  07F1               	addwf	___ftpack@arg+1,f
  6902  0EC7  3000               	movlw	0
  6903  0EC8  1803               	skipnc
  6904  0EC9  3001               	movlw	1
  6905  0ECA  07F2               	addwf	___ftpack@arg+2,f
  6906  0ECB  3001               	movlw	1
  6907  0ECC                     u1485:	
  6908  0ECC  1003               	clrc
  6909  0ECD  0CF2               	rrf	___ftpack@arg+2,f
  6910  0ECE  0CF1               	rrf	___ftpack@arg+1,f
  6911  0ECF  0CF0               	rrf	___ftpack@arg,f
  6912  0ED0  3EFF               	addlw	-1
  6913  0ED1  1D03               	skipz
  6914  0ED2  2ECC               	goto	u1485
  6915  0ED3                     l613:	
  6916  0ED3  30FF               	movlw	255
  6917  0ED4  0572               	andwf	___ftpack@arg+2,w
  6918  0ED5  1903               	btfsc	3,2
  6919  0ED6  2EE2               	goto	l1732
  6920  0ED7  2EBD               	goto	l1724
  6921  0ED8                     l1730:	
  6922  0ED8  3001               	movlw	1
  6923  0ED9  02F3               	subwf	___ftpack@exp,f
  6924  0EDA  3001               	movlw	1
  6925  0EDB                     u1505:	
  6926  0EDB  1003               	clrc
  6927  0EDC  0DF0               	rlf	___ftpack@arg,f
  6928  0EDD  0DF1               	rlf	___ftpack@arg+1,f
  6929  0EDE  0DF2               	rlf	___ftpack@arg+2,f
  6930  0EDF  3EFF               	addlw	-1
  6931  0EE0  1D03               	skipz
  6932  0EE1  2EDB               	goto	u1505
  6933  0EE2                     l1732:	
  6934  0EE2  1BF1               	btfsc	___ftpack@arg+1,7
  6935  0EE3  2EE8               	goto	l620
  6936  0EE4  3002               	movlw	2
  6937  0EE5  0273               	subwf	___ftpack@exp,w
  6938  0EE6  1803               	skipnc
  6939  0EE7  2ED8               	goto	l1730
  6940  0EE8                     l620:	
  6941  0EE8  1873               	btfsc	___ftpack@exp,0
  6942  0EE9  2EF0               	goto	l621
  6943  0EEA  30FF               	movlw	255
  6944  0EEB  05F0               	andwf	___ftpack@arg,f
  6945  0EEC  307F               	movlw	127
  6946  0EED  05F1               	andwf	___ftpack@arg+1,f
  6947  0EEE  30FF               	movlw	255
  6948  0EEF  05F2               	andwf	___ftpack@arg+2,f
  6949  0EF0                     l621:	
  6950  0EF0  1003               	clrc
  6951  0EF1  0CF3               	rrf	___ftpack@exp,f
  6952  0EF2  0873               	movf	___ftpack@exp,w
  6953  0EF3  00F5               	movwf	??___ftpack
  6954  0EF4  01F6               	clrf	??___ftpack+1
  6955  0EF5  01F7               	clrf	??___ftpack+2
  6956  0EF6  3010               	movlw	16
  6957  0EF7                     u1545:	
  6958  0EF7  1003               	clrc
  6959  0EF8  0DF5               	rlf	??___ftpack,f
  6960  0EF9  0DF6               	rlf	??___ftpack+1,f
  6961  0EFA  0DF7               	rlf	??___ftpack+2,f
  6962  0EFB  3EFF               	addlw	-1
  6963  0EFC  1D03               	skipz
  6964  0EFD  2EF7               	goto	u1545
  6965  0EFE  0875               	movf	??___ftpack,w
  6966  0EFF  04F0               	iorwf	___ftpack@arg,f
  6967  0F00  0876               	movf	??___ftpack+1,w
  6968  0F01  04F1               	iorwf	___ftpack@arg+1,f
  6969  0F02  0877               	movf	??___ftpack+2,w
  6970  0F03  04F2               	iorwf	___ftpack@arg+2,f
  6971  0F04  0874               	movf	___ftpack@sign,w
  6972  0F05  1903               	btfsc	3,2
  6973  0F06  0008               	return
  6974  0F07  17F2               	bsf	___ftpack@arg+2,7
  6975  0F08  0008               	return
  6976  0F09                     __end_of___ftpack:	
  6977                           
  6978                           	psect	text36
  6979  0AEB                     __ptext36:	
  6980 ;; *************** function _extract_receive_packet *****************
  6981 ;; Defined at:
  6982 ;;		line 241 in file "protocol.c"
  6983 ;; Parameters:    Size  Location     Type
  6984 ;;  p_data_type_    1    wreg     PTR unsigned char 
  6985 ;;		 -> main@r_data_type(1), 
  6986 ;;  p_data_buf      1    2[COMMON] PTR unsigned char 
  6987 ;;		 -> main@r_data(30), 
  6988 ;;  p_data_len_b    1    3[COMMON] PTR unsigned char 
  6989 ;;		 -> main@r_data_len(1), 
  6990 ;; Auto vars:     Size  Location     Type
  6991 ;;  p_data_type_    1    5[COMMON] PTR unsigned char 
  6992 ;;		 -> main@r_data_type(1), 
  6993 ;;  i               1    6[COMMON] unsigned char 
  6994 ;; Return value:  Size  Location     Type
  6995 ;;		None               void
  6996 ;; Registers used:
  6997 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6998 ;; Tracked objects:
  6999 ;;		On entry : 0/0
  7000 ;;		On exit  : 0/0
  7001 ;;		Unchanged: 0/0
  7002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7003 ;;      Params:         2       0       0       0       0
  7004 ;;      Locals:         2       0       0       0       0
  7005 ;;      Temps:          1       0       0       0       0
  7006 ;;      Totals:         5       0       0       0       0
  7007 ;;Total ram usage:        5 bytes
  7008 ;; Hardware stack levels used:    1
  7009 ;; Hardware stack levels required when called:    1
  7010 ;; This function calls:
  7011 ;;		_rx_packet_clear
  7012 ;; This function is called by:
  7013 ;;		_main
  7014 ;; This function uses a non-reentrant model
  7015 ;;
  7016                           
  7017                           
  7018                           ;psect for function _extract_receive_packet
  7019  0AEB                     _extract_receive_packet:	
  7020                           
  7021                           ;incstack = 0
  7022                           ; Regs used in _extract_receive_packet: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7023                           ;extract_receive_packet@p_data_type_buf stored from wreg
  7024  0AEB  00F5               	movwf	extract_receive_packet@p_data_type_buf
  7025                           
  7026                           ;protocol.c: 243: uint8_t i;
  7027                           ;protocol.c: 246: *p_data_type_buf = rx_packet.data_type;
  7028  0AEC  1683               	bsf	3,5	;RP0=1, select bank3
  7029  0AED  1703               	bsf	3,6	;RP1=1, select bank3
  7030  0AEE  0831               	movf	_rx_packet^(0+384),w
  7031  0AEF  00F4               	movwf	??_extract_receive_packet
  7032  0AF0  0875               	movf	extract_receive_packet@p_data_type_buf,w
  7033  0AF1  0084               	movwf	4
  7034  0AF2  0874               	movf	??_extract_receive_packet,w
  7035  0AF3  1383               	bcf	3,7	;select IRP bank0
  7036  0AF4  0080               	movwf	0
  7037                           
  7038                           ;protocol.c: 249: for(i = 0; i < rx_packet.payload_len; i++)
  7039  0AF5  01F6               	clrf	extract_receive_packet@i
  7040  0AF6                     l2412:	
  7041  0AF6  0832               	movf	(_rx_packet^(0+384)+1),w
  7042  0AF7  0276               	subwf	extract_receive_packet@i,w
  7043  0AF8  1803               	btfsc	3,0
  7044  0AF9  2B0E               	goto	l2414
  7045                           
  7046                           ;protocol.c: 250: {
  7047                           ;protocol.c: 251: *p_data_buf++ = rx_packet.payload[i];
  7048  0AFA  0876               	movf	extract_receive_packet@i,w
  7049  0AFB  3EB3               	addlw	(low ((_rx_packet| (0+256)+2)))& (0+255)
  7050  0AFC  0084               	movwf	4
  7051  0AFD  1783               	bsf	3,7	;select IRP bank3
  7052  0AFE  0800               	movf	0,w
  7053  0AFF  00F4               	movwf	??_extract_receive_packet
  7054  0B00  0872               	movf	extract_receive_packet@p_data_buf,w
  7055  0B01  0084               	movwf	4
  7056  0B02  0874               	movf	??_extract_receive_packet,w
  7057  0B03  1383               	bcf	3,7	;select IRP bank0
  7058  0B04  0080               	movwf	0
  7059  0B05  3001               	movlw	1
  7060  0B06  00F4               	movwf	??_extract_receive_packet
  7061  0B07  0874               	movf	??_extract_receive_packet,w
  7062  0B08  07F2               	addwf	extract_receive_packet@p_data_buf,f
  7063  0B09  3001               	movlw	1
  7064  0B0A  00F4               	movwf	??_extract_receive_packet
  7065  0B0B  0874               	movf	??_extract_receive_packet,w
  7066  0B0C  07F6               	addwf	extract_receive_packet@i,f
  7067  0B0D  2AF6               	goto	l2412
  7068  0B0E                     l2414:	
  7069                           
  7070                           ;protocol.c: 252: }
  7071                           ;protocol.c: 255: *p_data_len_buf = rx_packet.payload_len;
  7072  0B0E  0832               	movf	(_rx_packet^(0+384)+1),w
  7073  0B0F  00F4               	movwf	??_extract_receive_packet
  7074  0B10  0873               	movf	extract_receive_packet@p_data_len_buf,w
  7075  0B11  0084               	movwf	4
  7076  0B12  0874               	movf	??_extract_receive_packet,w
  7077  0B13  0080               	movwf	0
  7078                           
  7079                           ;protocol.c: 258: rx_packet_clear();
  7080  0B14  120A  158A  21E1   	fcall	_rx_packet_clear
  7081                           
  7082                           ;protocol.c: 261: rx_packet_status = FALSE;
  7083  0B17  1683               	bsf	3,5	;RP0=1, select bank1
  7084  0B18  1303               	bcf	3,6	;RP1=0, select bank1
  7085  0B19  01E9               	clrf	_rx_packet_status^(0+128)
  7086  0B1A  0008               	return
  7087  0B1B                     __end_of_extract_receive_packet:	
  7088                           
  7089                           	psect	text37
  7090  09E1                     __ptext37:	
  7091 ;; *************** function _rx_packet_clear *****************
  7092 ;; Defined at:
  7093 ;;		line 306 in file "protocol.c"
  7094 ;; Parameters:    Size  Location     Type
  7095 ;;		None
  7096 ;; Auto vars:     Size  Location     Type
  7097 ;;  i               1    1[COMMON] unsigned char 
  7098 ;; Return value:  Size  Location     Type
  7099 ;;		None               void
  7100 ;; Registers used:
  7101 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7102 ;; Tracked objects:
  7103 ;;		On entry : 0/0
  7104 ;;		On exit  : 0/0
  7105 ;;		Unchanged: 0/0
  7106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7107 ;;      Params:         0       0       0       0       0
  7108 ;;      Locals:         1       0       0       0       0
  7109 ;;      Temps:          1       0       0       0       0
  7110 ;;      Totals:         2       0       0       0       0
  7111 ;;Total ram usage:        2 bytes
  7112 ;; Hardware stack levels used:    1
  7113 ;; This function calls:
  7114 ;;		Nothing
  7115 ;; This function is called by:
  7116 ;;		_extract_receive_packet
  7117 ;; This function uses a non-reentrant model
  7118 ;;
  7119                           
  7120                           
  7121                           ;psect for function _rx_packet_clear
  7122  09E1                     _rx_packet_clear:	
  7123                           
  7124                           ;protocol.c: 308: uint8_t i;
  7125                           ;protocol.c: 311: rx_packet.data_type = 0;
  7126                           
  7127                           ;incstack = 0
  7128                           ; Regs used in _rx_packet_clear: [wreg-fsr0h+status,2+status,0]
  7129  09E1  1683               	bsf	3,5	;RP0=1, select bank3
  7130  09E2  1703               	bsf	3,6	;RP1=1, select bank3
  7131  09E3  01B1               	clrf	_rx_packet^(0+384)
  7132                           
  7133                           ;protocol.c: 314: rx_packet.payload_len = 0;
  7134  09E4  01B2               	clrf	(_rx_packet^(0+384)+1)
  7135                           
  7136                           ;protocol.c: 317: for(i = 0; i < 30; i++)
  7137  09E5  01F1               	clrf	rx_packet_clear@i
  7138  09E6  301E               	movlw	30
  7139  09E7  0271               	subwf	rx_packet_clear@i,w
  7140  09E8  1803               	btfsc	3,0
  7141  09E9  29F7               	goto	l2190
  7142  09EA                     l2184:	
  7143                           
  7144                           ;protocol.c: 318: {
  7145                           ;protocol.c: 319: rx_packet.payload[i] = 0;
  7146  09EA  0871               	movf	rx_packet_clear@i,w
  7147  09EB  3EB3               	addlw	(low ((_rx_packet| (0+256)+2)))& (0+255)
  7148  09EC  0084               	movwf	4
  7149  09ED  1783               	bsf	3,7	;select IRP bank3
  7150  09EE  0180               	clrf	0
  7151  09EF  3001               	movlw	1
  7152  09F0  00F0               	movwf	??_rx_packet_clear
  7153  09F1  0870               	movf	??_rx_packet_clear,w
  7154  09F2  07F1               	addwf	rx_packet_clear@i,f
  7155  09F3  301E               	movlw	30
  7156  09F4  0271               	subwf	rx_packet_clear@i,w
  7157  09F5  1C03               	skipc
  7158  09F6  29EA               	goto	l2184
  7159  09F7                     l2190:	
  7160                           
  7161                           ;protocol.c: 320: }
  7162                           ;protocol.c: 323: rx_packet.data_end_command = 0;
  7163  09F7  1683               	bsf	3,5	;RP0=1, select bank3
  7164  09F8  1703               	bsf	3,6	;RP1=1, select bank3
  7165  09F9  01D1               	clrf	(_rx_packet^(0+384)+32)
  7166  09FA  0008               	return
  7167  09FB                     __end_of_rx_packet_clear:	
  7168                           
  7169                           	psect	text38
  7170  0995                     __ptext38:	
  7171 ;; *************** function _ad_con_init *****************
  7172 ;; Defined at:
  7173 ;;		line 51 in file "AD_value.c"
  7174 ;; Parameters:    Size  Location     Type
  7175 ;;		None
  7176 ;; Auto vars:     Size  Location     Type
  7177 ;;		None
  7178 ;; Return value:  Size  Location     Type
  7179 ;;                  2    6[None  ] int 
  7180 ;; Registers used:
  7181 ;;		wreg
  7182 ;; Tracked objects:
  7183 ;;		On entry : 0/0
  7184 ;;		On exit  : 0/0
  7185 ;;		Unchanged: 0/0
  7186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7187 ;;      Params:         0       0       0       0       0
  7188 ;;      Locals:         0       0       0       0       0
  7189 ;;      Temps:          0       0       0       0       0
  7190 ;;      Totals:         0       0       0       0       0
  7191 ;;Total ram usage:        0 bytes
  7192 ;; Hardware stack levels used:    1
  7193 ;; This function calls:
  7194 ;;		Nothing
  7195 ;; This function is called by:
  7196 ;;		_main
  7197 ;; This function uses a non-reentrant model
  7198 ;;
  7199                           
  7200                           
  7201                           ;psect for function _ad_con_init
  7202  0995                     _ad_con_init:	
  7203                           
  7204                           ;AD_value.c: 54: PORTAbits.RA0 = 0;
  7205                           
  7206                           ;incstack = 0
  7207                           ; Regs used in _ad_con_init: [wreg]
  7208  0995  1283               	bcf	3,5	;RP0=0, select bank0
  7209  0996  1303               	bcf	3,6	;RP1=0, select bank0
  7210  0997  1005               	bcf	5,0	;volatile
  7211                           
  7212                           ;AD_value.c: 55: PORTAbits.RA3 = 0;
  7213  0998  1185               	bcf	5,3	;volatile
  7214                           
  7215                           ;AD_value.c: 56: TRISAbits.TRISA0 = 1;
  7216  0999  1683               	bsf	3,5	;RP0=1, select bank1
  7217  099A  1303               	bcf	3,6	;RP1=0, select bank1
  7218  099B  1405               	bsf	5,0	;volatile
  7219                           
  7220                           ;AD_value.c: 57: TRISAbits.TRISA3 = 1;
  7221  099C  1585               	bsf	5,3	;volatile
  7222                           
  7223                           ;AD_value.c: 58: ADCON1 = 0b00000001;
  7224  099D  3001               	movlw	1
  7225  099E  009F               	movwf	31	;volatile
  7226  099F  0008               	return
  7227  09A0                     __end_of_ad_con_init:	
  7228                           
  7229                           	psect	text39
  7230  004C                     __ptext39:	
  7231 ;; *************** function ___fttol *****************
  7232 ;; Defined at:
  7233 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fttol.c"
  7234 ;; Parameters:    Size  Location     Type
  7235 ;;  f1              3    0[COMMON] float 
  7236 ;; Auto vars:     Size  Location     Type
  7237 ;;  lval            4    9[COMMON] unsigned long 
  7238 ;;  exp1            1   13[COMMON] unsigned char 
  7239 ;;  sign1           1    8[COMMON] unsigned char 
  7240 ;; Return value:  Size  Location     Type
  7241 ;;                  4    0[COMMON] long 
  7242 ;; Registers used:
  7243 ;;		wreg, status,2, status,0
  7244 ;; Tracked objects:
  7245 ;;		On entry : 0/0
  7246 ;;		On exit  : 0/0
  7247 ;;		Unchanged: 0/0
  7248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7249 ;;      Params:         4       0       0       0       0
  7250 ;;      Locals:         6       0       0       0       0
  7251 ;;      Temps:          4       0       0       0       0
  7252 ;;      Totals:        14       0       0       0       0
  7253 ;;Total ram usage:       14 bytes
  7254 ;; Hardware stack levels used:    1
  7255 ;; This function calls:
  7256 ;;		Nothing
  7257 ;; This function is called by:
  7258 ;;		_main
  7259 ;; This function uses a non-reentrant model
  7260 ;;
  7261                           
  7262                           
  7263                           ;psect for function ___fttol
  7264  004C                     ___fttol:	
  7265                           
  7266                           ;incstack = 0
  7267                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  7268  004C  0870               	movf	___fttol@f1,w
  7269  004D  00F4               	movwf	??___fttol
  7270  004E  0871               	movf	___fttol@f1+1,w
  7271  004F  00F5               	movwf	??___fttol+1
  7272  0050  0872               	movf	___fttol@f1+2,w
  7273  0051  00F6               	movwf	??___fttol+2
  7274  0052  1003               	clrc
  7275  0053  0D75               	rlf	??___fttol+1,w
  7276  0054  0D76               	rlf	??___fttol+2,w
  7277  0055  00F7               	movwf	??___fttol+3
  7278  0056  0877               	movf	??___fttol+3,w
  7279  0057  00FD               	movwf	___fttol@exp1
  7280  0058  087D               	movf	___fttol@exp1,w
  7281  0059  1D03               	btfss	3,2
  7282  005A  2864               	goto	l2426
  7283  005B  3000               	movlw	0
  7284  005C  00F3               	movwf	?___fttol+3
  7285  005D  3000               	movlw	0
  7286  005E  00F2               	movwf	?___fttol+2
  7287  005F  3000               	movlw	0
  7288  0060  00F1               	movwf	?___fttol+1
  7289  0061  3000               	movlw	0
  7290  0062  00F0               	movwf	?___fttol
  7291  0063  0008               	return
  7292  0064                     l2426:	
  7293  0064  0870               	movf	___fttol@f1,w
  7294  0065  00F4               	movwf	??___fttol
  7295  0066  0871               	movf	___fttol@f1+1,w
  7296  0067  00F5               	movwf	??___fttol+1
  7297  0068  0872               	movf	___fttol@f1+2,w
  7298  0069  00F6               	movwf	??___fttol+2
  7299  006A  3017               	movlw	23
  7300  006B                     u2635:	
  7301  006B  1003               	clrc
  7302  006C  0CF6               	rrf	??___fttol+2,f
  7303  006D  0CF5               	rrf	??___fttol+1,f
  7304  006E  0CF4               	rrf	??___fttol,f
  7305  006F  3EFF               	addlw	-1
  7306  0070  1D03               	skipz
  7307  0071  286B               	goto	u2635
  7308  0072  0874               	movf	??___fttol,w
  7309  0073  00F7               	movwf	??___fttol+3
  7310  0074  0877               	movf	??___fttol+3,w
  7311  0075  00F8               	movwf	___fttol@sign1
  7312  0076  17F1               	bsf	___fttol@f1+1,7
  7313  0077  30FF               	movlw	255
  7314  0078  05F0               	andwf	___fttol@f1,f
  7315  0079  30FF               	movlw	255
  7316  007A  05F1               	andwf	___fttol@f1+1,f
  7317  007B  3000               	movlw	0
  7318  007C  05F2               	andwf	___fttol@f1+2,f
  7319  007D  0870               	movf	___fttol@f1,w
  7320  007E  00F9               	movwf	___fttol@lval
  7321  007F  0871               	movf	___fttol@f1+1,w
  7322  0080  00FA               	movwf	___fttol@lval+1
  7323  0081  0872               	movf	___fttol@f1+2,w
  7324  0082  00FB               	movwf	___fttol@lval+2
  7325  0083  01FC               	clrf	___fttol@lval+3
  7326  0084  308E               	movlw	142
  7327  0085  02FD               	subwf	___fttol@exp1,f
  7328  0086  1FFD               	btfss	___fttol@exp1,7
  7329  0087  28A6               	goto	l2446
  7330  0088  087D               	movf	___fttol@exp1,w
  7331  0089  3A80               	xorlw	128
  7332  008A  3E8F               	addlw	143
  7333  008B  1803               	skipnc
  7334  008C  2896               	goto	l2444
  7335  008D  3000               	movlw	0
  7336  008E  00F3               	movwf	?___fttol+3
  7337  008F  3000               	movlw	0
  7338  0090  00F2               	movwf	?___fttol+2
  7339  0091  3000               	movlw	0
  7340  0092  00F1               	movwf	?___fttol+1
  7341  0093  3000               	movlw	0
  7342  0094  00F0               	movwf	?___fttol
  7343  0095  0008               	return
  7344  0096                     l2444:	
  7345  0096  3001               	movlw	1
  7346  0097                     u2665:	
  7347  0097  1003               	clrc
  7348  0098  0CFC               	rrf	___fttol@lval+3,f
  7349  0099  0CFB               	rrf	___fttol@lval+2,f
  7350  009A  0CFA               	rrf	___fttol@lval+1,f
  7351  009B  0CF9               	rrf	___fttol@lval,f
  7352  009C  3EFF               	addlw	-1
  7353  009D  1D03               	skipz
  7354  009E  2897               	goto	u2665
  7355  009F  3001               	movlw	1
  7356  00A0  00F4               	movwf	??___fttol
  7357  00A1  0874               	movf	??___fttol,w
  7358  00A2  07FD               	addwf	___fttol@exp1,f
  7359  00A3  1903               	btfsc	3,2
  7360  00A4  28C1               	goto	l2454
  7361  00A5  2896               	goto	l2444
  7362  00A6                     l2446:	
  7363  00A6  3018               	movlw	24
  7364  00A7  027D               	subwf	___fttol@exp1,w
  7365  00A8  1C03               	skipc
  7366  00A9  28BE               	goto	l704
  7367  00AA  3000               	movlw	0
  7368  00AB  00F3               	movwf	?___fttol+3
  7369  00AC  3000               	movlw	0
  7370  00AD  00F2               	movwf	?___fttol+2
  7371  00AE  3000               	movlw	0
  7372  00AF  00F1               	movwf	?___fttol+1
  7373  00B0  3000               	movlw	0
  7374  00B1  00F0               	movwf	?___fttol
  7375  00B2  0008               	return
  7376  00B3                     l2452:	
  7377  00B3  3001               	movlw	1
  7378  00B4  00F4               	movwf	??___fttol
  7379  00B5                     u2695:	
  7380  00B5  1003               	clrc
  7381  00B6  0DF9               	rlf	___fttol@lval,f
  7382  00B7  0DFA               	rlf	___fttol@lval+1,f
  7383  00B8  0DFB               	rlf	___fttol@lval+2,f
  7384  00B9  0DFC               	rlf	___fttol@lval+3,f
  7385  00BA  0BF4               	decfsz	??___fttol,f
  7386  00BB  28B5               	goto	u2695
  7387  00BC  3001               	movlw	1
  7388  00BD  02FD               	subwf	___fttol@exp1,f
  7389  00BE                     l704:	
  7390  00BE  087D               	movf	___fttol@exp1,w
  7391  00BF  1D03               	btfss	3,2
  7392  00C0  28B3               	goto	l2452
  7393  00C1                     l2454:	
  7394  00C1  0878               	movf	___fttol@sign1,w
  7395  00C2  1903               	btfsc	3,2
  7396  00C3  28CF               	goto	l2458
  7397  00C4  09F9               	comf	___fttol@lval,f
  7398  00C5  09FA               	comf	___fttol@lval+1,f
  7399  00C6  09FB               	comf	___fttol@lval+2,f
  7400  00C7  09FC               	comf	___fttol@lval+3,f
  7401  00C8  0AF9               	incf	___fttol@lval,f
  7402  00C9  1903               	skipnz
  7403  00CA  0AFA               	incf	___fttol@lval+1,f
  7404  00CB  1903               	skipnz
  7405  00CC  0AFB               	incf	___fttol@lval+2,f
  7406  00CD  1903               	skipnz
  7407  00CE  0AFC               	incf	___fttol@lval+3,f
  7408  00CF                     l2458:	
  7409  00CF  087C               	movf	___fttol@lval+3,w
  7410  00D0  00F3               	movwf	?___fttol+3
  7411  00D1  087B               	movf	___fttol@lval+2,w
  7412  00D2  00F2               	movwf	?___fttol+2
  7413  00D3  087A               	movf	___fttol@lval+1,w
  7414  00D4  00F1               	movwf	?___fttol+1
  7415  00D5  0879               	movf	___fttol@lval,w
  7416  00D6  00F0               	movwf	?___fttol
  7417  00D7  0008               	return
  7418  00D8                     __end_of___fttol:	
  7419  007E                     btemp	set	126	;btemp
  7420  007E                     wtemp	set	126
  7421  007E                     wtemp0	set	126
  7422  0080                     wtemp1	set	128
  7423  0082                     wtemp2	set	130
  7424  0084                     wtemp3	set	132
  7425  0086                     wtemp4	set	134
  7426  0088                     wtemp5	set	136
  7427  007F                     wtemp6	set	127
  7428  007E                     ttemp	set	126
  7429  007E                     ttemp0	set	126
  7430  0081                     ttemp1	set	129
  7431  0084                     ttemp2	set	132
  7432  0087                     ttemp3	set	135
  7433  007F                     ttemp4	set	127
  7434  007E                     ltemp	set	126
  7435  007E                     ltemp0	set	126
  7436  0082                     ltemp1	set	130
  7437  0086                     ltemp2	set	134
  7438  0080                     ltemp3	set	128


Data Sizes:
    Strings     24
    Constant    33
    Data        0
    BSS         67
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     75      75
    BANK1            80     73      74
    BANK3            96      0      66
    BANK2            96      0       0

Pointer List with Targets:

    bit_shift@p_adres	PTR struct . size(1) Largest target is 2
		 -> get_adcon@my_adres(BANK0[2]), 

    bit_shift@p_ad_value	PTR unsigned int  size(1) Largest target is 2
		 -> get_adcon@ad_value(BANK0[2]), 

    convert@process_1@p_flag	PTR unsigned char  size(1) Largest target is 1
		 -> number_to_string_char@flag(BANK0[1]), 

    convert@process_1@p_buf	PTR unsigned char  size(1) Largest target is 5
		 -> main@temp_buf_c(BANK1[5]), 

    convert@process_10@p_flag	PTR unsigned char  size(1) Largest target is 1
		 -> number_to_string_char@flag(BANK0[1]), 

    convert@process_10@p_buf	PTR unsigned char  size(1) Largest target is 5
		 -> main@temp_buf_c(BANK1[5]), 

    convert@process_100@p_flag	PTR unsigned char  size(1) Largest target is 1
		 -> number_to_string_char@flag(BANK0[1]), 

    convert@process_100@p_buf	PTR unsigned char  size(1) Largest target is 5
		 -> main@temp_buf_c(BANK1[5]), 

    number_to_string_char@buf	PTR unsigned char  size(1) Largest target is 5
		 -> main@temp_buf_c(BANK1[5]), 

    put_string@str	PTR unsigned char  size(1) Largest target is 24
		 -> STR_2(CODE[3]), STR_1(CODE[24]), 

    spi_master_receive@p_get	PTR unsigned char  size(2) Largest target is 33
		 -> flag_check@flag(COMMON[1]), rx_packet.payload(BANK3[30]), rx_packet(BANK3[33]), 

    double_to_byte_array@p_data_array	PTR unsigned char  size(1) Largest target is 5
		 -> double_data_set@buf(BANK0[5]), 

    double_to_byte_array@p_data	PTR  size(1) Largest target is 1
		 -> main@cmd(BANK1[1]), 

    uint16_to_byte_array@p_data	PTR unsigned int  size(1) Largest target is 1
		 -> main@cmd(BANK1[1]), 

    uint16_to_byte_array@p_data_array	PTR unsigned char  size(1) Largest target is 3
		 -> uint16_data_set@buf(COMMON[3]), 

    double_data_set@p_data	PTR  size(1) Largest target is 1
		 -> main@cmd(BANK1[1]), 

    uint16_data_set@p_data	PTR unsigned int  size(1) Largest target is 1
		 -> main@cmd(BANK1[1]), 

    uint8_data_set@p_data	PTR unsigned char  size(1) Largest target is 1
		 -> main@cmd(BANK1[1]), 

    extract_receive_packet@p_data_len_buf	PTR unsigned char  size(1) Largest target is 1
		 -> main@r_data_len(BANK1[1]), 

    extract_receive_packet@p_data_buf	PTR unsigned char  size(1) Largest target is 30
		 -> main@r_data(BANK1[30]), 

    extract_receive_packet@p_data_type_buf	PTR unsigned char  size(1) Largest target is 1
		 -> main@r_data_type(BANK1[1]), 

    sent_data_set@p_data	PTR void  size(1) Largest target is 1
		 -> main@cmd(BANK1[1]), 


Critical Paths under _main in COMMON

    _main->___fttol
    _main->_receive_data_master
    _main->_sent_data_set
    _sent_data_set->_uint16_data_set
    _uint16_data_set->_uint16_to_byte_array
    _double_data_set->_double_to_byte_array
    _send_data_master->_spi_master_send
    _receive_data_master->_flag_check
    _flag_check->_spi_master_receive
    _put_string->_put_char
    _number_to_string_char->convert@process_10
    convert@process_100->convert@process_10
    convert@process_10->___awdiv
    convert@process_10->convert@process_1
    _get_pt->_get_adcon
    _get_adcon->___lwtoft
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft
    ___ftneg->_get_adcon
    ___ftdiv->_get_adcon
    ___ftadd->_get_adcon
    _extract_receive_packet->_rx_packet_clear

Critical Paths under _main in BANK0

    _main->_get_temp
    _sent_data_set->_double_data_set
    _number_to_string_char->convert@process_100
    convert@process_100->convert@process_10
    _get_temp->_get_pt
    _get_pt->___ftdiv
    _get_adcon->___ftmul
    ___ftneg->_get_adcon
    ___ftdiv->___ftadd
    ___ftadd->___ftneg

Critical Paths under _main in BANK1

    _get_temp->_get_pt

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                51    51      0   32361
                                             72 BANK0      3     3      0
                                             30 BANK1     43    43      0
                            ___fttol
                        _ad_con_init
             _extract_receive_packet
                           _get_temp
              _number_to_string_char
                      _pic_port_init
                           _put_char
                         _put_string
                _receive_data_master
                   _send_data_master
                      _sent_data_set
                   _spi_master_start
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_master_start                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sent_data_set                                        8     6      2    1593
                                             12 COMMON     2     0      2
                                              7 BANK0      6     6      0
                             ___wmul
                    _double_data_set
                    _uint16_data_set
                     _uint8_data_set
 ---------------------------------------------------------------------------------
 (2) _uint8_data_set                                       3     2      1     126
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _uint16_data_set                                      7     6      1     435
                                              5 COMMON     7     6      1
               _uint16_to_byte_array
 ---------------------------------------------------------------------------------
 (4) _uint16_to_byte_array                                 5     4      1     190
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (2) _double_data_set                                      9     8      1     503
                                              9 COMMON     2     1      1
                                              0 BANK0      7     7      0
               _double_to_byte_array
 ---------------------------------------------------------------------------------
 (3) _double_to_byte_array                                 9     8      1     260
                                              0 COMMON     9     8      1
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     198
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _send_data_master                                     6     4      2     994
                                              4 COMMON     6     4      2
                    _spi_master_send
                    _tx_packet_clear
 ---------------------------------------------------------------------------------
 (2) _tx_packet_clear                                      2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _receive_data_master                                  4     4      0    2150
                                             10 COMMON     4     4      0
                         _flag_check
                 _spi_master_receive
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (2) _flag_check                                           5     5      0    1042
                                              5 COMMON     5     5      0
                 _spi_master_receive
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (2) _spi_master_send                                      4     3      1     598
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _spi_master_receive                                   5     3      2     332
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _put_string                                           2     2      0     121
                                              1 COMMON     2     2      0
                           _put_char
 ---------------------------------------------------------------------------------
 (2) _put_char                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _pic_port_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _number_to_string_char                                5     4      1    6332
                                             12 BANK0      5     4      1
                             ___bmul
                   convert@process_1
                  convert@process_10
                 convert@process_100
 ---------------------------------------------------------------------------------
 (2) convert@process_100                                   7     5      2    3088
                                              5 BANK0      7     5      2
                            ___awmod
                  convert@process_10
 ---------------------------------------------------------------------------------
 (3) convert@process_10                                   10     8      2    2107
                                              9 COMMON     5     3      2
                                              0 BANK0      5     5      0
                            ___awdiv
                            ___awmod
                   convert@process_1
 ---------------------------------------------------------------------------------
 (4) convert@process_1                                     9     7      2     415
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     720
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     512
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     145
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _get_temp                                            11     8      3   20116
                                             61 BANK0     11     8      3
                            ___ftadd
                            ___ftdiv
                             _get_pt
 ---------------------------------------------------------------------------------
 (2) _get_pt                                              36    33      3   13880
                                             58 BANK0      3     0      3
                                              0 BANK1     30    30      0
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                          _get_adcon
 ---------------------------------------------------------------------------------
 (3) _get_adcon                                           11     8      3    4659
                                             12 COMMON     1     1      0
                                             16 BANK0     10     7      3
                            ___ftmul
                           ___lwtoft
                          _bit_shift
 ---------------------------------------------------------------------------------
 (5) _bit_shift                                            6     5      1     190
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (4) ___lwtoft                                             4     1      3    1782
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2563
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     151
                                             26 BANK0      3     0      3
                            ___ftmul (ARG)
                          _get_adcon (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2729
                                             42 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                          _get_adcon (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3369
                                             29 BANK0     13     7      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                          _get_adcon (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _extract_receive_packet                               5     3      2     314
                                              2 COMMON     5     3      2
                    _rx_packet_clear
 ---------------------------------------------------------------------------------
 (2) _rx_packet_clear                                      2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ad_con_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     305
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fttol
   _ad_con_init
   _extract_receive_packet
     _rx_packet_clear
   _get_temp
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _get_adcon (ARG)
           ___ftmul
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft
             ___ftpack
           _bit_shift
       ___ftpack (ARG)
       _get_adcon (ARG)
         ___ftmul
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft
           ___ftpack
         _bit_shift
     ___ftdiv
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           _get_adcon (ARG)
             ___ftmul
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft
               ___ftpack
             _bit_shift
         ___ftpack (ARG)
         _get_adcon (ARG)
           ___ftmul
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft
             ___ftpack
           _bit_shift
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _get_adcon (ARG)
           ___ftmul
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft
             ___ftpack
           _bit_shift
       ___ftpack (ARG)
       _get_adcon (ARG)
         ___ftmul
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft
           ___ftpack
         _bit_shift
     _get_pt
       ___ftadd
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           _get_adcon (ARG)
             ___ftmul
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft
               ___ftpack
             _bit_shift
         ___ftpack (ARG)
         _get_adcon (ARG)
           ___ftmul
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft
             ___ftpack
           _bit_shift
       ___ftdiv
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             _get_adcon (ARG)
               ___ftmul
                 ___ftpack
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft
                 ___ftpack
               _bit_shift
           ___ftpack (ARG)
           _get_adcon (ARG)
             ___ftmul
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft
               ___ftpack
             _bit_shift
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           _get_adcon (ARG)
             ___ftmul
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft
               ___ftpack
             _bit_shift
         ___ftpack (ARG)
         _get_adcon (ARG)
           ___ftmul
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft
             ___ftpack
           _bit_shift
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         _get_adcon (ARG)
           ___ftmul
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft
             ___ftpack
           _bit_shift
       _get_adcon
         ___ftmul
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft
           ___ftpack
         _bit_shift
   _number_to_string_char
     ___bmul
     convert@process_1
     convert@process_10
       ___awdiv
       ___awmod
       convert@process_1
     convert@process_100
       ___awmod
       convert@process_10
         ___awdiv
         ___awmod
         convert@process_1
   _pic_port_init
   _put_char
   _put_string
     _put_char
   _receive_data_master
     _flag_check
       _spi_master_receive
       _spi_master_send
     _spi_master_receive
     _spi_master_send
   _send_data_master
     _spi_master_send
     _tx_packet_clear
   _sent_data_set
     ___wmul
     _double_data_set
       _double_to_byte_array
     _uint16_data_set
       _uint16_to_byte_array
     _uint8_data_set
   _spi_master_start
   _uart_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      E5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4B      4B       5       93.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     49      4A       7       92.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      42       9       68.8%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      E5      12        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Nov 23 19:51:19 2017

                                    pc 0002                         ___bmul@product 0072  
                          __CFG_CP$OFF 0000                            _SSPSTATbits 0094  
                         ___awdiv@sign 0076                 ??_uint16_to_byte_array 0071  
                                   fsr 0004                    ___wmul@multiplicand 0072  
                         ___ftadd@exp1 0049                           ___ftadd@exp2 0048  
                 __size_of_ad_con_init 000B                           ___ftadd@sign 0047  
                                  l106 0E3C                                    l203 0BDD  
                                  l212 0C75                                    l221 0C8D  
                                  l205 0BE0                                    l214 0C77  
                                  l206 0BE3                                    l223 0C90  
                                  l215 0C79                                    l143 0CAB  
                                  l224 0C93                                    l217 0C88  
                                  l250 097C                                    l162 0BFA  
                                  l154 0B1C                                    l148 0A9D  
                                  l194 0BC5                                    l620 0EE8  
                                  l196 0BC7                                    l452 0A5F  
                                  l621 0EF0                                    l613 0ED3  
                                  l365 0D44                                    l197 0BC9  
                                  l199 0BD8                                    l704 00BE  
                                  l644 039E                                    _RB7 0037  
                         __CFG_CPD$OFF 0000                   uint8_data_set@p_data 0072  
                                  fsr0 0004                                    indf 0000  
                         ___awmod@sign 0076            send_data_master@destination 0079  
               ??_double_to_byte_array 0071                           __CFG_FOSC$HS 0000  
                         __CFG_LVP$OFF 0000                           ___ftdiv@cntr 0054  
                         ___ftdiv@sign 0059                                   l2010 0364  
                                 l2012 0370                                   l2004 034F  
                                 l2022 038E                                   l2014 0375  
                                 l2032 03C2                                   l2024 039A  
                                 l2016 0379                                   l2120 0B32  
                                 l2042 03E5                                   l2028 03B0  
                                 l2052 0183                                   l2310 0022  
                                 l2150 0C2E                                   l2142 0C12  
                                 l2080 01FD                                   l2072 01DE  
                                 l2240 09BE                                   l2128 0B4B  
                                 l2058 0199                                   l2226 0A57  
                                 l2412 0AF6                                   l2244 09C4  
                                 l2316 0039                                   l2164 0A11  
                                 l2190 09F7                                   l2414 0B0E  
                                 l2326 0A35                                   l2158 0A04  
                                 l2334 0E10                                   l2342 0E31  
                                 l2184 09EA                                   l1720 0EAC  
                                 l2280 0F55                                   l2272 0F1E  
                                 l1800 0DDB                                   l2328 0A50  
                                 l2336 0E1B                                   l2520 0501  
                                 l2426 0064                                   l1730 0ED8  
                                 l1722 0EB8                                   l2338 0E26  
                                 l2530 0519                                   l2452 00B3  
                                 l2444 0096                                   l1732 0EE2  
                                 l1724 0EBD                                   l1716 0EA5  
                                 l1812 0CF6                                   l1900 0BCB  
                                 l2532 0530                                   l2454 00C1  
                                 l2446 00A6                                   l1830 0D1F  
                                 l1902 0BD6                                   l2366 0132  
                                 l1824 0D03                                   l1816 0CFD  
                                 l1752 0C3C                                   l1920 0C96  
                                 l2368 0154                                   l2464 0402  
                                 l2458 00CF                                   l1826 0D11  
                                 l1834 0D2A                                   l1754 0C52  
                                 l1922 0CA1                                   l1914 0C7B  
                                 l1906 0BE6                                   l2394 0FC9  
                                 l1916 0C86                                   l1908 0BF1  
                                 l2396 0FE8                                   l1870 02A0  
                                 l1854 0251                                   l1774 0D9C  
                                 l1838 0D32                                   l1848 023B  
                                 l1792 0DC8                                   l1784 0DA4  
                                 l1768 0D91                                   l1952 0E71  
                                 l2488 0479                                   l1882 02C8  
                                 l1866 0290                                   l1786 0DB2  
                                 l1954 0E7E                                   l2498 0498  
                                 l1796 0DD3                                   l1982 031F  
                                 l1878 02B8                                   l1992 0335  
                                 l1986 0326                                   STR_1 0827  
                                 STR_2 083C                                   u2105 0365  
                                 u2135 037A                                   u3007 0FDE  
                                 u1505 0EDB                                   u3017 0FF6  
                                 u2075 0350                                   u3027 0CB9  
                                 u2165 038F                                   u2245 01AB  
                                 u3037 0CCC                                   u2255 01BD  
                                 u3047 0CE1                                   u1545 0EF7  
                                 u1465 0EB1                                   u2265 01DF  
                                 u2505 0F1C                                   u1625 0DA7  
                                 u2275 01F0                                   u2515 0F53  
                                 u1485 0ECC                                   u2285 01FE  
                                 u1805 025D                                   u1645 0DB3  
                                 u1725 0D06                                   u1565 0C45  
                                 u1815 026F                                   u1575 0B5F  
                                 u1655 0DBF                                   u2455 0A60  
                                 u1905 02D1                                   u1585 0B74  
                                 u1665 0DC9                                   u1745 0D17  
                                 u2465 0A67                                   u2635 006B  
                                 u1755 0D20                                   u1845 02A1  
                                 u1855 02A9                                   u2665 0097  
                                 u2907 00F1                                   u2917 0102  
                                 u2695 00B5                                   u1895 02C9  
                                 u2927 0117                                   u2937 012C  
                                 u2857 0415                                   u2947 014A  
                                 u2867 0425                                   _RCIF 0065  
                                 u2957 0162                                   u2877 04B2  
                                 u2967 0F8A                                   u2887 04EA  
                                 u2977 0F9D                                   u2897 04FA  
                                 u2987 0FB0                                   u2997 0FC3  
                                 _TXIF 0064                           __CFG_WRT$OFF 0000  
                                 _main 03FF                           ___ftpack@arg 0070  
                     ??_uint8_data_set 0071                           ___ftpack@exp 0073  
                                 btemp 007E                          __CFG_BOREN$ON 0000  
                                 ltemp 007E                                   start 0000  
                                 ttemp 007E                                   wtemp 007E  
                     tx_packet_clear@i 0071                      ___bmul@multiplier 0073  
                _number_to_string_char 0009                           ___ftmul@cntr 002E  
              extract_receive_packet@i 0076          spi_master_receive@destination 0074  
                         ___ftmul@sign 002F                    _receive_data_master 0F75  
                         ___fttol@exp1 007D                           ___fttol@lval 0079  
                    ??_double_data_set 007A                                  ?_main 0070  
                      __end_of___awdiv 0DE0                        __end_of___ftadd 03FF  
                        __CFG_WDTE$OFF 0000                        __end_of___awmod 0D37  
                      __end_of___ftdiv 0223                        __end_of___ftneg 0995  
                      __end_of___ftmul 02F6                        ___awdiv@divisor 0070  
                      __end_of___fttol 00D8                 uint8_data_set@data_len 0070  
                      ___awdiv@counter 0075                                  _RCREG 001A  
                                _RCSTA 0018                                  _SPBRG 0099  
                                _PORTA 0005                                  _PORTB 0006  
                                _PORTC 0007                                  _PORTD 0008  
                                _PORTE 0009                                  _TRISA 0085  
                                _TRISB 0086                                  _TRISC 0087  
                                _TRISD 0088                                  _TRISE 0089  
                                _TXREG 0019                                  _TXSTA 0098  
                    put_char@byte_data 0070              __size_ofconvert@process_1 003C  
                        __CFG_PWRTE$ON 0000                  spi_master_receive@buf 0073  
                 ?_receive_data_master 0070       double_to_byte_array@p_data_array 0070  
                        ___ftpack@sign 0074               __end_of_send_data_master 016B  
                                main@i 00E8                       ?_uint16_data_set 0075  
                                pclath 000A                                  ltemp0 007E  
                                ltemp1 0082                                  ltemp2 0086  
                                ltemp3 0080                                  ttemp0 007E  
                                ttemp1 0081                                  ttemp2 0084  
                                ttemp3 0087                                  ttemp4 007F  
                                status 0003                                  wtemp0 007E  
                                wtemp1 0080                                  wtemp2 0082  
                                wtemp3 0084                                  wtemp4 0086  
                                wtemp5 0088                                  wtemp6 007F  
                     bit_shift@p_adres 0070            __size_of_spi_master_receive 003D  
              ?_extract_receive_packet 0072                        __initialization 07F2  
                uint16_data_set@p_data 007A                           __end_of_main 0537  
                   spi_master_send@buf 0072                                 ??_main 0068  
                        ___fttol@sign1 0078       uint16_to_byte_array@p_data_array 0070  
                ??_receive_data_master 007A                                 _ADCON0 001F  
                               _ADCON1 009F                                 _ADRESH 001E  
                               _ADRESL 009E                       ___awdiv@dividend 0072  
                     __end_of___ftpack 0F09                     convert@process_100 0B85  
                   convert@process_1@i 0075                       __end_of___lwtoft 09E1  
                      _rx_packet_clear 09E1                                 _TRISB7 0437  
                               _TRISC6 043E                                 _TRISC7 043F  
                               _SSPBUF 0013               number_to_string_char@buf 0030  
             number_to_string_char@num 002C         __end_of_extract_receive_packet 0B1B  
               ?_number_to_string_char 002C                    ?convert@process_100 0025  
                     __end_of_get_temp 0F75                                 ___bmul 09BC  
                               ___wmul 0A55                              ??___awdiv 0074  
                            ??___ftadd 0043                              ??___awmod 0074  
                            ??___ftdiv 0050                              ??___ftneg 007D  
                            ??___ftmul 0026                              ??___fttol 0074  
                               _get_pt 0537                  double_data_set@p_data 0025  
                     ___awdiv@quotient 0077                        ___awmod@divisor 0070  
                      ___awmod@counter 0075                  ___ftmul@f3_as_product 002B  
                 ??convert@process_100 0027                       __end_of_put_char 0983  
            __size_of_spi_master_start 001F                __end_of__initialization 07FC  
                           ___ftadd@f1 003D                             ___ftadd@f2 0040  
                           ___ftdiv@f1 004D                             ___ftdiv@f2 004A  
                           ___ftdiv@f3 0055                             ___ftneg@f1 003A  
                  ___bmul@multiplicand 0070                             ___ftmul@f1 0020  
                           ___ftmul@f2 0023                             ___fttol@f1 0070  
                       __pcstackCOMMON 0070                  __end_of_sent_data_set 0E3D  
                  spi_master_send@data 0070                             ___lwtoft@c 0078  
                   __size_of_bit_shift 0037                       convert@process_1 0C31  
                   __size_of_get_adcon 0050                  flag_check@destination 0079  
              __end_of_rx_packet_clear 09FB                             __pbssBANK1 00E9  
                           __pbssBANK3 0190             uint16_to_byte_array@p_data 0074  
               get_adcon@voltage_value 0033               __size_of_spi_master_send 003A  
               __size_of_pic_port_init 000F                        _double_data_set 0BF7  
             __size_of_tx_packet_clear 001A                             __pmaintext 03FF  
                              ?___bmul 0070                                ?___wmul 0070  
                        ??_ad_con_init 0070                                ?_get_pt 005A  
                           _flag_check 0CAA                              ?___ftpack 0070  
        __size_of_uint16_to_byte_array 0026                              ?___lwtoft 0078  
                   __size_of_uart_init 000D                    convert@process_10@i 0023  
                       main@r_data_len 00E7         receive_data_master@destination 007D  
        __size_of_double_to_byte_array 0029                              ?_get_temp 005D  
              bit_shift@bit_mask_for_l 0826                             __stringtab 0800  
                    ?_send_data_master 0074                       _rx_packet_status 00E9  
                   ??_send_data_master 0076                     uint16_data_set@buf 0077  
                    __end_of_bit_shift 0B85                      __end_of_get_adcon 0D87  
                      __size_of___bmul 0011                                ___awdiv 0D87  
                              ___ftadd 02F6                                ___awmod 0CEC  
                              ___ftdiv 016B                                ___ftneg 098B  
                      __size_of___wmul 0021                                ___ftmul 0223  
                              ___fttol 004C                              ?_put_char 0070  
              spi_master_receive@p_get 0070                        __size_of_get_pt 02BB  
                           ??___ftpack 0075                                __ptext1 09A0  
                              __ptext2 0A15                                __ptext3 0DE0  
                              __ptext4 0A9C                                __ptext5 0B1B  
                              __ptext6 0A76                                __ptext7 0BF7  
                              __ptext8 0AC2                                __ptext9 0A55  
                           ??___lwtoft 007B                          _pic_port_init 09AD  
                  __end_of_ad_con_init 09A0                       ___awmod@dividend 0072  
                     ?_rx_packet_clear 0070                         main@temp_buf_c 00DF  
                              get_pt@a 00BB                                get_pt@b 00A6  
                     _spi_master_start 0A15                                main@cmd 00E6  
                              clrloop0 0984                             ??_get_temp 007D  
                 end_of_initialization 07FC                  convert@process_10@val 0022  
                convert@process_10@num 0024                __end_of_double_data_set 0C31  
              ??_number_to_string_char 002D             __end_of_spi_master_receive 0CAA  
                    __end_of_uart_init 09AD              sent_data_set@byte_of_type 007D  
             __size_of_uint16_data_set 0033                      ??_spi_master_send 0071  
                     double_data_set@i 0026                             ??_put_char 0070  
              __size_of_uint8_data_set 0026                            ?_flag_check 0070  
                    ??_tx_packet_clear 0070                              _PORTAbits 0005  
          __end_of_receive_data_master 1000                              _PORTCbits 0007  
                       ?_pic_port_init 0070                  double_to_byte_array@i 0078  
                            _TRISAbits 0085                              _TRISCbits 0087  
                           _put_string 0A34               convert@process_100@p_buf 0026  
                          ___ftdiv@exp 0058                             main@r_data 00BE  
                           main@send_1 0806                             main@send_2 0815  
                           main@temp_c 00E4               __end_ofconvert@process_1 0C6D  
              uint16_data_set@data_len 0075                  sent_data_set@data_len 007C  
                          ___ftmul@exp 002A                         __end_of___bmul 09CD  
                          _ad_con_init 0995                         __end_of___wmul 0A76  
                        put_string@str 0072                         __end_of_get_pt 07F2  
           spi_master_send@destination 0073               convert@process_10@p_flag 0079  
                  start_initialization 07F2            __size_ofconvert@process_100 0038  
                     ?_double_data_set 0079   extract_receive_packet@p_data_len_buf 0073  
                  __size_of_flag_check 0042                      convert@process_10 0E3D  
       convert@process_10@remainder_10 0021        __end_ofbit_shift@bit_mask_for_l 0827  
                     uint16_data_set@i 007B                     ?convert@process_10 0079  
                             ??___bmul 0071                               ??___wmul 0074  
                             ??_get_pt 007D       convert@process_100@remainder_100 002B  
                       flag_check@flag 0078                    ??convert@process_10 007B  
                    ??_uint16_data_set 0076          double_to_byte_array@converter 0073  
                      ??_pic_port_init 0070                      __size_of___ftpack 006C  
            convert@process_100@p_flag 0025                              ___latbits 0002  
                    __size_of___lwtoft 0014                          __pcstackBANK0 0020  
                        __pcstackBANK1 00A0                    sent_data_set@p_data 002C  
             ??_extract_receive_packet 0074                 __size_of_sent_data_set 005D  
            __end_ofconvert@process_10 0E9D           __end_of_uint16_to_byte_array 0A9C  
                          ?_put_string 0070                      __size_of_get_temp 006C  
         __end_of_double_to_byte_array 0AEB                              _bit_shift 0B4E  
                             ?___awdiv 0070               __end_of_spi_master_start 0A34  
                             ?___ftadd 003D                               ?___awmod 0070  
                             ?___ftdiv 004A                               ?___ftneg 003A  
                             ?___ftmul 0020                               ?___fttol 0070  
                       _uint8_data_set 0A9C              __size_of_send_data_master 0093  
                            _get_adcon 0D37             double_to_byte_array@p_data 0077  
                            __pstrings 0800                      __size_of_put_char 0008  
            send_data_master@data_type 0074                            _get_pt$1100 00B5  
                          _get_pt$1101 00AC                            _get_pt$1102 00AF  
                          _get_pt$1099 00A9                        _spi_master_send 0BBD  
                       ___wmul@product 0074         __size_of_number_to_string_char 0043  
                            clear_ram0 0983          __end_of_number_to_string_char 004C  
                      _tx_packet_clear 09FB                   convert@process_1@val 0078  
                 convert@process_1@num 0074                 __end_of_uint8_data_set 0AC2  
                           ?_bit_shift 0070                              _uart_init 09A0  
                      main@r_data_type 00E5                           ??_flag_check 0075  
                        _sent_data_set 0DE0                      get_temp@t_average 0065  
                           ?_get_adcon 0030                     _spi_master_receive 0C6D  
                           _ADCON0bits 001F                            __stringbase 0805  
                            _rx_packet 01B1                      ___wmul@multiplier 0070  
                  __size_of_put_string 0021                              get_temp@i 0063  
                            _tx_packet 0190                    ?_spi_master_receive 0070  
              convert@process_10@p_buf 007A        __size_of_extract_receive_packet 0030  
           __size_ofconvert@process_10 0060                     __end_of_flag_check 0CEC  
             __size_of_rx_packet_clear 001A  extract_receive_packet@p_data_type_buf 0075  
                 ??_spi_master_receive 0072                      ?convert@process_1 0070  
                      ?_uint8_data_set 0070                             ?_uart_init 0070  
                   ??convert@process_1 0072                         ?_sent_data_set 007C  
                         ?_ad_con_init 0070                       __size_of___awdiv 0059  
                     __size_of___ftadd 0109                       __size_of___awmod 004B  
                     __size_of___ftdiv 00B8                       __size_of___ftneg 000A  
                     __size_of___ftmul 00D3                       __size_of___fttol 008C  
                             ___ftpack 0E9D                convert@process_1@p_flag 0070  
                   __end_of__stringtab 0806                      send_data_master@i 0078  
                 _uint16_to_byte_array 0A76                               ___lwtoft 09CD  
              double_data_set@data_len 0079                __end_of_spi_master_send 0BF7  
                             __ptext10 00D8                               __ptext11 09FB  
                             __ptext20 0B85                               __ptext12 0F75  
                             __ptext21 0E3D                               __ptext13 0CAA  
                             __ptext30 09CD                               __ptext22 0C31  
                             __ptext14 0BBD                               __ptext31 0223  
                             __ptext23 0CEC                               __ptext15 0C6D  
                             __ptext32 098B                               __ptext24 0D87  
                             __ptext16 0A34                               __ptext33 016B  
                             __ptext25 09BC                               __ptext17 097B  
                             __ptext34 02F6                               __ptext26 0F09  
                             __ptext18 09AD                               __ptext35 0E9D  
                             __ptext27 0537                               __ptext19 0009  
                             __ptext36 0AEB                               __ptext28 0D37  
                             __ptext37 09E1                               __ptext29 0B4E  
                             __ptext38 0995                               __ptext39 004C  
         __size_of_receive_data_master 008B                   _double_to_byte_array 0AC2  
 __end_ofuint16_to_byte_array@bit_mask 0826           uint16_to_byte_array@bit_mask 0824  
                             _get_temp 0F09                __end_of_tx_packet_clear 0A15  
            convert@process_1@divide_1 0077                          __size_of_main 0138  
                 receive_data_master@i 007C                        _uint16_data_set 0B1B  
                          ??_bit_shift 0071                       _send_data_master 00D8  
                             _put_char 097B                 _extract_receive_packet 0AEB  
                             get_pt@r1 00B2                               get_pt@r2 00A0  
                             get_pt@t1 00B8                               get_pt@t2 00A3  
                          ??_get_adcon 007C                 convert@process_100@num 002A  
                             main@temp 00DC                  ?_uint16_to_byte_array 0070  
           __end_ofconvert@process_100 0BBD                       rx_packet_clear@i 0071  
                   double_data_set@buf 0020                  ?_double_to_byte_array 0070  
               convert@process_1@p_buf 0071                           ??_put_string 0071  
                    get_adcon@ad_value 0038                          _get_temp$1103 0060  
                            stringcode 0800               __size_of_double_data_set 003A  
                      ??_sent_data_set 0027                            ??_uart_init 0070  
                    ??_rx_packet_clear 0070                      ?_spi_master_start 0070  
                   ??_spi_master_start 0070                  __end_of_pic_port_init 09BC  
                   __end_of_put_string 0A55                      get_adcon@my_adres 0036  
                             stringdir 0800                               stringtab 0800  
                   __end_ofmain@send_1 0815                     __end_ofmain@send_2 0824  
            number_to_string_char@flag 002F       extract_receive_packet@p_data_buf 0072  
                     ?_spi_master_send 0070                __end_of_uint16_data_set 0B4E  
                     ?_tx_packet_clear 0070       send_data_master@data_end_command 0075  
          convert@process_10@divide_10 0020                             _SSPCONbits 0014  
                  bit_shift@p_ad_value 0075  
